{"version":3,"sources":["models/AttributeType.js","models/types/index.js","helpers.js","models/Edge.js","components/util.js","models/NodeBase.js","models/nodes/ToneNode.js","performance/index.js","models/nodes/Neural.js","models/nodes/SoundFont.js","models/nodes/MapperNode.js","models/nodes/IntervalNode.js","threeUtil/Stats.js","threeUtil/Base.js","models/nodes/ThreeNode.js","models/nodes/Geometries.js","models/nodes/MaterialNode.js","models/nodes/Logic.js","models/nodes/MeshNode.js","models/nodes/Midi.js","vendor/JsonTree/js/themes/base16/rjv-themes.js","vendor/JsonTree/js/themes/styleConstants.js","vendor/JsonTree/js/themes/getStyle.js","vendor/JsonTree/js/components/DataTypes/DataTypeLabel.js","vendor/JsonTree/js/components/DataTypes/Regexp.js","models/nodes/UtilNodes.js","models/nodes/Vector2D.js","models/nodes/Vector3D.js","models/nodes/Dom.js","models/nodes/String.js","models/nodes/Music.js","models/nodes/MathNodes.js","models/nodes/primitives.js","models/nodes/index.js","boot.js","components/NodeInputListItem.js","components/NodeInputList.js","components/NodeOutputListItem.js","components/NodeOutputList.js","utils/vector.js","components/Node.js","models/Graph.js","components/SVGComponent.js","components/TrashIcon.js","components/Spline.js","components/AllEdges.js","components/NodeGraph.js","vendor/JsonTree/js/helpers/util.js","vendor/JsonTree/js/components/DataTypes/Boolean.js","vendor/JsonTree/js/components/DataTypes/Date.js","vendor/JsonTree/js/components/DataTypes/Float.js","vendor/JsonTree/js/helpers/dispatcher.js","vendor/JsonTree/js/stores/ObjectAttributes.js","vendor/JsonTree/js/components/DataTypes/Function.js","vendor/JsonTree/js/components/DataTypes/Nan.js","vendor/JsonTree/js/components/DataTypes/Null.js","vendor/JsonTree/js/components/DataTypes/Integer.js","vendor/JsonTree/js/components/DataTypes/String.js","vendor/JsonTree/js/components/DataTypes/Undefined.js","vendor/JsonTree/js/helpers/parseInput.js","vendor/JsonTree/js/helpers/stringifyVariable.js","vendor/JsonTree/js/components/icons.js","vendor/JsonTree/js/components/VariableEditor.js","vendor/JsonTree/js/components/CopyToClipboard.js","vendor/JsonTree/js/components/VariableMeta.js","vendor/JsonTree/js/components/ObjectName.js","vendor/JsonTree/js/components/ToggleIcons.js","vendor/JsonTree/js/components/ArrayGroup.js","vendor/JsonTree/js/components/DataTypes/Object.js","vendor/JsonTree/js/components/JsonViewer.js","vendor/JsonTree/js/components/ObjectKeyModal/ObjectKeyModal.js","vendor/JsonTree/js/components/ObjectKeyModal/AddKeyRequest.js","vendor/JsonTree/js/components/ValidationFailure.js","vendor/JsonTree/js/index.js","components/AttributePane/InfoPopup.js","components/AttributePane/index.js","components/SearchBar.js","components/FileUpload.js","components/SaveDialog.js","components/NodeSearcher.js","components/ExampleSearch.js","docgen.js","components/Toolbar.js","components/dialogs/LoadPrompt.js","components/Zoomer.js","App.js","redux/ducks/graph.js","utils/array.js","redux/rootReducer.js","redux/rootStore.js","serviceWorker.js","index.js"],"names":["defaultMetadata","required","TypeImpl","data","desc","d","description","aliased","name","typeDescription","meta","metadata","isA","t","id","isPrimitive","type","isComplex","hasHelpInfo","this","schema","defaultValue","parse","serialize","TypeBuilder","v","validate","Error","typeRegistry","attr","parser","serializer","val","des","Symbol","registerType","window","Types","primitiveSerializer","number","withType","havingDefault","withParser","parseInt","withSerializer","build","JSON","stringify","String","a","Boolean","Date","toISOString","undefined","withSchema","x","y","z","uuid","replace","c","r","Math","random","toString","Edge","from","to","fromPort","toPort","_notifyCount","notifyListener","outDataFor","inDataFor","change","notify","fromId","toId","j","nodes","find","n","outOffset","index","$eOutL","$eTop","$eHeight","$eInL","signatureFor","clazz","maxLen","style","argT","inKeys","join","returnT","outKeys","length","substring","color","NodeBase","attrs","props","nodeId","title","inputs","outputs","outputCache","live","listeners","_process","keys","force","process","forward","omitBy","k","isEqual","onAddToGraph","willBecomeLive","willBeRemoved","beforeConnectOut","edge","afterConnectOut","beforeConnectIn","afterConnectIn","beforeDisconnectOut","afterDisconnectOut","beforeDisconnectIn","afterDisconnectIn","addInput","input","push","initialValue","_onInputChange","_notifyLive","sKeys","constructor","iKeys","map","i","concat","every","includes","addOutput","out","removeInput","onRemove","filter","firstInput","forKey","removeOutput","output","oldProps","Object","forEach","willReceiveProps","notifyOutputs","onInputChange","registerListener","listener","key","removeListener","newProps","prevProps","manual","ofKeyChanges","asList","Array","isArray","changes","pick","e","notifyAllOutputs","inKeyAt","outKeyAt","connectedInputKeys","uniq","connectedOutputKeys","defName","nameFrom","value","state","hasVal","changeables","p","changeableProps","s","changeableState","o","otherChangeables","outs","displayableOutputs","Inputs","Internals","Other","Outputs","get","stateSchema","onChange","inputSchema","cloneDeep","pushToState","stateKey","exclude","setPath","partial","allKeys","accept","set","signature","stateS","fromPairs","serialized","console","error","getRegistryName","initializeState","defaultState","defaultProps","displayName","startCase","registryName","node","serial","load","_inKeys","_inKeyIdxMap","_outKeys","_outKeyIdxMap","_displayInKeys","shortNames","_displayOutKeys","json","NodeRegistry","Piano","require","URL_BASE","TT","AudioNode","object","Config","Synth","Panner","Gain","FeedbackDelay","Call","any","ContextDestinationNode","Tone","context","destination","ConnectNode","logConnect","connect","disconnect","AudioMasterNode","_connectedTo","toMaster","ToContextDestinationNode","PannerNode","panner","pan","VolumeNode","volume","Volume","CompressorNode","compressor","Compressor","threshold","ratio","ReverbNode","reverb","Freeverb","dampening","time","roomSize","FeedbackDelayNode","feedbackDelay","delayTime","feedback","AudioDelayNode","delay","createDelay","AudioGainNode","gain","createGain","AttackReleaseNode","synth","note","duration","triggerAttackRelease","Draw","schedule","draw","string","call","PlayerNode","_loaded","_player","Player","_makePlayer","url","startsWith","_checkStarted","autostart","_setPlayerAttrs","start","player","loop","boolean","SetNoteNode","setNote","voices","ArpeggiateNode","_out","pattern","Pattern","notes","_manageLoop","values","interval","humanize","probability","TimeLoopNode","count","Loop","playbackRate","iterations","Infinity","mute","SynthNode","defaultSynth","_recreateSynth","oscillator","envelope","fwdSignals","attack","release","releaseCurve","DuoSynthNode","filterEnvelope","baseFrequency","octaves","decay","synthOpts","harmonicity","voice0","voice1","vibratoRate","vibratoAmount","DuoSynth","frequency","PianoNode","loaded","piano","velocities","then","TransportTimeNode","_notifyOut","setTimeout","Transport","on","bpm","StartTransportNode","transport","_stopTime","stop","f","fromName","__proto__","toName","log","DENSITY_BIN_RANGES","MIDI_EVENT_ON","MIDI_EVENT_OFF","EVENT_RANGES","EVENT_SIZE","eventOffset","eventRange","minValue","calculateEventSize","pentatonic","Performance","velocityMapListener","midiListener","toneListener","activeVelocities","Map","activeNotes","forgetBias","tf","pitchHistArray","noteDensityBucket","stepsPerSecond","currentTime","startTime","currentVelocity","currentLoopId","lastSample","initialized","modelReady","stopped","fetch","response","manifest","loadWeights","vars","lstmKernel1","lstmBias1","lstmKernel2","lstmBias2","lstmKernel3","lstmBias3","fcB","fcW","resetRnn","resetRnnRepeatedly","refreshConditioning","setTempo","sps","cleanup","intervalId","clearTimeout","generationInterval","noteDensityEncoding","dispose","as1D","pitchHistogram","buffer","pitchHistogramTotal","reduce","prev","toTensor","shape","h","now","performance","generateStep","getConditioning","conditioning","getOutputs","lstm1","lstm2","lstm3","innerOuts","eventInput","toFloat","as2D","logits","matMul","add","sampledOutput","asScalar","_c","_h","loopId","playOutput","dataSync","delta","max","offset","eventType","maxValue","noteNum","floor","Frequency","activeNoteEndTimeSec","timeSec","delete","ceil","HistType","ToneData","MidiData","PerformanceRNNNode","started","_map","_midiMap","action","normalizedVelocity","toneOut","_getSynths","play","midiData","midiOut","_getMidiDevices","device","send","compact","_startModel","_compareHistograms","hist","other","_histForPerformance","split","density","scale","toneData","velocity","keyUp","toMidi","warn","triggerAttack","keyDown","triggerRelease","ToneTypes","SoundFont","SoundFontNode","_options","sustain","_setFont","instrument","inst","opts","SoundFontPlayerNode","_playMap","listening","_playToneData","sf","freq","toNote","_playMidiData","midi","_time","event","_connectMidiIn","midiDevice","soundFont","listenToMidi","NTypes","MapperNode","IntervalNode","_clearSubscription","subscriptionId","clearInterval","_resetCount","_startInterval","setInterval","Stats","mode","container","document","createElement","addPanel","panel","appendChild","dom","showPanel","children","display","cssText","addEventListener","preventDefault","beginTime","prevTime","frames","fpsPanel","Panel","msPanel","self","memory","memPanel","REVISION","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","fg","bg","min","round","PR","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","canvas","width","height","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","drawImage","uniforms","u_resolution","Vector2","u_mouse","u_time","Base","showStats","afterLoad","reset","fog","scene","Scene","body","renderer","removeChild","removeEventListener","resize","composer","EffectComposer","_makeRenderer","stencilBuffer","depthTexture","visibility","renderPass","RenderPass","camera","addPass","initialise","aspect","innerWidth","innerHeight","updateProjectionMatrix","_listenForWindowChanges","_startRendering","startRaw","OrbitControls","animationId","clock","Clock","render","getDelta","Signals","STOP","requestAnimationFrame","cancelAnimationFrame","stats","throttle","target","setSize","antialias","WebGLRenderer","alpha","setPixelRatio","setClearColor","autoClear","loadingManager","LoadingManager","assets","FogExp2","PerspectiveCamera","position","left","top","callback","setupStats","renderToScreen","gui","g","b","Color","ThreeNode","base","added","_start","child","rendered","pass","Object3D","newColor","getClearColor","newAlpha","getClearAlpha","setClearAlpha","fx","clearColor","clearAlpha","AmbientLightNode","light","AmbientLight","DirectionalLightNode","DirectionalLight","copy","hex","rgbToHex","rgb","GlitchPassNode","textureLoader","TextureLoader","onProgress","item","total","texture","magFilter","minFilter","NearestFilter","_render","glitch","threeN","glitchPass","EffectPass","chromaticAberrationPass","aberration","ChromaticAberrationEffect","GlitchEffect","perturbationMap","chromaticAberrationOffset","Vec2","VignettePassNode","effect","VignetteEffect","eskil","darkness","uni","newVal","opacity","ScanlinePassNode","ScanlineEffect","DotScreenPassNode","colorAverageEffect","ColorAverageEffect","DotScreenEffect","blendFunction","angle","PI","blendMode","NoisePassNode","NoiseEffect","TorusKnotGeometryNode","_setGeo","radius","tube","tubularSegments","radialSegments","q","geometry","TorusKnotBufferGeometry","parameters","PlaneGeometryNode","PlaneBufferGeometry","BoxGeometryNode","depth","BoxBufferGeometry","SphereGeometryNode","widthSegments","heightSegments","SphereBufferGeometry","LambertMaterialNode","material","MeshLambertMaterial","transparent","wireframe","ShaderMaterialNode","_setMaterial","ShaderMaterial","vertexShader","fragmentShader","needsUpdate","vertex","fragment","EqualsNode","result","AndNode","memo","OrNode","NotNode","in","MeshNode","mesh","Mesh","rotation","mat","geo","Vec3","MidiOutNode","available","loadAll","navigator","requestMIDIAccess","_setMidi","MidiInNode","defTheme","scheme","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","white","black","globalFontFamily","globalCursor","indentBlockWidth","braceFontWeight","braceCursor","ellipsisFontSize","ellipsisLineHeight","ellipsisCursor","keyMargin","keyLetterSpacing","keyFontStyle","keyBorderRadius","keyColonWeight","keyVerticalAlign","keyOpacity","keyOpacityHover","keyValPaddingTop","keyValPaddingBottom","keyValPaddingRight","keyValBorderLeft","keyValBorderHover","keyValPaddingHover","pushedContentMarginLeft","variableValuePaddingRight","nullFontSize","nullFontWeight","nullPadding","nullBorderRadius","dataTypeFontSize","dataTypeMarginRight","datatypeOpacity","objectSizeBorderRadius","objectSizeFontStyle","objectSizeMargin","clipboardCursor","clipboardCheckMarginLeft","metaDataPadding","arrayGroupMetaPadding","iconContainerWidth","tooltipPadding","editInputHeight","editInputMinWidth","editInputBorderRadius","editInputPadding","editInputMarginRight","editInputFontFamily","iconCursor","iconFontSize","iconPaddingRight","dateValueMarginLeft","iconMarginRight","detectedRowPaddingTop","addKeyCoverBackground","addKeyCoverPosition","addKeyCoverPositionPx","addKeyModalWidth","addKeyModalMargin","addKeyModalPadding","addKeyModalRadius","getDefaultThemeStyling","theme","colors","backgroundColor","ellipsisColor","braceColor","expandedIcon","collapsedIcon","keyColor","arrayKeyColor","objectSize","copyToClipboard","copyToClipboardCheck","objectBorder","dataTypes","date","float","function","integer","nan","null","regexp","background","editVariable","editIcon","cancelIcon","removeIcon","addIcon","checkIcon","border","addKeyModal","labelColor","validationFailure","iconColor","fontColor","colorMap","fontFamily","constants","cursor","ellipsis","fontSize","lineHeight","brace","fontWeight","colon","margin","verticalAlign","objectKeyVal","component","variable_style","paddingTop","paddingRight","paddingBottom","borderLeft","paddingLeft","padding","keyValPadding","_","styles","marginLeft","variableValue","letterSpacing","fontStyle","borderRadius","marginRight","whiteSpace","tooltip","removeVarIcon","addVarIcon","editVarIcon","minHeight","minWidth","right","bottom","marginTop","marginBottom","overflow","boxSizing","transform","getStyle","createStyling","defaultBase16","args","type_name","displayDataTypes","className","Theme","React","PureComponent","InfoLog","anything","JSONParse","ExtractNode","StephenWolfram","currentState","rule","transitions","toBin8","initialState","lIdx","rIdx","num","bin","unshift","reverse","HistoryNode","capacity","shift","JoinNode","array","separator","RegexReplace","regex","parsed","match","re","RegExp","replacement","Vector2D","Vector3D","DomNode","domNode","getElementsByTagName","text","innerText","html","innerHTML","setAttribute","PlusNode","ScaleNode","Scale","tonic","intervals","names","ChordNode","Chord","KeyTriadsNode","Key","TransposeNode","transpose","ChromaNode","chroma","DivideNode","dividend","divisor","SumNode","numbers","ProductNode","IntToIntMathNode","fn","_t","allNodes","NodeInputListItem","hover","onMouseUp","stopPropagation","onMouseOver","setState","onMouseOut","filled","modifier","Component","NodeInputList","onCompleteConnector","items","connected","NodeOutputListItem","onMouseDown","onStart","NodeOutputList","positionOffset","onStartConnector","addVec","v1","v2","subVec","unitVec","dir","scaleVec","MoveBufferPx","Node","_onDelete","onDelete","nis","handleDragStart","dragStart","clientX","clientY","onNodeStart","handleDragStop","onNodeStop","handleDrag","onNodeMove","forceUpdate","_selectNode","onNodeSelect","_deselectNode","onNodeDeselect","handleClick","wx","wy","abs","selected","handleClickOutside","infoShowing","ignore","metaKey","shiftKey","visible","pos","sel","nodeClass","handle","onStop","onDrag","onClick","onDoubleClick","displayInKeys","displayOutKeys","group","combo","label","global","onKeyDown","getInfoShowing","op","graph","infoOpen","getPos","nodePos","selector","createSelector","onClickOutside","HotkeysTarget","Graph","edges","_nodesById","nodeWithId","nodeWithIdF","addNode","setNodes","updatePositions","nodeIds","nodePositions","mapValues","removeNode","removeEdge","addEdge","duplicate","ids","newNodes","uniqBy","flatten","fIdx","indexOf","tIdx","nodesInSpace","frm","file","handler","fileReader","FileReader","onload","readAsText","SVGComponent","TrashIcon","fill","stroke","strokeWidth","cx","cy","Spline","_setListener","listeningOnEdge","_onNotify","el","animate","handleRemove","highlighted","dist","distance","pathString","bezierCurve","cls","ref","cp1x","cp1y","cp2x","cp2y","sqrt","selectInfoOpen","selectPositions","paneId","positions","dragging","source","onRemoveConnector","scaleInverse","mousePos","creatingSpline","centerP","outIdx","src","fromCenter","endOff","outKeyIndex","inIdx","inKeyIndex","NodeGraph","dragOffsets","moving","timeoutId","deltaY","onScroll","zoomIn","zoomOut","onWinResize","onMouseMove","selectCount","_debouncedSetMouse","_getSelected","onNodeStartMove","onNodeStopMove","updates","_setPosFromGraph","updatePos","outputIndex","inIndex","fromNode","toNode","fromAttr","toAttr","onCreateEdge","handleRemoveConnector","onDeleteEdge","idx","_onNodeChange","selSet","all","omit","onDeleteNode","onNodeSelectionChange","_onCanvasDrag","setPan","deltaX","_rootStyle","_onCopy","_selectAll","_pan","move","_panR","_panL","_panD","_panU","cancel","onWheel","zoomReset","showCopy","select","selectedS","selectView","view","_selSet","_zIn","_zOut","_zReset","_setPan","_updatePos","toObj","toType","obj","slice","toLowerCase","getType","isNaN","toLocaleTimeString","weekday","year","month","day","hour","minute","dispatcher","Dispatcher","attributeStore","objects","rjvId","default_value","handleAction","emit","updated_src","updateSrc","request","namespace","new_value","variable_removed","existing_value","deepCopy","walk","splice","copy_namespace","EventEmitter","register","bind","toggleCollapsed","collapsed","AttributeStore","getFunctionDisplay","collapseStringsAfterLength","parseInput","trim","formatResponse","parseFloat","NaN","string_value","DEFAULT_COLOR","CircleMinus","rest","getIconStyle","viewBox","preserveAspectRatio","CirclePlus","SquareMinus","svgStyle","SquarePlus","ArrowRight","ArrowDown","Clippy","RemoveCircle","AddCircle","Add","Edit","CheckCircle","VariableEditor","renderKey","variable","getEditIcon","prepopInput","onEdit","stringifiedValue","stringifyVariable","detected","editMode","editValue","parsedInput","getRemoveIcon","dispatch","getValue","getEditInput","alignItems","inputRef","focus","ctrlKey","submitEdit","placeholder","submit_detected","getDetectedInput","renameKey","editOnHotkey","singleIndent","indentWidth","onSelect","overrideStyle","location","copiedTimer","handleCopy","clickCallback","clipboardValue","execCommand","copied","getClippyIcon","hidden","getObjectSize","size","displayObjectSize","getAddAttribute","key_name","getRemoveObject","onAdd","enableClipboard","getObjectName","parent_type","jsvRoot","display_name","ExpandedIcon","iconStyle","CollapsedIcon","newExpanded","expanded","groupArraysAfterLength","object_padding_left","array_group_padding_left","groups","getExpandedIcon","index_offset","DEPTH_INCREMENT","SINGLE_INDENT","RjvObject","getObjectContent","renderObjectContents","getEllipsis","getObjectMetaData","getBraceEnd","attrType","object_type","variables","rejectMatching","elements","sortKeys","sort","JsonVariable","hasOwnProperty","ObjectComponent","JsonObject","ArrayGroup","getState","IconComponent","getBraceStart","nextProps","prevState","shouldCollapse","polyfill","closeModal","submit","isValid","valid","spellCheck","onKeyPress","ObjectAttributes","active","message","ReactJsonView","getListeners","resetState","addKeyRequest","on_edit_payload","existing_src","editKeyRequest","validationMessage","prevSrc","prevName","prevTheme","newPartialState","validateState","validatedState","theme_keys","isTheme","hoverCloseDelay","hoverOpenDelay","interactionKind","PopoverInteractionKind","HOVER","popoverClassName","transitionDuration","anchor","contentDesc","content","AttributePane","fullDocs","_updateListener","_helpInfo","InfoPopup","CLICK","_docInfo","_changeables","list","flex","truncate","len","_description","_signature","_toggleDocs","_onResize","MultiTypeEditor","_isComplex","_onEdit","_getEdit","complex","disabled","renderItem","modifiers","query","noResults","itemListRenderer","filteredItems","ulRef","itemsParentRef","searcher","FuzzySearch","itemsPredicate","search","itemListPredicate","resetOnSelect","itemRenderer","FileUpload","openFileInput","fileInput","click","_onFile","onFile","SaveDialog","_onChange","_onInputKeyUp","_onSave","saveFile","initial","handleClose","isOpen","icon","onClose","Classes","DIALOG_BODY","onKeyUp","autoFocus","INPUT","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","intent","Intent","PRIMARY","_name","examples","inputProps","loadExample","insertNode","toggleVis","graphVisible","toggleDebug","exportJSON","loadJSON","toggleInfo","toolSection","leftAlign","minimal","large","href","rightAlign","_showHotKeys","dispatchEvent","KeyboardEvent","which","keyCode","bubbles","justifyContent","canOutsideClickClose","zoom","setScale","_setScale","zooms","stepSize","labelStepSize","labelRenderer","showTrackFill","welcomeGraph","defaultNodePos","App","nodeIndex","mostRecentNode","_mousePos","_insertPos","searchOpen","saveOpen","searchingNodes","searchingExamples","promptLoad","_onMouseMove","me","_setGraph","readme","_setInfoOpen","showNode","setInfoOpen","_onSearch","_searchExamples","_exportJSON","exportObj","exportName","dataStr","encodeURIComponent","remove","downloadObj","_closeSave","_loadJSON","fileUpload","_onFileUpload","fromFile","_loadGraph","_reload","_loadExample","_toggleDebug","_addNode","_onNodeSelect","_node","_closeSearch","_showSave","_showNodeSearch","_toggleGraph","_loadUrl","example","exJson","serialization","_nextNode","_prevNode","_toggleInfo","_closePrompt","_manualInsert","showWelcome","exId","decodeURIComponent","hide","debug","inPane","onItemSelect","NodeSearcher","ExampleSearch","LoadPrompt","setHotkeysDialogProps","globalHotkeysGroup","AppWithHK","selectedSlice","createSlice","reducers","payload","infoOpenSlice","range","increments","fixed","cur","toFixed","defView","viewSlice","nodePosSlice","actions","combineReducers","reducer","rootReducer","store","configureStore","hostname","serviceWorker","ready","registration","unregister","Eternal","default","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8c978bf2.chunk.js","sourcesContent":["// @flow\n\nimport type { Node } from 'react';\ntype TypeMetadata = { required: boolean };\n// eslint-disable-next-line no-use-before-define\nexport type TypeMap = { [string]: TypeImpl };\ntype EnumSchema = { [string]: string };\ntype AttributeSchema = TypeMap | EnumSchema;\n// this is facetious, but we need something like it\ntype TypeType = 'primitive' | 'enum' | 'complex';\n\nconst defaultMetadata: TypeMetadata = { required: false };\n\nexport interface AttributeType {\n  /**\n   * Runtime unique id. Maybe we should just use name.\n   */\n  id: Symbol;\n  /**\n   * name of this type. as convention, use all lowercase for primitives and PascalCase for complex\n   */\n  name: string;\n\n  typeDescription: Node;\n\n  /**\n   * We are overloading this type concept for the moment and putting the attribute description in this field.\n   * Usually done through {@link TypeImpl.desc} in an attribute type schema.\n   */\n  description: ?Node;\n  /**\n   * the attribute schema that describes this type. null for primitives\n   */\n  schema: ?AttributeSchema;\n\n  /**\n   * Bag for random type configuration\n   */\n  metadata: TypeMetadata;\n\n  /**\n   * The type of this type. A questionable abstraction, but convenient to support enums\n   */\n  type: TypeType;\n\n  defaultValue: any;\n\n  parse: any => any;\n  serialize: ?(any) => any;\n}\n\nexport class TypeImpl implements AttributeType {\n  id: Symbol;\n  name: string;\n  description: ?Node;\n  typeDescription: Node;\n  schema: ?AttributeSchema;\n  metadata: TypeMetadata;\n  type: TypeType;\n  defaultValue: any;\n  parse: any => any;\n  serialize: ?(any) => any;\n\n  constructor(data: AttributeType) {\n    this.id = data.id;\n    this.name = data.name;\n    this.schema = data.schema;\n    this.metadata = data.metadata;\n    this.type = data.type;\n    this.defaultValue = data.defaultValue;\n    this.description = data.description || data.typeDescription;\n    this.parse = data.parse;\n    this.typeDescription = data.typeDescription;\n    this.serialize = data.serialize;\n  }\n\n  /**\n   * Describe this type. See note about how desc is being overloaded as attribute.\n   * @param d - description of this attribute\n   * @returns {TypeImpl} - A new instance of this type, with the description\n   */\n  desc = (d: Node): TypeImpl => new TypeImpl({ ...this, description: d });\n  aliased = (name: string, typeDescription?: Node): TypeImpl =>\n    typeDescription\n      ? new TypeImpl({ ...this, name, typeDescription })\n      : new TypeImpl({ ...this, name });\n  meta = (metadata: Object): TypeImpl => new TypeImpl({ ...this, metadata });\n  isA = (t: AttributeType) => t.id === this.id;\n  isPrimitive = (): boolean => this.type === 'primitive';\n  isComplex = (): boolean => this.type === 'complex';\n\n  /**\n   * See comment about how type / desc is being overloaded above\n   */\n  hasHelpInfo = (): boolean => this.description !== this.typeDescription;\n}\n\nexport class TypeBuilder {\n  name: string;\n  schema: ?AttributeSchema;\n  metadata: TypeMetadata;\n  type: TypeType;\n  defaultValue: any;\n  description: ?Node;\n  typeDescription: Node;\n  serializer: ?(any) => any;\n  parse: any => any = v => v;\n\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  withMetadata(metadata: TypeMetadata): TypeBuilder {\n    if (this.metadata) {\n      throw new Error(\n        \"you likely don't mean to replace the metadata you are building; use `withMetadataAttr`.\"\n      );\n    }\n    this.metadata = metadata;\n    return this;\n  }\n\n  withMetadataAttr(attr: $Shape<TypeMetadata>): TypeBuilder {\n    this.metadata = { ...this.metadata, ...attr };\n    return this;\n  }\n\n  withParser(parser: any => any): TypeBuilder {\n    this.parse = parser;\n    return this;\n  }\n\n  withSerializer(serializer: any => any): TypeBuilder {\n    this.serializer = serializer;\n    return this;\n  }\n\n  withType(type: TypeType): TypeBuilder {\n    this.type = type;\n    return this;\n  }\n\n  withSchema(schema: AttributeSchema): TypeBuilder {\n    this.schema = schema;\n    return this;\n  }\n\n  havingDefault(val: any): TypeBuilder {\n    this.defaultValue = val;\n    return this;\n  }\n\n  desc(des: Node): TypeBuilder {\n    this.typeDescription = des;\n    return this;\n  }\n\n  validate = () => {\n    const { name, schema, type } = this;\n    if (!name) throw new Error('need a name');\n    // we may want to just key on id and allow duplicate names\n    if (name in typeRegistry) throw new Error('already exists');\n    if (!type) throw new Error('need a type');\n    if (type === 'primitive') {\n      if (schema) throw new Error('primitives cannot have schemas');\n    } else {\n      // again, this type is a cop-out but practically useful\n      if (name !== 'object' && !schema) throw new Error('non primitives need a schema');\n      // may want to validate enum / complex schema shape\n    }\n  };\n\n  build(): TypeImpl {\n    this.validate();\n    const t = new TypeImpl({\n      id: Symbol(),\n      name: this.name,\n      schema: this.schema,\n      metadata: this.metadata || defaultMetadata,\n      type: this.type,\n      defaultValue: this.defaultValue,\n      description: this.description,\n      typeDescription: this.typeDescription,\n      parse: this.parse,\n      serialize: this.serializer,\n    });\n    registerType(t);\n    return t;\n  }\n}\n\nconst typeRegistry: TypeMap = {};\nwindow.Types = typeRegistry;\n\nfunction registerType(t: TypeImpl) {\n  typeRegistry[t.name] = t;\n}\n","// @flow\nimport React from 'react';\nimport { TypeBuilder } from 'models/AttributeType';\nimport type { TypeMap } from 'models/AttributeType';\n\nconst primitiveSerializer: any => any = v => v;\n// Primitives\nconst number = new TypeBuilder('number')\n  .withType('primitive')\n  .desc('A basic `number` type.')\n  .havingDefault(0)\n  .withParser(v => (typeof v === 'string' ? parseInt(v) : v))\n  .withSerializer(primitiveSerializer)\n  .build();\nconst string = new TypeBuilder('string')\n  .withType('primitive')\n  .desc('A basic `string` type.')\n  .havingDefault('')\n  .withParser(v => (typeof v === 'object' ? JSON.stringify(v) : String(v)))\n  .withSerializer(a => (typeof a === 'object' ? JSON.stringify(a) : String(a)))\n  .build();\nconst boolean = new TypeBuilder('boolean')\n  .withType('primitive')\n  .desc('A basic `boolean` type.')\n  .havingDefault(false)\n  .withParser(Boolean)\n  .withSerializer(primitiveSerializer)\n  .build();\nconst date = new TypeBuilder('date')\n  .withType('primitive')\n  .desc('A basic `date` type.')\n  .havingDefault(new Date())\n  .withSerializer(v => (v instanceof Date ? v.toISOString() : undefined))\n  .withParser(v => (typeof v === 'string' ? Date.parse(v) : v))\n  .build();\n\nconst any = new TypeBuilder('any')\n  .withType('primitive')\n  .desc('This can be anything')\n  .havingDefault(undefined)\n  .build();\n\nconst time = new TypeBuilder('time')\n  .withType('primitive')\n  .desc(\n    <>\n      <div>Time can be described in a number of ways:</div>\n      <ul>\n        <li>Numbers, which will be taken literally as the time (in seconds).</li>\n        <li>Notation, (\"4n\", \"8t\") describes time in BPM and time signature relative values.</li>\n        <li>\n          TransportTime, (\"4:3:2\") will also provide tempo and time signature relative times in the\n          form BARS:QUARTERS:SIXTEENTHS.\n        </li>\n        <li>Frequency, (\"8hz\") is converted to the length of the cycle in seconds.</li>\n        <li>\n          Now-Relative, (\"+1\") prefix any of the above with \"+\" and it will be interpreted as \"the\n          current time plus whatever expression follows\".\n        </li>\n        <li>\n          Expressions, (\"3:0 + 2 - (1m / 7)\") any of the above can also be combined into a\n          mathematical expression which will be evaluated to compute the desired time.\n        </li>\n        <li>\n          No Argument, for methods which accept time, no argument will be interpreted as \"now\" (i.e.\n          the currentTime).\n        </li>\n      </ul>\n    </>\n  )\n  .withSerializer(primitiveSerializer)\n  .havingDefault(0)\n  .build();\n\n// kinda bogus, but useful for now\nconst object = new TypeBuilder('object')\n  .withType('complex')\n  .desc('An object with arbitrary keys and values')\n  .havingDefault(undefined)\n  .withParser(v => (typeof v === 'string' ? JSON.parse(v) : v))\n  .build();\n\nconst Vec2 = new TypeBuilder('Vec2')\n  .withSchema(({ x: number, y: number }: TypeMap))\n  .withType('complex')\n  .desc('A 2D Vector with keys `x` and `y`')\n  .havingDefault({ x: 0, y: 0 })\n  .withSerializer(v => {\n    if (\n      typeof v === 'object' &&\n      typeof parseInt(v.x) === 'number' &&\n      typeof parseInt(v.y) === 'number'\n    ) {\n      return JSON.stringify({ x: v.x, y: v.y });\n    }\n    return undefined;\n  })\n  .withParser(v => (typeof v === 'string' ? JSON.parse(v) : v))\n  .build();\n\nconst Vec3 = new TypeBuilder('Vec3')\n  .withSchema(({ x: number, y: number, z: number }: TypeMap))\n  .withType('complex')\n  .desc('A 3D Vector with keys `x`, `y` and `z`')\n  .havingDefault({ x: 0, y: 0, z: 0 })\n  .withSerializer(v => {\n    if (\n      typeof v === 'object' &&\n      typeof parseInt(v.x) === 'number' &&\n      typeof parseInt(v.y) === 'number' &&\n      typeof parseInt(v.z) === 'number'\n    ) {\n      return JSON.stringify({ x: v.x, y: v.y, z: v.z });\n    }\n    return undefined;\n  })\n  .withParser(v => (typeof v === 'string' ? JSON.parse(v) : v))\n  .build();\n\n/**\n * using {@link TypeBuilder.build} will register types in the global registry automatically\n */\n// noinspection JSUnusedGlobalSymbols\nexport { number, string, boolean, date, any, time, object, Vec2, Vec3 };\n","// @flow\n\nexport function uuid(): string {\n  // noinspection SpellCheckingInspection\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    let r = (Math.random() * 16) | 0;\n    return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n}\n\nexport function downloadObj(exportObj: Object, exportName: string) {\n  const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(exportObj));\n  const anchor = document.createElement('a');\n  anchor.setAttribute('href', dataStr);\n  anchor.setAttribute('download', exportName + '.json');\n  // $FlowIssue\n  document.body.appendChild(anchor);\n  anchor.click();\n  anchor.remove();\n}\n","// @flow\n\nimport { uuid } from 'helpers';\nimport type { AnyNode } from 'models/NodeBase';\n\nexport type EdgeSerialization = {\n  id: string,\n  fromId: string,\n  fromPort: string,\n  toId: string,\n  toPort: string,\n};\n\nexport default class Edge {\n  id: string;\n  from: AnyNode;\n  to: AnyNode;\n  fromPort: string;\n  toPort: string;\n  _notifyCount: number = 0;\n  notifyListener: ?() => void = null;\n\n  constructor(from: AnyNode, to: AnyNode, fromPort: string, toPort: string, id?: string) {\n    this.id = id || uuid();\n    this.from = from;\n    this.to = to;\n    this.fromPort = fromPort;\n    this.toPort = toPort;\n  }\n\n  outDataFor = (data: Object) => ({ [this.toPort]: data[this.fromPort] });\n  inDataFor = (change: Object) => change[this.toPort];\n\n  notify = () => {\n    this._notifyCount += 1;\n    this.notifyListener && this.notifyListener();\n  };\n\n  serialize: () => EdgeSerialization = () => {\n    return {\n      id: this.id,\n      fromId: this.from.id,\n      fromPort: this.fromPort,\n      toId: this.to.id,\n      toPort: this.toPort,\n    };\n  };\n\n  static load(j: EdgeSerialization, nodes: AnyNode[]) {\n    const from = nodes.find(n => n.id === j.fromId);\n    const to = nodes.find(n => n.id === j.toId);\n    if (!from || !to) {\n      throw new Error('could not load graph');\n    }\n    return new Edge(from, to, j.fromPort, j.toPort, j.id);\n  }\n}\n","// @flow\nimport React, { type Node } from 'react';\nimport type { Pos } from 'types';\nimport type { AnyNode } from 'models/NodeBase';\n\nwindow.$eTop = 51;\nwindow.$eHeight = 22;\nwindow.$eInL = 0;\nwindow.$eOutL = 198;\n\nexport function inOffset(x: number, y: number, index: number): Pos {\n  return { x: x + window.$eInL, y: y + window.$eTop + index * window.$eHeight };\n}\n\nexport function outOffset(x: number, y: number, index: number): Pos {\n  return { x: x + window.$eOutL, y: y + window.$eTop + index * window.$eHeight };\n}\n\nexport const signatureFor = (\n  clazz: Class<AnyNode>,\n  maxLen: number = 0,\n  style?: ?Object = null\n): Node => {\n  let argT = clazz.inKeys().join(', ');\n  let returnT = clazz.outKeys().join(', ');\n  if (maxLen) {\n    if (argT.length > maxLen - 3) {\n      argT = argT.substring(0, maxLen) + '...';\n    }\n    if (returnT.length > maxLen - 3) {\n      returnT = returnT.substring(0, maxLen) + '...';\n    }\n  }\n  return (\n    <div style={style}>\n      {`(${argT})`} <span style={{ color: 'rgba(200, 200, 200, 0.5)' }}>➜</span> {`(${returnT})`}\n    </div>\n  );\n};\n","/* eslint-disable no-use-before-define */\n// @flow\n\nimport { type Node } from 'react';\nimport { startCase, pick, omitBy, isEqual, get, set, cloneDeep, fromPairs, uniq } from 'lodash';\nimport Edge from 'models/Edge';\nimport { uuid } from 'helpers';\nimport { TypeImpl, type TypeMap } from 'models/AttributeType';\nimport { signatureFor } from 'components/util';\n\nexport default class NodeBase<Val: Object, In: ?Object, Out: ?Object> {\n  +id: string;\n\n  state: Val;\n  props: $Shape<In>;\n\n  inputs: Edge[] = [];\n  outputs: Edge[] = [];\n\n  // Private vars\n  outputCache = {};\n  live: boolean = false;\n  +listeners: { [string]: ChangeListener } = {};\n  title: ?string;\n\n  static +displayName: ?string;\n  static +registryName: string;\n  static +description: ?Node;\n  static +isPrimitive: boolean = false;\n  static +defaultState: ?$Shape<Val>;\n  static +defaultProps: ?$Shape<In>;\n  static +schema: Schema = { input: {}, output: {}, state: {} };\n  static +shortNames: { [string]: string } = {};\n\n  constructor(attrs?: $Shape<Val>, props?: $Shape<In>, nodeId?: string, title?: ?string) {\n    this.id = nodeId || uuid();\n    this.title = title;\n    this.state = {\n      ...this.constructor.initializeState(),\n      ...this.constructor.defaultState,\n      ...attrs,\n    };\n    if (this.constructor.defaultProps) {\n      this.props = { ...this.constructor.defaultProps, ...props };\n    }\n  }\n\n  _process: (string[], boolean) => Out = (keys, force) => {\n    const val = this.process(keys);\n    const forward = force ? val : omitBy(val, (v, k) => isEqual(v, this.outputCache[k]));\n    this.outputCache = { ...this.outputCache, ...val };\n    return forward;\n  };\n\n  /**\n   * Run this node over current state to compute an output\n   * @param keys a subset of outKeys which should be processed\n   */\n  process: (string[]) => Out = keys => {\n    throw new Error('unimplemented');\n  };\n\n  /**\n   * Called the first time this node is added to a graph\n   */\n  onAddToGraph = () => {};\n  /**\n   * This lifecycle hook is fired the first time this node is connected to all of its inputs.\n   * Later this should be changed to fire only after all required inputs are supplied.\n   */\n  willBecomeLive: () => void = () => {};\n\n  /**\n   * This lifecycle hook is fired before this node is removed from a graph. It is your chance to clean up any\n   * state that this node might have initialized.\n   */\n  willBeRemoved: () => void = () => {};\n\n  beforeConnectOut: Edge => void = edge => {};\n  afterConnectOut: Edge => void = edge => {};\n  beforeConnectIn: Edge => void = edge => {};\n  afterConnectIn: Edge => void = edge => {};\n\n  beforeDisconnectOut: Edge => void = edge => {};\n  afterDisconnectOut: Edge => void = edge => {};\n  beforeDisconnectIn: Edge => void = edge => {};\n  afterDisconnectIn: Edge => void = edge => {};\n\n  addInput: (input: Edge) => void = input => {\n    this.beforeConnectIn(input);\n    this.inputs.push(input);\n    const initialValue = input.from.process([input.toPort]);\n    this._onInputChange(input, input.outDataFor(initialValue), true);\n    this._notifyLive(input);\n    this.afterConnectIn(input);\n  };\n\n  // TODO change this to required inputs check\n  _notifyLive = (input: Edge) => {\n    if (!this.live) {\n      const sKeys = this.constructor.inKeys();\n      const iKeys = this.inputs.map(i => i.toPort).concat(input.toPort);\n      if (sKeys.every(k => iKeys.includes(k))) {\n        this.willBecomeLive();\n        this.live = true;\n      }\n    }\n  };\n\n  addOutput: (output: Edge) => void = out => {\n    this.beforeConnectOut(out);\n    this.outputs.push(out);\n    this.afterConnectOut(out);\n  };\n\n  removeInput: (Edge, onRemove?: () => void) => void = (input, onRemove) => {\n    this.beforeDisconnectIn(input);\n    this.inputs = this.inputs.filter(i => input.id !== i.id);\n    this.afterDisconnectIn(input);\n    onRemove && onRemove();\n  };\n\n  firstInput: string => ?AnyNode = forKey => {\n    const edge: ?Edge = this.inputs.find(i => i.toPort === forKey);\n    if (edge) {\n      // $FlowIssue - dunno\n      return edge.from;\n    }\n    return null;\n  };\n\n  removeOutput: (Edge, onRemove?: () => void) => void = (output, onRemove) => {\n    this.beforeDisconnectOut(output);\n    this.outputs = this.outputs.filter(i => output.id !== i.id);\n    this.afterDisconnectOut(output);\n    onRemove && onRemove();\n  };\n\n  _onInputChange: (edge: Edge, partialChange: $Shape<In>, boolean) => void = (\n    edge,\n    change,\n    force\n  ) => {\n    const oldProps = { ...this.props };\n    this.props = this.props || {};\n    // $FlowIssue\n    change && Object.keys(change).forEach(k => (this.props[k] = change[k]));\n    // $FlowIssue\n    this.willReceiveProps(this.props, oldProps, false);\n    this.notifyOutputs(this.onInputChange(edge, change), force);\n  };\n\n  registerListener: ChangeListener => string = listener => {\n    const key = uuid();\n    this.listeners[key] = listener;\n    return key;\n  };\n\n  removeListener: string => boolean = id => {\n    return delete this.listeners[id];\n  };\n\n  /**\n   * Handle input changes from an edge\n   * @param edge the edge that has notified this node of a change\n   * @param change the change payload for that edge\n   * @returns {Array} an array of output edges to propagate on\n   */\n  onInputChange: (edge: Edge, partialChange: $Shape<In>) => string[] = (edge, change) => {\n    return [];\n  };\n\n  /**\n   * Called before new prop changes are set. Note that manually overriding props will also fire this method.\n   * @param newProps\n   * @param prevProps\n   * @param manual whether or not the change was a manual change, as opposed to a connected change\n   */\n  willReceiveProps: (newProps: In, prefProps: In, boolean) => void = (\n    newProps,\n    prevProps,\n    manual\n  ) => {};\n\n  /**\n   * Notify some set of this node's output ports of changes\n   * @param ofKeyChanges the output port keys which will be notified\n   * @param force use this flag to force propagation updates, even if the value has not changed\n   */\n  notifyOutputs: (string | string[], force?: boolean) => void = (ofKeyChanges, force = false) => {\n    const asList = Array.isArray(ofKeyChanges) ? ofKeyChanges : [ofKeyChanges];\n    const val = this._process(asList, force);\n    const changes = pick(val, asList);\n    for (let listener in this.listeners) {\n      this.listeners[listener](this);\n    }\n    this.outputs\n      .filter(e => e.from.id === this.id && e.fromPort in changes)\n      .forEach(edge => {\n        edge.to._onInputChange(edge, edge.outDataFor(changes), force);\n        edge.notify();\n      });\n  };\n\n  notifyAllOutputs = (force?: boolean = false) => {\n    this.notifyOutputs(this.outKeys(), force);\n  };\n\n  inKeys = (): string[] => this.constructor.inKeys();\n  inKeyAt = (i: number): string => this.inKeys()[i];\n  outKeys = (): string[] => this.constructor.outKeys();\n  outKeyAt = (i: number): string => this.outKeys()[i];\n\n  connectedInputKeys = () => uniq(this.inputs.map(e => e.toPort));\n  connectedOutputKeys = () => uniq(this.outputs.map(e => e.fromPort));\n\n  name = () => {\n    let defName;\n    if (this.title) {\n      return this.title;\n    } else if (this.constructor.isPrimitive && uniq(this.outputs.map(e => e.toPort)).length === 1) {\n      defName = this.outputs[0].toPort;\n    } else {\n      defName = NodeBase.nameFrom(this.constructor);\n    }\n    if (window['$debug']) {\n      const { value } = this.state;\n      const hasVal = value || value === false || value === 0;\n      return this.constructor.isPrimitive ? (hasVal ? String(value) : defName) : defName;\n    } else {\n      return defName;\n    }\n  };\n\n  /**\n   * All the dynamic user-changeable attributes for this node.\n   * You probably shouldn't override this method, but instead use other\n   * methods / class attributes to include extras or exclude defaults\n   * @returns {[string]: Changeable[]} lists of all changeables for this node under a key category.\n   */\n  changeables: () => { [string]: Changeable[] } = () => {\n    let changeables = {};\n    const p = this.changeableProps();\n    const s = this.changeableState();\n    const o = this.otherChangeables();\n    const outs = this.displayableOutputs();\n    if (p.length > 0) changeables.Inputs = p;\n    if (s.length > 0) changeables.Internals = s;\n    if (o.length > 0) changeables.Other = o;\n    if (outs.length > 0) changeables.Outputs = outs;\n    // $FlowIssue - outputs, i kno TODO\n    return changeables;\n  };\n\n  displayableOutputs: () => Displayable[] = () => {\n    const schema = this.constructor.schema.output;\n    return Object.keys(schema).map(k => ({\n      title: k,\n      type: schema[k],\n      value: get(this.outputCache, k),\n    }));\n  };\n\n  changeableState: () => Changeable[] = () => {\n    const stateSchema = this.constructor.schema.state;\n    return Object.keys(stateSchema).map(k => ({\n      title: k,\n      type: stateSchema[k],\n      value: get(this.state, k),\n      onChange: val => {\n        if (this.state) {\n          this.state[k] = val;\n        } else {\n          // $FlowIssue\n          this.state = { [k]: val };\n        }\n        this.notifyAllOutputs();\n      },\n    }));\n  };\n\n  changeableProps: () => Changeable[] = () => {\n    const inputSchema = this.constructor.schema.input;\n    return Object.keys(inputSchema).map(k => ({\n      title: k,\n      type: inputSchema[k],\n      value: get(this.props, k),\n      onChange: val => {\n        const oldProps = this.props ? cloneDeep(this.props) : {};\n        if (this.props) {\n          this.props[k] = val;\n        } else {\n          this.props = { [k]: val };\n        }\n        // $FlowIssue\n        this.willReceiveProps(this.props, oldProps, true);\n        this.notifyAllOutputs();\n      },\n    }));\n  };\n\n  otherChangeables: () => Changeable[] = () => [];\n\n  pushToState = (\n    stateKey: string,\n    change: Object,\n    exclude: string[] = [],\n    setPath: ?string = null\n  ): string[] => {\n    const partial = this.state[stateKey];\n    if (!partial) {\n      return [];\n    }\n    const allKeys = Object.keys(change);\n    const keys = exclude.length > 0 ? allKeys.filter(k => !exclude.includes(k)) : allKeys;\n    if (keys.length === 0) return [];\n    keys.forEach(k => {\n      const accept = change[k] !== undefined;\n      if (k in partial && accept) {\n        if (typeof partial.set === 'function') {\n          partial.set(k, change[k]);\n        } else {\n          set(partial, setPath ? setPath : k, change[k]);\n        }\n      }\n    });\n    return keys;\n  };\n\n  // Probably should just require display name and not need this\n  static nameFrom(clazz: Class<AnyNode>) {\n    return clazz.displayName || startCase(clazz.name.replace(/node/i, ''));\n  }\n\n  static getRegistryName(): string {\n    return this.registryName || this.name;\n  }\n\n  signature = (maxLen: number = 0, style: ?Object = null) => {\n    return signatureFor(this.constructor, maxLen, style);\n  };\n\n  serialize: (x: number, y: number) => NodeSerialization<$Shape<Val>> = (x, y) => {\n    const stateS = this.constructor.schema.state;\n    const state = fromPairs(\n      Object.keys(this.state)\n        .map(k => {\n          const type: ?TypeImpl = get(stateS, k);\n          if (type && type.serialize) {\n            try {\n              const serialized = type.serialize(this.state[k]);\n              if (serialized !== undefined) {\n                return [k, serialized];\n              }\n            } catch (e) {\n              console.error('error parsing', this.state[k], type.name, e);\n            }\n          }\n          return null;\n        })\n        .filter(p => p)\n    );\n    const type = this.constructor.getRegistryName();\n    return { id: this.id, type, x, y, state, title: this.title };\n  };\n\n  static duplicate(node: AnyNode): AnyNode {\n    const serial = node.serialize(0, 0);\n    serial.id = '';\n    return NodeBase.load(serial);\n  }\n\n  static +_inKeys: string[];\n  static inKeys(): string[] {\n    if (this._inKeys) {\n      return this._inKeys;\n    }\n    (this: any)._inKeys = Object.keys(this.schema.input);\n    return this._inKeys;\n  }\n\n  static +_inKeyIdxMap: { [string]: number };\n  static inKeyIndex(key: string): number {\n    if (this._inKeyIdxMap) {\n      return this._inKeyIdxMap[key];\n    }\n    (this: any)._inKeyIdxMap = fromPairs(this.inKeys().map((k, i) => [k, i]));\n    return this._inKeyIdxMap[key];\n  }\n\n  static +_outKeys: string[];\n  static outKeys(): string[] {\n    if (this._outKeys) {\n      return this._outKeys;\n    }\n    (this: any)._outKeys = Object.keys(this.schema.output);\n    return this._outKeys;\n  }\n\n  static +_outKeyIdxMap: { [string]: number };\n  static outKeyIndex(key: string): number {\n    if (this._outKeyIdxMap) {\n      return this._outKeyIdxMap[key];\n    }\n    (this: any)._outKeyIdxMap = fromPairs(this.outKeys().map((k, i) => [k, i]));\n    return this._outKeyIdxMap[key];\n  }\n\n  static +_displayInKeys: string[];\n  static displayInKeys(): string[] {\n    if (this._displayInKeys) {\n      return this._displayInKeys;\n    }\n    (this: any)._displayInKeys = Object.keys(this.schema.input).map(k =>\n      this.shortNames[k] ? this.shortNames[k] : k\n    );\n    return this._displayInKeys;\n  }\n\n  static +_displayOutKeys: string[];\n  static displayOutKeys(): string[] {\n    if (this._displayOutKeys) {\n      return this._displayOutKeys;\n    }\n    (this: any)._displayOutKeys = Object.keys(this.schema.output).map(k =>\n      this.shortNames[k] ? this.shortNames[k] : k\n    );\n    return this._displayOutKeys;\n  }\n\n  static initializeState(): Object {\n    const state = {};\n    Object.keys(this.schema.state).forEach(k => {\n      state[k] = this.schema.state[k].defaultValue;\n    });\n    return state;\n  }\n\n  static load(json: NodeSerialization<$Shape<Val>>): AnyNode {\n    const clazz = window.NodeRegistry[json.type];\n    try {\n      const title = get(json, 'title');\n      return new clazz(json.state, {}, json.id, title);\n    } catch (e) {\n      console.error('cannot load node', json.type);\n      throw e;\n    }\n  }\n}\n\nexport type AnyNode = NodeBase<any, any, any>;\nexport type Schema = { input: TypeMap, output: TypeMap, state: TypeMap };\n// TODO - type these two\nexport type Displayable = { title: string, type: TypeImpl, value: any };\nexport type Changeable = Displayable & { onChange: (val: any) => void };\nexport type ChangeListener = AnyNode => void;\nexport type NodeSerialization<S> = {\n  id: string,\n  type: string,\n  x: number,\n  y: number,\n  state?: S,\n  title?: ?string,\n};\n","// @flow\nimport React from 'react';\nimport { get } from 'lodash';\nimport Tone from 'tone';\nimport NodeBase from 'models/NodeBase';\nimport Edge from 'models/Edge';\nconst Piano = require('tone-piano').Piano;\nconst Types = window.Types;\nconst URL_BASE = process.env.PUBLIC_URL || '';\n\n// Tone Types\nexport const TT = {\n  AudioNode: Types.object.aliased('AudioNode'),\n  Config: Types.object.aliased('Config'),\n  Synth: Types.object.aliased('Synth', 'Any kind of synth'),\n  Panner: Types.object.aliased('Panner'),\n  Gain: Types.object.aliased('Gain'),\n  FeedbackDelay: Types.object.aliased('FeedbackDelay'),\n  Call: Types.any\n    .aliased('Call')\n    .desc(\n      \"Certain nodes are designated 'callable', i.e. they are operator nodes. Sending a truthy call signal will invoke that node's handler over its parameters\"\n    ),\n};\n\nexport class ContextDestinationNode extends NodeBase<{}, {}, { node: Tone.AudioNode }> {\n  static +displayName = 'Context Destination';\n  static +registryName = 'ContextDestinationNode';\n  static description = <span>The current context destination</span>;\n  static schema = {\n    input: {},\n    output: { node: TT.AudioNode.desc('The current context destination node') },\n    state: {},\n  };\n\n  process = () => ({ node: Tone.context.destination });\n}\n\nexport class ConnectNode extends NodeBase<\n  {},\n  { from: Tone.AudioNode, to: Tone.AudioNode },\n  { from: Tone.AudioNode, to: Tone.AudioNode }\n> {\n  static +displayName = 'Connect';\n  static +registryName = 'ConnectNode';\n  static description = <span>Connect one audio node to another</span>;\n  static schema = {\n    input: {\n      from: TT.AudioNode.desc('Connect from any audio node'),\n      to: TT.AudioNode.desc('Connect to any audio node'),\n    },\n    output: {\n      from: TT.AudioNode.desc('The same node, connected'),\n      to: TT.AudioNode.desc('The same node, connected'),\n    },\n    state: {},\n  };\n\n  willBecomeLive = () => {\n    const { from, to } = this.props;\n    logConnect(from, to);\n    from.connect(to);\n  };\n\n  beforeDisconnectIn: Edge => void = edge => {\n    const name = edge.toPort;\n    if (name === 'from' || name === 'to') {\n      const { from, to } = this.props;\n      if (from && to) {\n        from.disconnect(to);\n      }\n    }\n  };\n\n  process = () => this.props;\n}\n\nexport class AudioMasterNode extends NodeBase<\n  {},\n  { node: Tone.AudioNode },\n  { out: Tone.AudioNode }\n> {\n  static +displayName = 'Audio Master';\n  static +registryName = 'AudioMasterNode';\n  static description = <span>Connect an audio node to the master audio output</span>;\n  static schema = {\n    input: {\n      node: TT.AudioNode.desc('Any Audio node to connect to the audio master output'),\n    },\n    output: { out: TT.AudioNode.desc('The same node, connected to the master output') },\n    state: {},\n  };\n  _connectedTo: string = '';\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if ('node' === edge.toPort && this._connectedTo !== edge.id) {\n      edge.inDataFor(change).toMaster();\n      return this.outKeys();\n    }\n    return [];\n  };\n\n  beforeDisconnectIn: Edge => void = edge => {\n    const name = edge.toPort;\n    if (name === 'node') {\n      const { node } = this.props;\n      if (node) {\n        node.disconnect();\n      }\n    }\n  };\n\n  process = () => ({ out: this.props.node });\n}\n\nexport class ToContextDestinationNode extends NodeBase<\n  {},\n  { node: Tone.AudioNode },\n  { out: Tone.AudioNode }\n> {\n  static +displayName = 'To Context Dest.';\n  static +registryName = 'ToContextDestinationNode';\n  static description = <span>Connect an audio node to audio context destination</span>;\n  static schema = {\n    input: {\n      node: TT.AudioNode.desc('Any Audio node to connect to the context destination'),\n    },\n    output: { out: TT.AudioNode.desc('The same node, connected to the context destination') },\n    state: {},\n  };\n  _connectedTo: string = '';\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if ('node' === edge.toPort && this._connectedTo !== edge.id) {\n      Tone.connect(edge.inDataFor(change), Tone.context.destination);\n      return this.outKeys();\n    }\n    return [];\n  };\n\n  beforeDisconnectIn: Edge => void = edge => {\n    const name = edge.toPort;\n    if (name === 'node') {\n      const { node } = this.props;\n      if (node) {\n        node.disconnect();\n      }\n    }\n  };\n\n  process = () => ({ out: this.props.node });\n}\n\nexport class PannerNode extends NodeBase<\n  { panner: Tone.Panner, _connectedTo: ?string },\n  { node: Tone.AudioNode, pan: number },\n  { out: Tone.Panner, node: Tone.AudioNode }\n> {\n  static +displayName = 'Audio Panner';\n  static +registryName = 'PannerNode';\n  static description = <span>An equal power Left/Right stereo Panner</span>;\n  static schema = {\n    input: {\n      node: TT.AudioNode.desc('The audio node to connect to this panner.'),\n      pan: Types.number.desc('The pan control. -1 = hard left, 1 = hard right'),\n    },\n    output: {\n      out: TT.Panner.desc('A node panned to the `pan` value'),\n      node: TT.AudioNode.desc('The node that was passed in, connected to the panner'),\n    },\n    state: { panner: TT.Config.desc('The panner config') },\n  };\n\n  onAddToGraph = () => {\n    this.state.panner = new Tone.Panner(0);\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    if (!prevProps || newProps.pan !== prevProps.pan) {\n      this.pushToState('panner', { pan: newProps.pan }, [], ['pan', 'value']);\n    }\n  };\n\n  /**\n   * TODO: With this pattern I am concerned that we are being too magical and should\n   * just include a connect(from, to) node for connections.\n   */\n  onInputChange = (edge: Edge, change: Object) => {\n    if ('node' === edge.toPort && this.state._connectedTo !== edge.id) {\n      logConnect(edge.inDataFor(change), this.state.panner);\n      edge.inDataFor(change).connect(this.state.panner);\n      return this.outKeys();\n    }\n    return [];\n  };\n\n  beforeDisconnectIn: Edge => void = edge => {\n    const name = edge.toPort;\n    if (name === 'node') {\n      const { node } = this.props;\n      if (node) {\n        node.disconnect();\n      }\n    }\n  };\n\n  process = () => ({ out: this.state.panner, node: this.props.node });\n}\n\nexport class VolumeNode extends NodeBase<\n  { volume: Tone.Volume, _connectedTo: ?string },\n  { node: Tone.AudioNode, volume: number },\n  { out: Tone.Volume, node: Tone.AudioNode }\n> {\n  static +displayName = 'Audio Volume';\n  static +registryName = 'VolumeNode';\n  static description = <span>A simple volume node, useful for creating a volume fader.</span>;\n  static schema = {\n    input: {\n      node: TT.AudioNode.desc('The audio node to connect to this Volume node.'),\n      volume: Types.number.desc('The volume, in decibels'),\n    },\n    output: {\n      out: Types.object.aliased('Volume').desc('The volume node'),\n      node: TT.AudioNode.desc('The node that was passed in, connected to this volume node'),\n    },\n    state: { volume: TT.Config.desc('The volume node') },\n  };\n  static defaultProps = { volume: 0 };\n\n  onAddToGraph = () => {\n    this.state.volume = new Tone.Volume();\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    ['volume'].forEach(k => {\n      if (!prevProps || newProps[k] !== prevProps[k]) {\n        this.pushToState('volume', { [k]: newProps[k] }, [], [k, 'value']);\n      }\n    });\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if ('node' === edge.toPort && this.state._connectedTo !== edge.id) {\n      logConnect(edge.inDataFor(change), this.state.volume);\n      edge.inDataFor(change).connect(this.state.volume);\n      return this.outKeys();\n    }\n    return [];\n  };\n\n  beforeDisconnectIn: Edge => void = edge => {\n    const name = edge.toPort;\n    if (name === 'node') {\n      const { node } = this.props;\n      if (node) {\n        node.disconnect();\n      }\n    }\n  };\n\n  process = () => ({ out: this.state.volume, node: this.props.node });\n}\n\nexport class CompressorNode extends NodeBase<\n  { compressor: Tone.Compressor, _connectedTo: ?string },\n  { node: Tone.AudioNode, threshold: number, ratio: number },\n  { out: Tone.Compressor, node: Tone.AudioNode }\n> {\n  static +displayName = 'Audio Compressor';\n  static +registryName = 'CompressorNode';\n  static description = (\n    <span>\n      A node which compresses signals from its origin. Compression reduces the volume of loud sounds\n      or amplifies quiet sounds by narrowing or \"compressing\" an audio signal's dynamic range.\n    </span>\n  );\n  static schema = {\n    input: {\n      node: TT.AudioNode.desc('The audio node to connect to this compressor.'),\n      threshold: Types.number.desc('The value above which the compression starts to be applied.'),\n      ratio: Types.number.desc('The gain reduction ratio'),\n    },\n    output: {\n      out: Types.object.aliased('Compressor').desc('The compressor node'),\n      node: TT.AudioNode.desc('The node that was passed in, connected to the compressor'),\n    },\n    state: { compressor: TT.Config.desc('The compressor') },\n  };\n\n  onAddToGraph = () => {\n    this.state.compressor = new Tone.Compressor();\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    ['threshold', 'ratio'].forEach(k => {\n      if (!prevProps || newProps[k] !== prevProps[k]) {\n        this.pushToState('compressor', { [k]: newProps[k] }, [], [k, 'value']);\n      }\n    });\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if ('node' === edge.toPort) {\n      logConnect(edge.inDataFor(change), this.state.compressor);\n      edge.inDataFor(change).connect(this.state.compressor);\n      return this.outKeys();\n    }\n    return [];\n  };\n\n  beforeDisconnectIn: Edge => void = edge => {\n    const name = edge.toPort;\n    if (name === 'node') {\n      const { node } = this.props;\n      if (node) {\n        node.disconnect();\n      }\n    }\n  };\n\n  process = () => ({ out: this.state.compressor, node: this.props.node });\n}\n\nexport class ReverbNode extends NodeBase<\n  { reverb: Tone.Freeverb, _connectedTo: ?string },\n  { node: Tone.AudioNode, dampening: number, roomSize: number },\n  { out: Tone.Freeverb, node: Tone.AudioNode }\n> {\n  static +displayName = 'Reverb';\n  static +registryName = 'ReverbNode';\n  static defaultState = { _connectedTo: null };\n  static description = (\n    <span>\n      A <code>Reverb</code> based on Freeverb (https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n    </span>\n  );\n  static schema = {\n    input: {\n      node: TT.AudioNode.desc('The audio node to connect to this reverb node'),\n      dampening: Types.time.desc('The amount of dampening of the reverberant signal'),\n      roomSize: Types.number.desc(\n        'The roomSize value between [0,1]. A larger roomSize will result in a longer decay'\n      ),\n    },\n    output: {\n      out: Types.object.aliased('Reverb').desc('The resulting Reverb Node'),\n      node: TT.AudioNode.desc('The node that was passed in, connected to the reverb'),\n    },\n    state: {},\n  };\n\n  onAddToGraph = () => {\n    this.state.reverb = new Tone.Freeverb();\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    ['dampening', 'roomSize'].forEach(k => {\n      if (!prevProps || newProps[k] !== prevProps[k]) {\n        this.pushToState('reverb', { [k]: newProps[k] }, [], [k, 'value']);\n      }\n    });\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if ('node' === edge.toPort && this.state._connectedTo !== edge.id) {\n      logConnect(edge.inDataFor(change), this.state.reverb);\n      edge.inDataFor(change).connect(this.state.reverb);\n      return this.outKeys();\n    }\n    return [];\n  };\n\n  beforeDisconnectIn: Edge => void = edge => {\n    const name = edge.toPort;\n    if (name === 'node') {\n      const { node } = this.props;\n      if (node) {\n        node.disconnect();\n      }\n    }\n  };\n\n  process = () => ({ out: this.state.reverb, node: this.props.node });\n}\n\nexport class FeedbackDelayNode extends NodeBase<\n  { feedbackDelay: Tone.FeedbackDelay, _connectedTo: ?string },\n  { node: Tone.AudioNode, feedback: Tone.Time, delay: number },\n  { out: Tone.FeedbackDelay, node: Tone.AudioNode }\n> {\n  static +displayName = 'Feedback Delay';\n  static +registryName = 'FeedbackDelayNode';\n  static defaultState = { _connectedTo: null };\n  static description = (\n    <span>\n      A <code>DelayNode</code> in which part of output signal is fed back into the delay\n    </span>\n  );\n  static schema = {\n    input: {\n      node: TT.AudioNode.desc('The audio node to connect to this feedback delay'),\n      delayTime: Types.time.desc('The delay applied to the incoming signal'),\n      feedback: Types.number.desc(\n        'feedback The amount of the effected signal which is fed back through the delay.'\n      ),\n    },\n    output: {\n      out: TT.FeedbackDelay.desc('The resulting FeedbackDelayNode'),\n      node: TT.AudioNode.desc('The node that was passed in, connected to the feedback delay'),\n    },\n    state: {},\n  };\n\n  onAddToGraph = () => {\n    this.state.feedbackDelay = new Tone.FeedbackDelay('16n', 0.2);\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    ['delayTime', 'feedback'].forEach(k => {\n      if (!prevProps || newProps[k] !== prevProps[k]) {\n        this.pushToState('feedbackDelay', { [k]: newProps[k] }, [], [k, 'value']);\n      }\n    });\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if ('node' === edge.toPort && this.state._connectedTo !== edge.id) {\n      logConnect(edge.inDataFor(change), this.state.feedbackDelay);\n      edge.inDataFor(change).connect(this.state.feedbackDelay);\n      return this.outKeys();\n    }\n    return [];\n  };\n\n  beforeDisconnectIn: Edge => void = edge => {\n    const name = edge.toPort;\n    if (name === 'node') {\n      const { node } = this.props;\n      if (node) {\n        node.disconnect();\n      }\n    }\n  };\n\n  process = () => ({ out: this.state.feedbackDelay, node: this.props.node });\n}\n\nexport class AudioDelayNode extends NodeBase<\n  { delay: DelayNode, _connectedTo: ?string },\n  { node: Tone.AudioNode, delayTime: number },\n  { out: DelayNode, node: Tone.AudioNode }\n> {\n  static +displayName = 'Audio Delay';\n  static +registryName = 'AudioDelayNode';\n  // $FlowIssue\n  static defaultState = { _connectedTo: null };\n  static description = (\n    <span>A node which is used to delay the incoming audio signal by a certain amount of time</span>\n  );\n  static schema = {\n    input: {\n      node: TT.AudioNode.desc('The audio node to connect to this feedback delay'),\n      delayTime: Types.number.desc(\n        'An a-rate AudioParam representing the amount of delay to apply'\n      ),\n    },\n    output: {\n      out: TT.AudioNode.desc('The resulting DelayNode'),\n      node: TT.AudioNode.desc('The node that was passed in, connected to the delay'),\n    },\n    state: { delay: TT.AudioNode.desc('The delay node') },\n  };\n\n  onAddToGraph = () => {\n    this.state.delay = Tone.context.createDelay(6.0);\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    if (!prevProps || newProps.delayTime !== prevProps.delayTime) {\n      this.pushToState('delay', { delayTime: newProps.delayTime }, [], ['delayTime', 'value']);\n    }\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if ('node' === edge.toPort && this.state._connectedTo !== edge.id) {\n      logConnect(edge.inDataFor(change), this.state.delay);\n      edge.inDataFor(change).connect(this.state.delay);\n      return this.outKeys();\n    }\n    return [];\n  };\n\n  beforeDisconnectIn: Edge => void = edge => {\n    const name = edge.toPort;\n    if (name === 'node') {\n      const { node } = this.props;\n      if (node) {\n        node.disconnect();\n      }\n    }\n  };\n\n  process = () => ({ out: this.state.delay, node: this.props.node });\n}\n\nexport class AudioGainNode extends NodeBase<\n  { gain: GainNode, _connectedTo: ?string },\n  { node: Tone.AudioNode, gain: number },\n  { gain: GainNode, node: Tone.AudioNode }\n> {\n  static +displayName = 'Audio Gain';\n  static +registryName = 'AudioGainNode';\n  static defaultState = { _connectedTo: null };\n  static description = (\n    <span>\n      The GainNode interface represents a change in volume. It is an AudioNode audio-processing\n      module that causes a given gain to be applied to the input data before its propagation to the\n      output\n    </span>\n  );\n  static schema = {\n    input: {\n      node: TT.AudioNode.desc('The audio node to connect to this feedback delay'),\n      gain: Types.number.desc('An a-rate AudioParam representing the amount of gain to apply'),\n    },\n    output: {\n      gain: TT.Gain.desc('The resulting GainNode'),\n      node: TT.AudioNode.desc('The node that was passed in, connected to the gain'),\n    },\n    state: { gain: TT.Gain.desc('The gain node') },\n  };\n\n  onAddToGraph = () => {\n    this.state.gain = Tone.context.createGain();\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    if (!prevProps || newProps.gain !== prevProps.gain) {\n      this.pushToState('gain', { gain: newProps.gain }, [], ['gain', 'value']);\n    }\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if ('node' === edge.toPort && this.state._connectedTo !== edge.id) {\n      logConnect(edge.inDataFor(change), this.state.gain);\n      edge.inDataFor(change).connect(this.state.gain);\n      return this.outKeys();\n    }\n    return [];\n  };\n\n  beforeDisconnectIn: Edge => void = edge => {\n    const name = edge.toPort;\n    if (name === 'node') {\n      const { node } = this.props;\n      if (node) {\n        node.disconnect();\n      }\n    }\n  };\n\n  process = () => ({ gain: this.state.gain, node: this.props.node });\n}\n\nexport class AttackReleaseNode extends NodeBase<\n  {},\n  { synth: Tone.Synth, note: Tone.Frequency, duration: Tone.Time, time: Tone.Time, call: any },\n  { draw: { note: Tone.Frequency, duration: Tone.Time } }\n> {\n  static +displayName = 'Attack-Release';\n  static +registryName = 'AttackReleaseNode';\n  static description = <span>Trigger the attack and then the release after the duration.</span>;\n  static schema = {\n    input: {\n      synth: TT.Synth.desc('The synth to use'),\n      note: Types.string.desc('The frequency to play'),\n      duration: Types.time.desc('The duration to play the note for'),\n      time: Types.time.desc('When the note should be triggered'),\n      call: TT.Call,\n    },\n    output: {\n      draw: Types.object.desc(\n        'An note / duration object that is signalled when this node triggers its attack'\n      ),\n    },\n    state: {},\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if ('call' === edge.toPort) {\n      if (edge.inDataFor(change)) {\n        const { synth, note, duration, time } = this.props;\n        if (synth && note && duration) {\n          if (time) {\n            synth.triggerAttackRelease(note, duration, time);\n            Tone.Draw.schedule(() => {\n              this.notifyAllOutputs();\n            }, time);\n          } else {\n            synth.triggerAttackRelease(note, duration);\n            return this.outKeys();\n          }\n        }\n      }\n    }\n    // Return no updates here, since out signals will happen in the scheduled draw callback if not played now\n    return [];\n  };\n\n  process = () => ({ draw: this.props });\n}\n\nexport class PlayerNode extends NodeBase<{}, { url: string, call: any }, { player: Tone.Player }> {\n  static +displayName = 'Remote Player';\n  static +registryName = 'PlayerNode';\n  static description = <span>Play a sound file from a remote source</span>;\n  static schema = {\n    input: {\n      url: Types.string.aliased('url').desc('the url to fetch the sound file from.'),\n      call: TT.Call,\n      loop: Types.boolean.desc('Whether or not the player should loop its contents indefinitely'),\n    },\n    output: { player: Types.object.aliased('Player').desc('The player node') },\n    state: {},\n  };\n  _loaded: string = '';\n  _player: Tone.Player = new Tone.Player();\n\n  _makePlayer = (url: string) => {\n    if (url.startsWith('/')) {\n      url = URL_BASE + url;\n    }\n    this._player = new Tone.Player(url, () => {\n      this.notifyAllOutputs(true);\n      this._loaded = url;\n      this._checkStarted();\n    });\n    this._player.autostart = false;\n    this._setPlayerAttrs();\n  };\n\n  _setPlayerAttrs = () => {\n    ['loop'].forEach(k => (this._player[k] = get(this.props, k)));\n  };\n\n  _checkStarted = () => {\n    if (this.props.call && this._loaded && this._player.state !== 'started') {\n      this._player.start();\n    }\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    if (newProps.url && (!prevProps || newProps.url !== prevProps.url)) {\n      if (this._loaded !== newProps.url) {\n        this._makePlayer(newProps.url);\n      }\n    }\n    this._checkStarted();\n    this._setPlayerAttrs();\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    return this.outKeys();\n  };\n\n  process = () => ({ player: this._player });\n}\n\nexport class SetNoteNode extends NodeBase<\n  {},\n  { synth: Tone.Synth, note: Tone.Frequency, time: Tone.Time, call: any },\n  null\n> {\n  static +displayName = 'Set Note';\n  static +registryName = 'SetNoteNode';\n  static description = <span>Set the note for a Synth</span>;\n  static schema = {\n    input: {\n      synth: TT.Synth.desc('The synth to use'),\n      note: Types.string.desc('The frequency to set on the synth'),\n      time: Types.time.desc('Time which the note should be set on the synth'),\n      call: TT.Call,\n    },\n    output: {},\n    state: {},\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if ('call' === edge.toPort) {\n      if (edge.inDataFor(change)) {\n        const { synth, note, time } = this.props;\n        if (synth && note) {\n          if (synth.setNote) {\n            synth.setNote(note, time || undefined);\n          } else if (synth.voices) {\n            synth.voices.forEach(v => v.setNote(note, time || undefined));\n          }\n          time && Tone.Draw.schedule(this.notifyAllOutputs, time);\n        }\n      }\n    }\n    return [];\n  };\n\n  process = () => null;\n}\n\nexport class ArpeggiateNode extends NodeBase<\n  {},\n  {\n    pattern: string,\n    notes: string[],\n    humanize: boolean | number,\n    interval: Tone.Time,\n  },\n  { note: string, time: Tone.Time }\n> {\n  static +displayName = 'Arpeggiate';\n  static +registryName = 'ArpeggiateNode';\n  static defaultProps = {\n    interval: '1m',\n    pattern: 'upDown',\n    notes: [],\n    humanize: false,\n  };\n  static description = <span>Arpeggiate between the given notes in a number of patterns</span>;\n  pattern: Tone.Pattern;\n  // $FlowIssue\n  _out: { note: string, time: Tone.Time } = {};\n  static schema = {\n    input: {\n      notes: Types.object.desc('Notes to arpeggiate over'),\n      interval: Types.time.desc('The interval at which this node loops'),\n      pattern: Types.string\n        .aliased(\n          'Pattern',\n          <div>\n            <p>Arpeggio pattern. Possible values are</p>\n            <ul>\n              <li>`up` - cycles upward</li> <li>`down` - cycles downward</li>\n              <li>`upDown` - up then and down</li> <li>`downUp` - cycles down then and up</li>\n              <li>`alternateUp` - jump up two and down one</li>\n              <li>`alternateDown` - jump down two and up one</li>\n              <li>`random` - randomly select an index</li>\n              <li>`randomWalk` - randomly moves one index away from the current position</li>\n              <li>\n                `randomOnce` - randomly select an index without repeating until all values have been\n                chosen.\n              </li>\n            </ul>\n          </div>\n        )\n        .desc('The arpeggiation pattern. See the `Pattern` type for options.'),\n      humanize: Types.boolean.desc(\n        'Random variation +/-0.01s to the scheduled time. Or give it a time value which it will randomize by'\n      ),\n      probability: Types.number.desc('probability that each iteration will play, [0,1]'),\n    },\n    output: {\n      note: Types.string.desc('The note'),\n      time: Types.time.desc('Time accompanying the note'),\n    },\n    state: {},\n  };\n\n  onAddToGraph = () => {\n    this.pattern = new Tone.Pattern((time, note) => {\n      this._out = { note, time };\n      this.notifyOutputs(this.outKeys(), true);\n    }, this.props.notes);\n  };\n\n  _manageLoop = () => {\n    if (this.pattern.state !== 'started') {\n      this.pattern.start();\n    }\n  };\n\n  willReceiveProps = (newProps: Object) => {\n    ['humanize', 'interval', 'pattern', 'probability'].forEach(k => {\n      this.pattern[k] = newProps[k];\n    });\n    if (newProps.notes) {\n      this.pattern.values = newProps.notes;\n    }\n  };\n\n  process = () => {\n    this._manageLoop();\n    return this._out;\n  };\n}\n\nexport class TimeLoopNode extends NodeBase<\n  {},\n  {\n    interval: Tone.Time,\n    playbackRate: Tone.Time,\n    iterations: number,\n    mute: boolean,\n    humanize: boolean | number,\n  },\n  { i: number }\n> {\n  static +displayName = 'Time Loop';\n  static +registryName = 'TimeLoopNode';\n  static defaultProps = {\n    interval: '1m',\n    playbackRate: 1,\n    iterations: Infinity,\n    mute: false,\n    humanize: false,\n  };\n  static description = <span>Set the note for a Synth</span>;\n  loop: Tone.Loop;\n  count: number = 0;\n  static schema = {\n    input: {\n      interval: Types.time.desc('The interval at which this node loops'),\n      playbackRate: Types.number.desc(\n        'The playback rate of the loop. The normal playback rate is 1 (no change). A playbackRate of 2 would be twice as fast'\n      ),\n      iterations: Types.number.desc(\n        'The number of iterations of the loop. The default value is Infinity (loop eternally)'\n      ),\n      mute: Types.boolean.desc('Muting the Loop means that no callbacks are invoked'),\n      humanize: Types.boolean.desc(\n        'Random variation +/-0.01s to the scheduled time. Or give it a time value which it will randomize by'\n      ),\n    },\n    output: {\n      i: Types.number.desc('The number of times this node has looped so far.'),\n    },\n    state: {},\n  };\n\n  onAddToGraph = () => {\n    this.loop = new Tone.Loop(() => {\n      this.count += 1;\n      this.notifyOutputs(this.outKeys(), true);\n    }, this.props.interval);\n  };\n\n  _manageLoop = () => {\n    if (this.loop.state !== 'started') {\n      this.loop.start();\n    }\n  };\n\n  willReceiveProps = (newProps: Object) => {\n    ['interval', 'playbackRate', 'humanize', 'mute', 'iterations'].forEach(k => {\n      this.loop[k] = newProps[k];\n    });\n  };\n\n  process = () => {\n    this._manageLoop();\n    return { i: this.count };\n  };\n}\n\nexport class SynthNode extends NodeBase<\n  { value: Tone.DuoSynth },\n  { volume: number, oscillator: Object, envelope: Object },\n  { out: Tone.DuoSynth }\n> {\n  static fwdSignals = ['frequency', 'volume'];\n  static +displayName = 'Synth';\n  static +registryName = 'SynthNode';\n  static defaultProps = { volume: 0 };\n  static description = (\n    <span>A Synth is composed by routing an OmniOscillator through a AmplitudeEnvelope.</span>\n  );\n\n  static schema = {\n    input: {\n      volume: Types.number.desc('The volume of the output in decibels'),\n      oscillator: Types.string\n        .aliased(\n          'OscillatorType',\n          <div>\n            The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n            setting the first x number of partials of the oscillator. For example: `sine4` would set\n            be the first 4 partials of the sine wave and `triangle8` would set the first 8 partials\n            of the triangle wave.\n          </div>\n        )\n        .desc('The type of oscillator'),\n      envelope: Types.object\n        .aliased(\n          'AmplitudeEnvelope',\n          <div>\n            AmplitudeEnvelope is an Envelope connected to a gain node. Unlike Envelope, which\n            outputs the envelope’s value, AmplitudeEnvelope accepts an audio signal as the input and\n            will apply the envelope to the amplitude of the signal.\n          </div>\n        )\n        .desc('The frequency of vibrato'),\n    },\n    output: { out: TT.Synth.desc('Resulting Synth') },\n    state: { value: TT.Synth.desc('The synth') },\n  };\n\n  onAddToGraph = () => {\n    this.state.value = SynthNode.defaultSynth();\n  };\n\n  _recreateSynth = () => {\n    this.state.value = new Tone.Synth({\n      oscillator: { type: this.props.oscillator },\n      envelope: this.props.envelope,\n    });\n  };\n\n  willBecomeLive = () => {\n    this._recreateSynth();\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object, manual: boolean) => {\n    if (manual) {\n      SynthNode.fwdSignals.forEach(k => {\n        if (!prevProps || newProps[k] !== prevProps[k]) {\n          this.pushToState('value', { [k]: newProps[k] }, [], [k, 'value']);\n        }\n      });\n    }\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if (SynthNode.fwdSignals.includes(edge.toPort)) {\n      const changed = this.pushToState('value', change, [], [edge.toPort, 'value']);\n      return changed ? this.outKeys() : [];\n    }\n    if (\n      ['envelope', 'oscillator'].includes(edge.toPort) &&\n      this.props.envelope &&\n      this.props.oscillator\n    ) {\n      this._recreateSynth();\n    }\n    return [];\n  };\n\n  process = () => {\n    return { out: this.state.value };\n  };\n\n  static defaultSynth() {\n    let envelope = { attack: 0.1, release: 4, releaseCurve: 'linear' };\n    return new Tone.Synth({ oscillator: { type: 'sawtooth' }, envelope });\n  }\n}\n\nexport class DuoSynthNode extends NodeBase<{ value: Tone.DuoSynth }, {}, { out: Tone.DuoSynth }> {\n  static fwdSignals = ['frequency', 'harmonicity', 'volume', 'vibratoAmount', 'vibratoRate'];\n  static +displayName = 'DuoSynth';\n  static +registryName = 'DuoSynthNode';\n  static description = (\n    <span>\n      A DuoSynth is a monophonic synth composed of two <code>MonoSynths</code> run in parallel with\n      control over the frequency ratio between the two voices and vibrato effect.\n    </span>\n  );\n\n  static schema = {\n    input: {\n      frequency: Types.number.desc('The frequency control'),\n      volume: Types.number.desc('The volume of the output in decibels'),\n      harmonicity: Types.number.desc(\n        'Harmonicity is the ratio between the two voices. A harmonicity of 1 is no change. Harmonicity = 2 means a change of an octave.'\n      ),\n      vibratoAmount: Types.number.desc('The amount of vibrato'),\n      vibratoRate: Types.number.desc('The frequency of vibrato'),\n    },\n    output: { out: TT.Synth.desc('Resulting Synth') },\n    state: { value: TT.Synth.desc('The synth') },\n  };\n\n  static shortNames = {\n    vibratoAmount: 'vibrato',\n    vibratoRate: 'vibratoF',\n    harmonicity: 'ratio',\n    frequency: 'freq',\n  };\n\n  onAddToGraph = () => {\n    this.state.value = DuoSynthNode.defaultSynth();\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object, manual: boolean) => {\n    if (manual) {\n      DuoSynthNode.fwdSignals.forEach(k => {\n        if (!prevProps || newProps[k] !== prevProps[k]) {\n          this.pushToState('value', { [k]: newProps[k] }, [], [k, 'value']);\n        }\n      });\n    }\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if (DuoSynthNode.fwdSignals.includes(edge.toPort)) {\n      this.pushToState('value', change, [], [edge.toPort, 'value']);\n      return [];\n    }\n    return [];\n  };\n\n  process = () => {\n    return { out: this.state.value };\n  };\n\n  static defaultSynth() {\n    let envelope = { attack: 0.8, release: 4, releaseCurve: 'linear' };\n    let filterEnvelope = {\n      baseFrequency: 200,\n      octaves: 2,\n      attack: 0,\n      decay: 0,\n      release: 1000,\n    };\n    const synthOpts = {\n      harmonicity: 1,\n      volume: -20,\n      voice0: { oscillator: { type: 'sawtooth' }, envelope, filterEnvelope },\n      voice1: { oscillator: { type: 'sine' }, envelope, filterEnvelope },\n      vibratoRate: 0.5,\n      vibratoAmount: 0.1,\n    };\n    return new Tone.DuoSynth(synthOpts);\n  }\n}\n\nexport class PianoNode extends NodeBase<{}, {}, { out: Piano }> {\n  piano: Piano;\n  loaded: boolean = false;\n  static +displayName = 'Piano';\n  static +registryName = 'PianoNode';\n  static description = <span>A virtual Salamander grand piano as a Tone Node</span>;\n\n  static schema = {\n    input: {},\n    output: { out: TT.AudioNode.desc('A piano node') },\n    state: {},\n  };\n\n  onAddToGraph = () => {\n    this.piano = new Piano({ velocities: 4 });\n    this.piano.load('https://storage.googleapis.com/learnjs-data/Piano/Salamander/').then(() => {\n      this.loaded = true;\n    });\n  };\n\n  process = () => {\n    return { out: this.piano };\n  };\n}\n\nexport class TransportTimeNode extends NodeBase<{}, { bpm: number }, { out: Tone.Transport }> {\n  static +displayName = 'Transport Time';\n  static +registryName = 'TransportTimeNode';\n  static defaultProps = { bpm: 120 };\n  static description = (\n    <span>\n      Transport for timing musical events. Supports tempo curves and time changes. Unlike event-loop\n      timing (IntervalNode), events backed by this scheduler need to specify the exact time of their\n      schedules. <br /> <br /> It is useful to think of there only being one governing Transport\n      Time for your whole graph, i.e. don't define more than one of these, or if you do, recognize\n      that you are modifying a single global transport time.\n    </span>\n  );\n\n  static schema = {\n    input: {\n      bpm: Types.number.desc(\n        'The tempo to set for this transport. See the docs on the time type to understand how time can be expressed in terms of metered time.'\n      ),\n    },\n    output: { out: Types.object.desc('Resulting transport') },\n    state: {},\n  };\n\n  _notifyOut = () => {\n    setTimeout(() => this.notifyAllOutputs(true));\n  };\n\n  onAddToGraph = () => {\n    Tone.Transport.on('start', this._notifyOut);\n    Tone.Transport.on('stop', this._notifyOut);\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object, manual: boolean) => {\n    if (manual) {\n      if (!prevProps || newProps['bpm'] !== prevProps['bpm']) {\n        Tone.Transport.bpm.value = newProps.bpm;\n      }\n    }\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if (edge.toPort === 'bpm') {\n      Tone.Transport.bpm.value = edge.inDataFor(change);\n      return this.outKeys();\n    }\n    return [];\n  };\n\n  process = () => {\n    return { out: Tone.Transport };\n  };\n}\n\nexport class StartTransportNode extends NodeBase<{}, { transport: Tone.Transport }, null> {\n  static +displayName = 'Start Transport';\n  static +registryName = 'StartTransportNode';\n  static description = (\n    <span>Start a transport time. This will put all Transport time schedules into motion</span>\n  );\n  static schema = {\n    input: { transport: Types.object.desc('The Transport Time to start') },\n    output: {},\n    state: {},\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if (edge.toPort === 'transport') {\n      const transport = edge.inDataFor(change);\n      if (transport && transport.state !== 'started') {\n        setTimeout(() => transport.start('+1'), 1);\n      }\n    }\n    return [];\n  };\n\n  _stopTime = () => {\n    const { transport } = this.props;\n    if (transport) {\n      transport.stop();\n    }\n  };\n\n  beforeDisconnectIn: Edge => void = edge => {\n    const name = edge.toPort;\n    if (name === 'transport') {\n      this._stopTime();\n    }\n  };\n\n  willBeRemoved = () => {\n    this._stopTime();\n  };\n\n  process = () => {\n    return null;\n  };\n}\n\nfunction logConnect(f, to) {\n  const fromName = f.constructor.name || f.__proto__.toString();\n  const toName = to.constructor.name || to.__proto__.toString();\n  get(window, '$logConnect') && console.log('connect', fromName, toName);\n}\n","// @flow\nimport * as tf from '@tensorflow/tfjs-core';\nimport Tone from 'tone';\nimport 'regenerator-runtime/runtime';\n\nconst STEPS_PER_GENERATE_CALL = 10;\nconst GENERATION_BUFFER_SECONDS = 0.5;\nconst MAX_GENERATION_LAG_SECONDS = 1;\nconst MAX_NOTE_DURATION_SECONDS = 3;\n\nconst NOTES_PER_OCTAVE = 12;\nconst DENSITY_BIN_RANGES = [1.0, 2.0, 4.0, 8.0, 16.0, 32.0, 64.0];\nconst PITCH_HISTOGRAM_SIZE = NOTES_PER_OCTAVE;\nconst RESET_RNN_FREQUENCY_MS = 20000;\nconst MIN_MIDI_PITCH = 0;\nconst MAX_MIDI_PITCH = 127;\nconst VELOCITY_BINS = 32;\nconst MAX_SHIFT_STEPS = 100;\n\nexport const MIDI_EVENT_ON = 0x90;\nexport const MIDI_EVENT_OFF = 0x80;\nconst EVENT_RANGES = [\n  ['note_on', MIN_MIDI_PITCH, MAX_MIDI_PITCH],\n  ['note_off', MIN_MIDI_PITCH, MAX_MIDI_PITCH],\n  ['time_shift', 1, MAX_SHIFT_STEPS],\n  ['velocity_change', 1, VELOCITY_BINS],\n];\nconst GAIN = 80;\n\nconst calculateEventSize = () => {\n  let eventOffset = 0;\n  for (const eventRange of EVENT_RANGES) {\n    const minValue = eventRange[1];\n    const maxValue = eventRange[2];\n    eventOffset += maxValue - minValue + 1;\n  }\n  return eventOffset;\n};\nconst URL_BASE = process.env.PUBLIC_URL || '';\n\nconst EVENT_SIZE = calculateEventSize();\nconst PRIMER_IDX = 355;\nconst CHECKPOINT_URL = URL_BASE + '/latent/performance';\n\nexport const pentatonic = [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0];\nexport const cMajor = [2, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1];\nexport const fMajor = [1, 0, 1, 0, 1, 2, 0, 1, 0, 1, 1, 0];\nexport const dMinor = [1, 0, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0];\n\nconst notes = ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\nconst map = {};\nfor (let i = 0; i < 128; i++) {\n  map[i] = notes[i % 12];\n}\n\nexport type ToneAction = 'attack' | 'release' | 'attackRelease';\n// [event, note, velocity]\nexport type MidiData = [number, number, number];\n\nexport default class Performance {\n  // midi num -> velocity\n  velocityMapListener: ?(Map<number, number>) => void = null;\n  midiListener: ?(midiData: MidiData, time: number) => void = null;\n  toneListener: ?(\n    note: Tone.Frequency,\n    action: ToneAction,\n    time: Tone.Time,\n    normalizedVelocity?: number\n  ) => void = null;\n  velocityMapListener: (Map<number, number>) => void;\n  activeVelocities = new Map<number, number>();\n  activeNotes = new Map<number, number>();\n  forgetBias = tf.scalar(1.0);\n\n  lstmKernel1: tf.Tensor2D;\n  lstmBias1: tf.Tensor1D;\n  lstmKernel2: tf.Tensor2D;\n  lstmBias2: tf.Tensor1D;\n  lstmKernel3: tf.Tensor2D;\n  lstmBias3: tf.Tensor1D;\n  c: tf.Tensor2D[];\n  h: tf.Tensor2D[];\n  fcB: tf.Tensor1D;\n  fcW: tf.Tensor2D;\n  pitchHistArray: number[] = pentatonic;\n  pitchHistogram: tf.Tensor1D;\n  noteDensityBucket: number = 1;\n  stepsPerSecond: number = 100;\n  noteDensityEncoding: tf.Tensor1D;\n  currentTime = 0;\n  startTime = 0;\n  currentVelocity = 100;\n  currentLoopId = 0;\n  lastSample = tf.scalar(PRIMER_IDX, 'int32');\n  initialized = false;\n  modelReady = false;\n  intervalId: ?TimeoutID;\n  generationInterval: ?TimeoutID;\n  stopped = false;\n\n  start = () => {\n    if (this.initialized) {\n      return;\n    }\n    this.initialized = true;\n    Tone.Transport.start();\n    fetch(`${CHECKPOINT_URL}/weights_manifest.json`)\n      .then(response => response.json())\n      .then((manifest: tf.WeightsManifestConfig) => tf.io.loadWeights(manifest, CHECKPOINT_URL))\n      .then((vars: { [varName: string]: tf.Tensor }) => {\n        this.lstmKernel1 = vars['rnn/multi_rnn_cell/cell_0/basic_lstm_cell/kernel'];\n        this.lstmBias1 = vars['rnn/multi_rnn_cell/cell_0/basic_lstm_cell/bias'];\n        this.lstmKernel2 = vars['rnn/multi_rnn_cell/cell_1/basic_lstm_cell/kernel'];\n        this.lstmBias2 = vars['rnn/multi_rnn_cell/cell_1/basic_lstm_cell/bias'];\n        this.lstmKernel3 = vars['rnn/multi_rnn_cell/cell_2/basic_lstm_cell/kernel'];\n        this.lstmBias3 = vars['rnn/multi_rnn_cell/cell_2/basic_lstm_cell/bias'];\n        this.fcB = vars['fully_connected/biases'];\n        this.fcW = vars['fully_connected/weights'];\n        this.modelReady = true;\n        this.resetRnn();\n      })\n      .then(() => {\n        setTimeout(() => this.resetRnnRepeatedly(), RESET_RNN_FREQUENCY_MS);\n      });\n    this.refreshConditioning();\n  };\n\n  setTempo = (sps: number) => {\n    this.stepsPerSecond = sps;\n  };\n\n  cleanup = () => {\n    if (this.intervalId) {\n      clearTimeout(this.intervalId);\n    }\n    if (this.generationInterval) {\n      clearTimeout(this.generationInterval);\n    }\n    this.stopped = true;\n  };\n\n  refreshConditioning = () => {\n    if (this.noteDensityEncoding != null) {\n      this.noteDensityEncoding.dispose();\n      this.noteDensityEncoding = null;\n    }\n    this.noteDensityEncoding = tf\n      .oneHot(tf.tensor1d([this.noteDensityBucket], 'int32'), DENSITY_BIN_RANGES.length + 1)\n      .as1D();\n    if (this.pitchHistogram != null) {\n      this.pitchHistogram.dispose();\n      this.pitchHistogram = null;\n    }\n    const buffer = tf.buffer([PITCH_HISTOGRAM_SIZE], 'float32');\n    const pitchHistogramTotal = this.pitchHistArray.reduce((prev, val) => prev + val, 0);\n    for (let i = 0; i < PITCH_HISTOGRAM_SIZE; i++) {\n      buffer.set(this.pitchHistArray[i] / pitchHistogramTotal, i);\n    }\n    this.pitchHistogram = buffer.toTensor();\n  };\n\n  resetRnn = () => {\n    this.c = [\n      tf.zeros([1, this.lstmBias1.shape[0] / 4]),\n      tf.zeros([1, this.lstmBias2.shape[0] / 4]),\n      tf.zeros([1, this.lstmBias3.shape[0] / 4]),\n    ];\n    this.h = [\n      tf.zeros([1, this.lstmBias1.shape[0] / 4]),\n      tf.zeros([1, this.lstmBias2.shape[0] / 4]),\n      tf.zeros([1, this.lstmBias3.shape[0] / 4]),\n    ];\n    if (this.lastSample != null) {\n      this.lastSample.dispose();\n    }\n    this.lastSample = tf.scalar(PRIMER_IDX, 'int32');\n    this.currentTime = Tone.now();\n    this.startTime = performance.now() - this.currentTime * 1000;\n    this.currentLoopId++;\n    // todo await\n    this.generateStep(this.currentLoopId);\n  };\n\n  getConditioning = () => {\n    return tf.tidy(() => {\n      const axis = 0;\n      const conditioning = this.noteDensityEncoding.concat(this.pitchHistogram, axis);\n      return tf.tensor1d([0], 'int32').concat(conditioning, axis);\n    });\n  };\n\n  getOutputs = () => {\n    const lstm1 = (data, c, h) =>\n      tf.basicLSTMCell(this.forgetBias, this.lstmKernel1, this.lstmBias1, data, c, h);\n    const lstm2 = (data, c, h) =>\n      tf.basicLSTMCell(this.forgetBias, this.lstmKernel2, this.lstmBias2, data, c, h);\n    const lstm3 = (data, c, h) =>\n      tf.basicLSTMCell(this.forgetBias, this.lstmKernel3, this.lstmBias3, data, c, h);\n\n    const [_c, _h, outputs] = tf.tidy(() => {\n      // Generate some notes.\n      const innerOuts: tf.Scalar[] = [];\n      for (let i = 0; i < STEPS_PER_GENERATE_CALL; i++) {\n        // Use last sampled output as the next input.\n        const eventInput = tf.oneHot(this.lastSample.as1D(), EVENT_SIZE).as1D();\n        // Dispose the last sample from the previous generate call, since we\n        // kept it.\n        if (i === 0) {\n          this.lastSample.dispose();\n        }\n        const conditioning = this.getConditioning();\n        const axis = 0;\n        const input = conditioning.concat(eventInput, axis).toFloat();\n        const output = tf.multiRNNCell([lstm1, lstm2, lstm3], input.as2D(1, -1), this.c, this.h);\n        this.c.forEach(c => c.dispose());\n        this.h.forEach(h => h.dispose());\n        this.c = output[0];\n        this.h = output[1];\n        const outputH = this.h[2];\n        const logits = outputH.matMul(this.fcW).add(this.fcB);\n        const sampledOutput = tf.multinomial(logits.as1D(), 1).asScalar();\n        innerOuts.push(sampledOutput);\n        this.lastSample = sampledOutput;\n      }\n      return [this.c, this.h, innerOuts];\n    });\n    this.c = _c;\n    this.h = _h;\n    return outputs;\n  };\n\n  generateStep = async (loopId: number) => {\n    if (loopId < this.currentLoopId) return;\n    const outputs = this.getOutputs();\n    for (let i = 0; i < outputs.length; i++) {\n      this.playOutput(outputs[i].dataSync()[0]);\n    }\n    if (Tone.now() - this.currentTime > MAX_GENERATION_LAG_SECONDS) {\n      this.currentTime = Tone.now();\n    }\n    const delta = Math.max(0, this.currentTime - Tone.now() - GENERATION_BUFFER_SECONDS);\n    this.generationInterval = setTimeout(() => this.generateStep(loopId), delta * 1000);\n  };\n\n  playOutput = (index: number) => {\n    if (this.stopped) return;\n    let offset = 0;\n    for (const eventRange of EVENT_RANGES) {\n      const eventType = eventRange[0];\n      const minValue = eventRange[1];\n      const maxValue = eventRange[2];\n      if (offset <= index && index <= offset + maxValue - minValue) {\n        if (eventType === 'note_on') {\n          const noteNum = index - offset;\n          this.activeNotes.set(noteNum, this.currentTime);\n          this.activeVelocities.set(noteNum, this.currentVelocity * GAIN);\n          this.velocityMapListener && this.velocityMapListener(this.activeVelocities);\n          this.midiListener &&\n            // $FlowIssue - not sure\n            this.midiListener(\n              [MIDI_EVENT_ON, noteNum, this.currentVelocity * GAIN],\n              Math.floor(1000 * this.currentTime) - this.startTime\n            );\n          this.toneListener &&\n            // $FlowIssue - not sure\n            this.toneListener(\n              Tone.Frequency(noteNum, 'midi'),\n              'attack',\n              this.currentTime,\n              (this.currentVelocity * GAIN) / 100\n            );\n          return;\n        } else if (eventType === 'note_off') {\n          const noteNum = index - offset;\n          const activeNoteEndTimeSec = this.activeNotes.get(noteNum);\n          if (activeNoteEndTimeSec === null || activeNoteEndTimeSec === undefined) {\n            return;\n          }\n          const timeSec = Math.max(this.currentTime, activeNoteEndTimeSec + 0.5);\n          this.midiListener &&\n            // $FlowIssue - not sure\n            this.midiListener(\n              [MIDI_EVENT_OFF, noteNum, this.currentVelocity * GAIN],\n              Math.floor(timeSec * 1000) - this.startTime\n            );\n          this.toneListener &&\n            // $FlowIssue - not sure\n            this.toneListener(\n              Tone.Frequency(noteNum, 'midi'),\n              'release',\n              this.currentTime,\n              (this.currentVelocity * GAIN) / 100\n            );\n          this.activeNotes.delete(noteNum);\n          this.activeVelocities.delete(noteNum);\n          this.velocityMapListener && this.velocityMapListener(this.activeVelocities);\n          return;\n        } else if (eventType === 'time_shift') {\n          this.currentTime += (index - offset + 1) / this.stepsPerSecond;\n          this.activeNotes.forEach((timeSec, noteNum) => {\n            if (this.currentTime - timeSec > MAX_NOTE_DURATION_SECONDS) {\n              this.midiListener &&\n                // $FlowIssue - not sure\n                this.midiListener([MIDI_EVENT_OFF, noteNum, this.currentVelocity * GAIN]);\n              this.toneListener &&\n                // $FlowIssue - not sure\n                this.toneListener(Tone.Frequency(noteNum, 'midi'), 'release', this.currentTime);\n              this.activeNotes.delete(noteNum);\n              this.activeVelocities.delete(noteNum);\n              this.velocityMapListener && this.velocityMapListener(this.activeVelocities);\n            }\n          });\n          return this.currentTime;\n        } else if (eventType === 'velocity_change') {\n          this.currentVelocity = (index - offset + 1) * Math.ceil(127 / VELOCITY_BINS);\n          this.currentVelocity = this.currentVelocity / 127;\n          return this.currentVelocity;\n        } else {\n          throw new Error('Could not decode eventType: ' + eventType);\n        }\n      }\n      offset += maxValue - minValue + 1;\n    }\n    throw new Error(`Could not decode index: ${index}`);\n  };\n\n  resetRnnRepeatedly = () => {\n    if (this.stopped) return;\n    if (this.modelReady) this.resetRnn();\n    this.intervalId = setTimeout(() => this.resetRnnRepeatedly(), RESET_RNN_FREQUENCY_MS);\n  };\n}\n","// @flow\nimport React from 'react';\nimport { compact } from 'lodash';\nimport Tone from 'tone';\nimport NodeBase from 'models/NodeBase';\nimport Edge from 'models/Edge';\nimport Performance from 'performance';\nimport { TT as ToneTypes } from 'models/nodes/ToneNode';\nimport type { MidiData, ToneAction } from 'performance';\nconst Piano = require('tone-piano').Piano;\nconst Types = window.Types;\n\nexport const TT = {\n  HistType: Types.any.aliased(\n    'PitchHistogram',\n    <div>\n      <p>\n        A scale represented as a distribution of pitch classes. Valid inputs are either an array of\n        numbers (len 12), or a single string of len 12 that describes relative semitone\n        distributions (ranged 0-9). 0-indexed at C.\n      </p>\n      <p>\n        e.g. <code>F Major</code> could be either array:{' '}\n        <code>[1, 0, 1, 0, 1, 2, 0, 1, 0, 1, 1, 0]</code> or string:\n        <code>\"101012010110\"</code>\n      </p>\n    </div>\n  ),\n  ToneData: Types.object.aliased('ToneData', 'Directives for an instrument / synth to play.'),\n  MidiData: Types.object.aliased(\n    'MidiData',\n    'Midi signal. Usually a note, action, velocity, and channel information'\n  ),\n};\nexport type ToneData = [Tone.Frequency, ToneAction, Tone.Time, ?number];\n\nexport class PerformanceRNNNode extends NodeBase<\n  {},\n  {\n    chroma: number[],\n    density: number,\n    synth: Tone.Synth | Tone.Instrument,\n    stepsPerSecond: number,\n  },\n  {\n    midiData: [MidiData, number],\n    toneData: ToneData,\n  }\n> {\n  static +displayName = 'Music RNN';\n  static +registryName = 'PerformanceRNNNode';\n  static defaultProps = { stepsPerSecond: 100 };\n  static description = (\n    <span>Sample an RNN model trained on the Yamaha e-Piano Competition dataset</span>\n  );\n  static schema = {\n    input: {\n      scale: TT.HistType.desc(\n        'This pitch distribution will be used as a tonic to condition this model'\n      ),\n      density: Types.number.desc(\n        'A density conditioning variable between 0-6 that serves as a directive for how many notes will be generated per step, in exponential scale. i.e. notes generated per step will be 2^density'\n      ),\n      stepsPerSecond: Types.number.desc(\n        'number of steps per second. effectively a tempo measure for note generation / playback'\n      ),\n      synth: ToneTypes.Synth.desc(\n        'Optionally attach a synth to this node and trigger its attack / release'\n      ),\n      midiOut: Types.object\n        .aliased('MidiOut', 'A connected MIDI output')\n        .desc('Optionally attach a midi output to this node and send midi signals to that device'),\n    },\n    output: {\n      midiData: Types.object.desc('midi data out'),\n      toneData: TT.ToneData.desc('tone out node'),\n    },\n    state: {},\n  };\n  static shortNames = { stepsPerSecond: 'steps/s' };\n  performance: Performance;\n  toneOut: ToneData;\n  midiOut: [MidiData, number];\n  started: boolean = false;\n  _map = {};\n  _midiMap = {};\n\n  static play(data: ToneData, synth: Tone.Synth | Tone.Instrument | Piano) {\n    const [note, action, time, velocity] = data;\n    switch (action) {\n      case 'attack':\n        if (synth instanceof Piano) {\n          try {\n            synth.keyUp(note.toMidi(), time, velocity);\n          } catch (e) {\n            console.warn(e);\n          }\n        } else {\n          synth.triggerAttack(note, time, velocity);\n        }\n        break;\n      case 'release':\n        if (synth instanceof Piano) {\n          synth.keyDown(note.toMidi(), time, velocity);\n        } else {\n          synth.triggerRelease(note, time, velocity);\n        }\n        break;\n      case 'attackRelease':\n        synth.triggerAttackRelease(note, '4n', time, velocity);\n        break;\n      default:\n        break;\n    }\n  }\n\n  onAddToGraph = () => {\n    this.performance = new Performance();\n    this.performance.toneListener = (\n      note: Tone.Frequency,\n      action: ToneAction,\n      time: Tone.Time,\n      normalizedVelocity?: number\n    ) => {\n      this.toneOut = [note, action, time, normalizedVelocity];\n      this.notifyOutputs(['toneData'], true);\n      this._getSynths().forEach(synth => PerformanceRNNNode.play(this.toneOut, synth));\n    };\n    this.performance.midiListener = (midiData, time) => {\n      this.midiOut = [midiData, time];\n      this.notifyOutputs(['midiData'], true);\n      this._getMidiDevices().forEach(device => {\n        device.send(midiData, time);\n      });\n    };\n  };\n\n  willBeRemoved = () => {\n    this.performance.toneListener = null;\n    this.performance.midiListener = null;\n    this.performance.cleanup();\n    // $FlowIssue\n    this.performance = null;\n  };\n\n  _getSynths = () => {\n    return compact(this.inputs.map(e => this._map[e.id]));\n  };\n\n  _getMidiDevices = () => {\n    return compact(this.inputs.map(e => this._midiMap[e.id]));\n  };\n\n  _startModel = () => {\n    this.performance.start();\n    this.started = true;\n  };\n\n  beforeConnectOut = () => {\n    if (!this.started) this._startModel();\n  };\n\n  beforeConnectIn = (e: Edge) => {\n    if (!this.started && e.toPort === 'synth') this._startModel();\n    if (!this.started && e.toPort === 'midiOut') this._startModel();\n  };\n\n  _compareHistograms = (hist: string | number[], other: string | number[]): boolean => {\n    const canon1 = Array.isArray(hist) ? hist.join('') : hist;\n    const canon2 = Array.isArray(other) ? other.join('') : other;\n    return canon1 === canon2;\n  };\n\n  _histForPerformance = (hist: string | any[]): number[] => {\n    if (Array.isArray(hist)) {\n      return hist.map(a => parseInt(a));\n    } else if (typeof hist === 'string') {\n      return hist.split('').map(s => parseInt(s));\n    }\n    throw new Error('cannot parse histogram');\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    if (!prevProps || (newProps.density !== undefined && newProps.density !== prevProps.density)) {\n      this.performance.noteDensityBucket = newProps.density;\n      this.performance.refreshConditioning();\n    }\n    if (\n      !prevProps ||\n      (newProps.stepsPerSecond !== undefined &&\n        newProps.stepsPerSecond !== prevProps.stepsPerSecond)\n    ) {\n      this.performance.stepsPerSecond = newProps.stepsPerSecond;\n      this.performance.refreshConditioning();\n    }\n    if (\n      !prevProps ||\n      (newProps.scale !== undefined && !this._compareHistograms(newProps.scale, prevProps.scale))\n    ) {\n      this.performance.pitchHistArray = this._histForPerformance(newProps.scale);\n      this.performance.refreshConditioning();\n    }\n  };\n\n  process = () => ({ midiData: this.midiOut, toneData: this.toneOut });\n  onInputChange = (edge: Edge, change: Object) => {\n    if (edge.toPort === 'synth') {\n      const s = edge.inDataFor(change);\n      if (s) this._map[edge.id] = s;\n    }\n    if (edge.toPort === 'midiOut') {\n      const s = edge.inDataFor(change);\n      if (s) this._midiMap[edge.id] = s;\n    }\n    // do not notify on input changes\n    return [];\n  };\n}\n","// @flow\nimport React from 'react';\nimport Tone from 'tone';\nimport { get } from 'lodash';\nimport NodeBase from 'models/NodeBase';\nimport SoundFont from 'soundfont-player';\nimport { TT as NTypes, type ToneData } from 'models/nodes/Neural';\nimport type { MidiData } from 'performance';\nimport { MIDI_EVENT_OFF, MIDI_EVENT_ON } from 'performance';\nconst Types = window.Types;\n\nexport const TT = {\n  SoundFont: Types.object.aliased('SoundFont', 'A sample set assembled to be a virtual instrument'),\n};\n\nexport class SoundFontNode extends NodeBase<\n  {},\n  { name: string, attack: number, decay: number, release: number, sustain: number },\n  { out: ?Object }\n> {\n  instrument: Object;\n  _loaded: ?string = null;\n  static +registryName = 'SoundFontNode';\n  static +displayName = 'SoundFont';\n  static description = <span>A virtual instrument</span>;\n  static defaultProps = { attack: 0.5, decay: 1, release: 1, sustain: 0.9 };\n\n  static schema = {\n    input: {\n      name: Types.string.desc(\n        <div>\n          <p>The name of the soundfont to use. Possible values:</p>\n          <p>\n            accordion, acoustic_bass, acoustic_grand_piano, acoustic_guitar_nylon,\n            acoustic_guitar_steel, agogo, alto_sax, applause, bagpipe, banjo, baritone_sax, bassoon,\n            bird_tweet, blown_bottle, brass_section, breath_noise, bright_acoustic_piano, celesta,\n            cello, choir_aahs, church_organ, clarinet, clavinet, contrabass, distortion_guitar,\n            drawbar_organ, dulcimer, electric_bass_finger, electric_bass_pick, electric_grand_piano,\n            electric_guitar_clean, electric_guitar_jazz, electric_guitar_muted, electric_piano_1,\n            electric_piano_2, english_horn, fiddle, flute, french_horn, fretless_bass, fx_1_rain,\n            fx_2_soundtrack, fx_3_crystal, fx_4_atmosphere, fx_5_brightness, fx_6_goblins,\n            fx_7_echoes, fx_8_scifi, glockenspiel, guitar_fret_noise, guitar_harmonics, gunshot,\n            harmonica, harpsichord, helicopter, honkytonk_piano, kalimba, koto, lead_1_square,\n            lead_2_sawtooth, lead_3_calliope, lead_4_chiff, lead_5_charang, lead_6_voice,\n            lead_7_fifths, lead_8_bass__lead, marimba, melodic_tom, music_box, muted_trumpet, oboe,\n            ocarina, orchestra_hit, orchestral_harp, overdriven_guitar, pad_1_new_age, pad_2_warm,\n            pad_3_polysynth, pad_4_choir, pad_5_bowed, pad_6_metallic, pad_7_halo, pad_8_sweep,\n            pan_flute, percussive_organ, piccolo, pizzicato_strings, recorder, reed_organ,\n            reverse_cymbal, rock_organ, seashore, shakuhachi, shamisen, shanai, sitar, slap_bass_1,\n            slap_bass_2, soprano_sax, steel_drums, string_ensemble_1, string_ensemble_2,\n            synth_bass_1, synth_bass_2, synth_brass_1, synth_brass_2, synth_choir, synth_drum,\n            synth_strings_1, synth_strings_2, taiko_drum, tango_accordion, telephone_ring,\n            tenor_sax, timpani, tinkle_bell, tremolo_strings, trombone, trumpet, tuba,\n            tubular_bells, vibraphone, viola, violin, voice_oohs, whistle, woodblock, xylophone\n          </p>\n        </div>\n      ),\n      attack: Types.number.desc('The attack to use for this instrument'),\n      decay: Types.number.desc('The decay to use for this instrument'),\n      release: Types.number.desc('The release to use for this instrument'),\n      sustain: Types.number.desc('The sustain to use for this instrument'),\n    },\n    output: { out: TT.SoundFont.desc('Resulting SoundFont') },\n    state: {},\n  };\n\n  _options = () => {\n    const attack = this.props.attack || 0;\n    const decay = this.props.decay || 0;\n    const release = this.props.release || 0;\n    const sustain = this.props.sustain | 0;\n    return { attack, release, decay, sustain };\n  };\n\n  _setFont = (name: string) => {\n    SoundFont.instrument(Tone.context, name, this._options()).then(inst => {\n      this.instrument = inst;\n      this.instrument.opts = { ...this.instrument.opts, ...this._options() };\n      this.notifyAllOutputs(true);\n      this._loaded = name;\n    });\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    if (newProps.name && (!prevProps || newProps.name !== prevProps.name)) {\n      if (this._loaded !== newProps.name) {\n        this._setFont(newProps.name);\n      }\n    }\n    ['attack', 'decay', 'release', 'sustain'].forEach(k => {\n      if (typeof prevProps !== 'number' || newProps[k] !== prevProps[k]) {\n        if (this.instrument) {\n          this.instrument.opts[k] = newProps[k];\n        }\n      }\n    });\n  };\n\n  process = () => {\n    return { out: this.instrument };\n  };\n}\n\nexport class SoundFontPlayerNode extends NodeBase<\n  {},\n  { soundFont: Object, toneData: ToneData, midiDevice: ?Object },\n  null\n> {\n  static +displayName = 'SoundFont Player';\n  static +registryName = 'SoundFontPlayerNode';\n  static description = <span>A Node which plays tone data to a SoundFont instrument</span>;\n\n  static schema = {\n    input: {\n      soundFont: TT.SoundFont.desc('The particular sound font to use.'),\n      toneData: NTypes.ToneData.desc(\n        'Data fed in through this channel will be sent to the sound font instrument to play'\n      ),\n      midiData: NTypes.MidiData.desc(\n        'Data fed in through this channel will be sent to the sound font instrument to play'\n      ),\n      midiDevice: Types.object\n        .aliased('MidiInput', 'A connected MIDI input')\n        .desc('Optionally attach a midi input to this node to send signals to the soundfont'),\n    },\n    output: {},\n    state: {},\n  };\n  _playMap = {};\n  listening = [];\n\n  _playToneData = (data: ToneData, sf: Object) => {\n    const [freq, action, time, velocity] = data;\n    const note = freq.toNote();\n    switch (action) {\n      case 'attack':\n        if (!this._playMap[note]) {\n          this._playMap[note] = sf.play(note, time, { ...sf.opts, gain: velocity });\n        } else {\n          // this._playMap[note].stop();\n          this._playMap[note] = sf.play(note, time, { ...sf.opts, gain: velocity });\n        }\n        break;\n      case 'release':\n        const node = this._playMap[note];\n        if (node) {\n          node.stop(time);\n        }\n        break;\n      case 'attackRelease':\n        sf.play(note, undefined, { duration: 0.5 });\n        break;\n      default:\n        break;\n    }\n  };\n\n  _playMidiData = (midi: [MidiData, ?number], sf: Object) => {\n    const [data, _time] = midi;\n    const [event, note, velocity] = data;\n    const time = _time ? _time / 1000 : _time;\n\n    switch (event) {\n      case MIDI_EVENT_OFF:\n        const node = this._playMap[note];\n        if (node) {\n          node.stop(time);\n        }\n        break;\n      case MIDI_EVENT_ON:\n        if (!this._playMap[note]) {\n          this._playMap[note] = sf.play(note, time, { ...sf.opts, gain: velocity / 100 });\n        } else {\n          this._playMap[note].stop();\n          this._playMap[note] = sf.play(note, time, { ...sf.opts, gain: velocity / 100 });\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  _connectMidiIn = () => {\n    const { midiDevice, soundFont } = this.props;\n    if (soundFont && midiDevice && !this.listening.includes(midiDevice.id)) {\n      soundFont.listenToMidi(midiDevice);\n      this.listening.push(midiDevice.id);\n    }\n  };\n\n  process = () => {\n    const sf = get(this.props, 'soundFont', undefined);\n    if (sf) {\n      this._connectMidiIn();\n      const data = get(this.props, 'toneData');\n      if (data) this._playToneData(data, sf);\n      const midi = get(this.props, 'midiData');\n      if (midi) this._playMidiData(midi, sf);\n    }\n    return null;\n  };\n}\n","// @flow\nimport NodeBase from 'models/NodeBase';\nconst Types = window.Types;\n\ntype S = { map: Object | (any => any) };\ntype P = { input: any };\ntype O = { out: any };\n\nexport default class MapperNode extends NodeBase<S, P, O> {\n  static displayName = 'Mapper';\n  static +registryName = 'MapperNode';\n  static defaultState = { map: {} };\n  static schema = { input: { input: Types.object }, output: { out: Types.object }, state: {} };\n\n  process = () => {\n    const { map } = this.state;\n    const { input } = this.props;\n    const out = typeof map === 'object' ? map[input] : map(input);\n    return { out };\n  };\n\n  onInputChange = () => {\n    return this.outKeys();\n  };\n}\n","// @flow\nimport NodeBase from 'models/NodeBase';\nimport React from 'react';\nimport Edge from 'models/Edge';\nconst Types = window.Types;\n\ntype P = { value: any, interval: number };\ntype S = { count: number };\ntype O = { count: number, value: any };\n\nconst intervalDesc = 'The interval at which this node will emit, in miliseconds';\nconst countDesc = 'The number of times this node has emitted so far.';\nexport default class IntervalNode extends NodeBase<S, P, O> {\n  count: number = 0;\n  static displayName = 'Interval';\n  static +registryName = 'IntervalNode';\n  static description = (\n    <span>A node which emits any value and a count at a regular time interval.</span>\n  );\n  static defaultProps = { interval: 1000 };\n  static schema = {\n    input: {\n      value: Types.any.desc('Any input to emit at this interval'),\n      interval: Types.number.desc(intervalDesc),\n    },\n    output: {\n      count: Types.number.desc(countDesc),\n      value: Types.any.desc('The input value passed in'),\n    },\n    state: {},\n  };\n\n  subscriptionId: ?IntervalID;\n\n  _clearSubscription = () => {\n    if (this.subscriptionId) {\n      clearInterval(this.subscriptionId);\n      this.subscriptionId = null;\n    }\n  };\n\n  _resetCount = () => {\n    this.count = 0;\n  };\n\n  _startInterval = () => {\n    this._clearSubscription();\n    this._resetCount();\n    this.subscriptionId = setInterval(() => {\n      this.count += 1;\n      this.notifyOutputs(this.outKeys(), true);\n    }, this.props.interval);\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    if (!prevProps || newProps.interval !== prevProps.interval) {\n      this._startInterval();\n    }\n  };\n\n  afterConnectOut = () => {\n    if (this.outputs.length === 1 && !this.subscriptionId) {\n      this._startInterval();\n    }\n  };\n\n  process = () => {\n    return { count: this.count, value: this.props.value };\n  };\n\n  // do not notify on input changes\n  onInputChange = (edge: Edge, change: Object) => [];\n}\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nconst Stats = function() {\n  let mode = 0;\n  let container = document.createElement('div');\n  container.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n  container.addEventListener(\n    'click',\n    function(event) {\n      event.preventDefault();\n      showPanel(++mode % container.children.length);\n    },\n    false\n  );\n\n  //\n\n  function addPanel(panel) {\n    container.appendChild(panel.dom);\n    return panel;\n  }\n\n  function showPanel(id) {\n    for (var i = 0; i < container.children.length; i++) {\n      container.children[i].style.display = i === id ? 'block' : 'none';\n    }\n\n    mode = id;\n  }\n\n  //\n\n  var beginTime = (performance || Date).now(),\n    prevTime = beginTime,\n    frames = 0;\n\n  var fpsPanel = addPanel(new Stats.Panel('FPS', '#4084c3', '#002'));\n  var msPanel = addPanel(new Stats.Panel('MS', '#4caa4d', '#020'));\n\n  if (window.self.performance && window.self.performance.memory) {\n    var memPanel = addPanel(new Stats.Panel('MB', '#bd2b8a', '#201'));\n  }\n\n  showPanel(0);\n\n  return {\n    REVISION: 16,\n\n    dom: container,\n\n    addPanel: addPanel,\n    showPanel: showPanel,\n\n    begin: function() {\n      beginTime = (performance || Date).now();\n    },\n\n    end: function() {\n      frames++;\n\n      var time = (performance || Date).now();\n\n      msPanel.update(time - beginTime, 200);\n\n      if (time >= prevTime + 1000) {\n        fpsPanel.update((frames * 1000) / (time - prevTime), 100);\n\n        prevTime = time;\n        frames = 0;\n\n        if (memPanel) {\n          var memory = performance.memory;\n          memPanel.update(memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576);\n        }\n      }\n\n      return time;\n    },\n\n    update: function() {\n      beginTime = this.end();\n    },\n\n    // Backwards Compatibility\n\n    domElement: container,\n    setMode: showPanel,\n  };\n};\n\nStats.Panel = function(name, fg, bg) {\n  var min = Infinity,\n    max = 0,\n    round = Math.round;\n  var PR = round(window.devicePixelRatio || 1);\n\n  var WIDTH = 80 * PR,\n    HEIGHT = 48 * PR,\n    TEXT_X = 3 * PR,\n    TEXT_Y = 2 * PR,\n    GRAPH_X = 3 * PR,\n    GRAPH_Y = 15 * PR,\n    GRAPH_WIDTH = 74 * PR,\n    GRAPH_HEIGHT = 30 * PR;\n\n  var canvas = document.createElement('canvas');\n  canvas.width = WIDTH;\n  canvas.height = HEIGHT;\n  canvas.style.cssText = 'width:80px;height:48px';\n\n  var context = canvas.getContext('2d');\n  context.font = 'bold ' + 9 * PR + 'px Helvetica,Arial,sans-serif';\n  context.textBaseline = 'top';\n\n  context.fillStyle = bg;\n  context.fillRect(0, 0, WIDTH, HEIGHT);\n\n  context.fillStyle = fg;\n  context.fillText(name, TEXT_X, TEXT_Y);\n  context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n\n  context.fillStyle = bg;\n  context.globalAlpha = 0.9;\n  context.fillRect(GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT);\n\n  return {\n    dom: canvas,\n\n    update: function(value, maxValue) {\n      min = Math.min(min, value);\n      max = Math.max(max, value);\n\n      context.fillStyle = bg;\n      context.globalAlpha = 1;\n      context.fillRect(0, 0, WIDTH, GRAPH_Y);\n      context.fillStyle = fg;\n      context.fillText(\n        round(value) + ' ' + name + ' (' + round(min) + '-' + round(max) + ')',\n        TEXT_X,\n        TEXT_Y\n      );\n\n      context.drawImage(\n        canvas,\n        GRAPH_X + PR,\n        GRAPH_Y,\n        GRAPH_WIDTH - PR,\n        GRAPH_HEIGHT,\n        GRAPH_X,\n        GRAPH_Y,\n        GRAPH_WIDTH - PR,\n        GRAPH_HEIGHT\n      );\n\n      context.fillRect(GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT);\n\n      context.fillStyle = bg;\n      context.globalAlpha = 0.9;\n      context.fillRect(\n        GRAPH_X + GRAPH_WIDTH - PR,\n        GRAPH_Y,\n        PR,\n        round((1 - value / maxValue) * GRAPH_HEIGHT)\n      );\n    },\n  };\n};\n\nexport { Stats as default };\n","/* eslint-disable no-use-before-define */\n// @flow\nimport {\n  Clock,\n  FogExp2,\n  LoadingManager,\n  PerspectiveCamera,\n  Scene,\n  Vector2,\n  WebGLRenderer,\n} from 'three';\nimport { throttle } from 'lodash';\nimport OrbitControls from 'orbit-controls-es6';\nimport Stats from 'threeUtil/Stats';\nimport { EffectComposer, RenderPass } from 'postprocessing';\n// const THREE = require('three');\n// window.THREE = THREE;\n\ntype Renderable = EffectComposer | WebGLRenderer;\nexport type UpdateSignal = $Keys<typeof Base.Signals>;\ntype ShaderUniform<T> = {\n  type: string,\n  value: T,\n};\n\ntype GlobalUniforms = {\n  u_resolution: ShaderUniform<Vector2>,\n  u_mouse: ShaderUniform<Vector2>,\n  u_time: ShaderUniform<number>,\n};\n\nexport const uniforms: GlobalUniforms = {\n  u_resolution: { type: 'v2', value: new Vector2() },\n  u_mouse: { type: 'v2', value: new Vector2() },\n  u_time: { type: 'f', value: 1.0 },\n};\n\nexport default class Base {\n  static Signals = { STOP: 'STOP' };\n  loadingManager: LoadingManager;\n  assets: ?Map<string, any>;\n  scene: Scene;\n  camera: PerspectiveCamera;\n  showStats: boolean = process.env.NODE_ENV === 'development';\n  stats: ?{ domElement: Object, begin: () => void, update: () => void };\n  renderer: ?Renderable;\n  composer: ?EffectComposer;\n  renderPass: ?RenderPass;\n\n  constructor() {\n    this.loadingManager = new LoadingManager();\n    this.assets = null;\n    this.scene = new Scene();\n    this.scene.fog = new FogExp2(0x0d0d0d, 0.0025);\n    this.camera = new PerspectiveCamera(40, window.innerWidth / window.innerHeight, 0.1, 2000);\n    if (this.showStats) {\n      this.stats = new Stats();\n    }\n\n    // For the Three.js debugger chrome extension\n    // window.scene = this.scene;\n    // window.THREE = THREE;\n  }\n\n  setupStats() {\n    if (this.stats) {\n      this.stats.domElement.style.position = 'absolute';\n      this.stats.domElement.style.left = '0px';\n      this.stats.domElement.style.top = '0px';\n      // $FlowIssue\n      document.body.appendChild(this.stats.domElement);\n      this.stats && this.stats.begin();\n    }\n  }\n\n  load(callback: () => void) {\n    callback();\n  }\n\n  afterLoad = () => {};\n\n  initialise(composer?: ?EffectComposer, renderPass?: ?RenderPass) {\n    this.setupStats();\n    // NB: don't call this base impl if you want a higher level pass to be rendered\n    if (renderPass) {\n      renderPass.renderToScreen = true;\n    }\n  }\n\n  update: (delta: number) => ?UpdateSignal = delta => {};\n\n  configure(gui: ?Object) {}\n\n  reset = () => {\n    const fog = this.scene.fog;\n    this.scene = new Scene();\n    window.scene = this.scene;\n    this.scene.fog = fog;\n    return this;\n  };\n\n  cleanup = () => {\n    if (document.body && this.renderer) {\n      document.body.removeChild(this.renderer.domElement);\n    }\n    window.removeEventListener('resize', this.resize);\n  };\n\n  // TODO Memoize\n  static rgbToHex(r: number, g: number, b: number) {\n    return (1 << 24) + (r << 16) + (g << 8) + b;\n  }\n\n  start = () => {\n    const composer = new EffectComposer(this._makeRenderer(false), {\n      stencilBuffer: true,\n      depthTexture: true,\n    });\n    const renderer = composer.renderer;\n    // TODO enable this or not?\n    // const controls = new OrbitControls(this.camera, renderer.domElement);\n    renderer.domElement.style.visibility = 'hidden';\n    if (document.body) {\n      document.body.appendChild(renderer.domElement);\n    }\n    composer.reset();\n    this.load(() => {\n      const renderPass = new RenderPass(this.scene, this.camera);\n      this.renderPass = renderPass;\n      composer.addPass(renderPass);\n      this.initialise(composer, renderPass);\n      uniforms.u_resolution.value.x = renderer.domElement.width;\n      uniforms.u_resolution.value.y = renderer.domElement.height;\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      renderer.domElement.style.visibility = 'visible';\n      this.afterLoad();\n    });\n    this._listenForWindowChanges();\n    this._startRendering(composer);\n    this.composer = composer;\n    this.renderer = renderer;\n  };\n\n  // Optionally without a composer\n  startRaw = () => {\n    const renderer = this._makeRenderer();\n    if (document.body) {\n      document.body.appendChild(renderer.domElement);\n    }\n    new OrbitControls(this.camera, renderer.domElement);\n    this.load(() => {\n      this.initialise(null, null);\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.afterLoad();\n    });\n    this._listenForWindowChanges();\n    this._startRendering(renderer);\n    this.renderer = renderer;\n  };\n\n  _startRendering = (renderer: Renderable) => {\n    const clock = new Clock();\n    let animationId;\n    const render = () => {\n      const delta = clock.getDelta();\n      if (this.update(delta) !== Base.Signals.STOP) {\n        animationId = requestAnimationFrame(render);\n        uniforms.u_time.value += delta;\n        if (renderer instanceof EffectComposer) {\n          renderer.render(delta);\n        } else {\n          renderer.render(this.scene, this.camera);\n        }\n      } else {\n        cancelAnimationFrame(animationId);\n      }\n      if (this.stats) {\n        this.stats.update();\n      }\n    };\n    render();\n  };\n\n  _listenForWindowChanges = () => {\n    window.addEventListener('resize', this.resize);\n  };\n\n  resize = throttle((event: Event) => {\n    // $FlowIssue\n    const width = event.target.innerWidth;\n    // $FlowIssue\n    const height = event.target.innerHeight;\n    if (this.composer) {\n      this.composer.setSize(width, height);\n    } else if (this.renderer) {\n      this.renderer.setSize(width, height);\n    }\n    // $FlowIssue\n    uniforms.u_resolution.value.x = this.renderer.domElement.width;\n    // $FlowIssue\n    uniforms.u_resolution.value.y = this.renderer.domElement.height;\n    this.camera.aspect = width / height;\n    this.camera.updateProjectionMatrix();\n  }, 18);\n\n  _makeRenderer = (antialias: boolean = true) => {\n    const r = new WebGLRenderer({ antialias, alpha: true });\n    r.setSize(window.innerWidth, window.innerHeight);\n    r.setPixelRatio(window.devicePixelRatio);\n    r.setClearColor(0x2c2222);\n    r.autoClear = false;\n    return r;\n  };\n}\n","// @flow\nimport React from 'react';\nimport { get } from 'lodash';\nimport Base from 'threeUtil/Base';\nimport NodeBase from 'models/NodeBase';\nimport Edge from 'models/Edge';\nimport {\n  AmbientLight,\n  DirectionalLight,\n  LoadingManager,\n  Mesh,\n  NearestFilter,\n  Object3D,\n  TextureLoader,\n  Vector2,\n} from 'three';\nimport {\n  ChromaticAberrationEffect,\n  ColorAverageEffect,\n  DotScreenEffect,\n  Effect,\n  EffectPass,\n  GlitchEffect,\n  NoiseEffect,\n  Pass,\n  ScanlineEffect,\n  VignetteEffect,\n} from 'postprocessing';\nconst Types = window.Types;\nconst URL_BASE = process.env.PUBLIC_URL || '';\n\ntype P = { child: Mesh };\ntype S = { base: Base, added: string[] };\nconst TT = {\n  Color: Types.object.aliased('RGBColor', 'RGB representation of a color'),\n};\n\nexport default class ThreeNode extends NodeBase<S, P, null> {\n  static +displayName = 'Render Scene';\n  static +registryName = 'ThreeNode';\n  static description = (\n    <span>This node renders a WebGL scene, by default with a perspective camera</span>\n  );\n  rendered: any;\n  started: boolean = false;\n\n  static schema = {\n    input: {\n      child: Types.object.desc('Any scene element[s] to be added'),\n      fx: Types.object.desc('Post render pass(es)'),\n      clearColor: TT.Color.desc(\"The renderer's clear color\"),\n      clearAlpha: Types.number.desc(\"The alpha component for the renderer's clear color\"),\n    },\n    output: {},\n    state: {},\n  };\n\n  onAddToGraph = () => {\n    this.state.base = new Base();\n    this.state.added = [];\n  };\n\n  _start = () => {\n    if (this.props.child && !this.started) {\n      this.started = true;\n      this.state.base.camera.position.set(-6, 1, 30);\n      this.state.base.start();\n      if (this.state.base.renderPass && this.state.base.renderPass.renderToScreen) {\n        this.rendered = this.state.base.renderPass;\n      }\n    }\n  };\n\n  willBeRemoved = () => {\n    this.state.base.reset();\n    this.state.base.cleanup();\n  };\n\n  addPass = (pass: Pass) => {\n    const composer = this.state.base.composer;\n    if (this.rendered && composer) {\n      this.rendered.renderToScreen = false;\n      composer.addPass(pass);\n      pass.renderToScreen = true;\n      this.rendered = pass;\n    }\n  };\n\n  onInputChange = (edge: Edge, change: $Shape<P>) => {\n    const { toPort } = edge;\n    if (toPort === 'child') {\n      if (!this.state.added.includes(edge.from.id)) {\n        this.state.added.push(edge.from.id);\n        const child = edge.inDataFor(change);\n        if (child instanceof Object3D) {\n          this.state.base.scene.add(child);\n        }\n      }\n    }\n    if (toPort === 'clearColor') {\n      const newColor = edge.inDataFor(change);\n      const renderer = get(this.state, 'base.renderer');\n      if (renderer && renderer.getClearColor() !== newColor) {\n        renderer.setClearColor(newColor);\n      }\n    }\n    if (toPort === 'clearAlpha') {\n      const newAlpha = edge.inDataFor(change);\n      const renderer = get(this.state, 'base.renderer');\n      if (renderer && renderer.getClearAlpha() !== newAlpha) {\n        renderer.setClearAlpha(newAlpha);\n      }\n    }\n    return [];\n  };\n\n  process = () => {\n    this._start();\n    return null;\n  };\n}\n\nexport class AmbientLightNode extends NodeBase<\n  { light: AmbientLight },\n  {},\n  { light: AmbientLight }\n> {\n  static +displayName = 'Ambient Light';\n  static +registryName = 'AmbientLightNode';\n  static description = <span>An ambient light, intended to be added to a scene</span>;\n  static schema = {\n    input: { color: TT.Color.desc('The color of this ambient light') },\n    output: { light: Types.object.desc('The ambient light source') },\n    state: { light: Types.object.desc('The ambient light source') },\n  };\n\n  onAddToGraph = () => {\n    this.state.light = new AmbientLight(0x313a59);\n  };\n\n  process = () => ({ light: this.state.light });\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    ['color'].forEach(k => {\n      if (!prevProps || newProps[k] !== prevProps[k]) {\n        this.pushToState('light', { [k]: newProps[k] }, [], k);\n      }\n    });\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    return this.outKeys();\n  };\n}\n\nexport class DirectionalLightNode extends NodeBase<\n  { light: DirectionalLight },\n  {},\n  { light: DirectionalLight }\n> {\n  static +displayName = 'Directional Light';\n  static +registryName = 'DirectionalLightNode';\n  static description = <span>A focused light, intended to be added to a scene</span>;\n  static schema = {\n    input: { color: TT.Color.desc('The color of this directional light') },\n    output: { light: Types.object.desc('The directional light source') },\n    state: { light: Types.object.desc('The directional light source, directed at the scene') },\n  };\n\n  willBecomeLive = () => {};\n  onAddToGraph = () => {\n    this.state.light = new DirectionalLight(0xffbbaa);\n    this.state.light.position.set(0, -1, 0);\n  };\n\n  afterConnectOut = (edge: Edge) => {\n    if (edge.to instanceof ThreeNode) {\n      this.state.light.target.position.copy(edge.to.state.base.scene.position);\n    }\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    ['color'].forEach(k => {\n      if (!prevProps || newProps[k] !== prevProps[k]) {\n        this.pushToState('light', { [k]: newProps[k] }, [], k);\n      }\n    });\n  };\n  process = () => ({ light: this.state.light });\n\n  onInputChange = (edge: Edge, change: Object) => {\n    return this.outKeys();\n  };\n}\ntype ColorT = { r: number, g: number, b: number };\n\nexport class Color extends NodeBase<{}, ColorT, { rgb: ColorT, hex: number }> {\n  static +displayName = 'Color';\n  static +registryName = 'Color';\n  static defaultProps = { r: 0, g: 0, b: 0 };\n  static description = <span>A color representation</span>;\n  static schema = {\n    input: {\n      r: Types.number.desc('red channel, [0,255]'),\n      g: Types.number.desc('green channel, [0,255]'),\n      b: Types.number.desc('blue channel, [0,255]'),\n    },\n    output: {\n      hex: Types.number.desc('hex representation of this color'),\n      rgb: TT.Color.desc('rgb representation'),\n    },\n    state: {},\n  };\n\n  process = () => {\n    const r = this.props.r || 0;\n    const g = this.props.g || 0;\n    const b = this.props.b || 0;\n    let hex = Base.rgbToHex(r, g, b);\n    return { hex: hex, rgb: { r, g, b } };\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    return this.outKeys();\n  };\n}\n\nexport class GlitchPassNode extends NodeBase<{}, {}, { glitch: Object }> {\n  static +displayName = 'Glitch Pass';\n  static +registryName = 'GlitchPassNode';\n  static description = <span>A holy perturbation</span>;\n\n  static schema = {\n    input: {\n      delay: Types.Vec2.desc(\n        'the min and max delay between glitches, as a 2d vector in second units'\n      ),\n    },\n    output: { glitch: Types.object.desc('glitchy pass') },\n    state: {},\n  };\n  assets: Map<string, any>;\n  glitch: GlitchEffect;\n  aberration: ChromaticAberrationEffect;\n  rendered: boolean = false;\n\n  load = (callback: () => void) => {\n    const assets = new Map();\n    const loadingManager = new LoadingManager();\n    const textureLoader = new TextureLoader(loadingManager);\n    loadingManager.onProgress = (item, loaded, total) => {\n      if (loaded === total) {\n        this.assets = assets;\n        callback();\n      }\n    };\n    textureLoader.load(URL_BASE + '/latent/textures/perturb.jpg', texture => {\n      texture.magFilter = texture.minFilter = NearestFilter;\n      assets.set('perturb-map', texture);\n    });\n  };\n\n  _render = () => {\n    if (this.rendered || !this.glitch || !this.assets) {\n      return;\n    }\n\n    this.outputs.forEach(edge => {\n      if (edge.to instanceof ThreeNode) {\n        const threeN: ThreeNode = edge.to;\n        const camera = threeN.state.base.camera;\n        if (camera) {\n          const glitchPass = new EffectPass(camera, this.glitch);\n          const chromaticAberrationPass = new EffectPass(camera, this.aberration);\n          threeN.addPass(glitchPass);\n          threeN.addPass(chromaticAberrationPass);\n          this.rendered = true;\n        }\n      }\n    });\n  };\n\n  willBecomeLive = () => {};\n\n  onAddToGraph = () => {\n    this.load(() => {\n      this.aberration = new ChromaticAberrationEffect();\n      this.glitch = new GlitchEffect({\n        perturbationMap: this.assets.get('perturb-map'),\n        chromaticAberrationOffset: this.aberration.offset,\n      });\n      this.glitch.delay = new Vector2(5.5, 10);\n      this._render();\n    });\n  };\n\n  afterConnectOut = (edge: Edge) => {\n    this._render();\n  };\n\n  process = () => ({ glitch: this.glitch });\n\n  onInputChange = (edge: Edge, change: Object) => {\n    this._render();\n    if ('delay' === edge.toPort) {\n      this.glitch.delay = edge.inDataFor(change);\n    }\n    return this.outKeys();\n  };\n}\n\nexport class VignettePassNode extends NodeBase<\n  { opacity: number, offset: number, darkness: number },\n  {},\n  { pass: Object, effect: Effect }\n> {\n  static +displayName = 'Vignette Pass';\n  static +registryName = 'VignettePassNode';\n  static description = <span>A Vignette post-process effect</span>;\n\n  static schema = {\n    input: {\n      opacity: Types.number.desc('The vignette opacity [0,1]'),\n      offset: Types.number.desc('The vignette offset [0,1]'),\n      darkness: Types.number.desc('The vignette darkness [0,1]'),\n    },\n    output: {\n      pass: Types.object.desc('a vignette pass'),\n      effect: Types.object.desc('the effect itself'),\n    },\n    state: {},\n  };\n\n  static shortNames = { effect: 'fx' };\n\n  effect: Effect;\n  pass: Pass;\n  rendered: boolean = false;\n\n  _render = () => {\n    if (this.rendered) {\n      return;\n    }\n\n    this.outputs.forEach(edge => {\n      if (edge.to instanceof ThreeNode) {\n        const threeN: ThreeNode = edge.to;\n        const camera = threeN.state.base.camera;\n        if (camera) {\n          this.effect = new VignetteEffect({\n            eskil: false,\n            offset: 0.25,\n            darkness: 0.55,\n          });\n          this.pass = new EffectPass(camera, this.effect);\n          threeN.addPass(this.pass);\n          this.rendered = true;\n        }\n      }\n    });\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    const effect = this.effect;\n    if (!effect) return;\n    ['darkness', 'offset'].forEach(k => {\n      const uni = effect.uniforms.get(k);\n      const newVal = newProps[k];\n      if (uni !== undefined && typeof newVal === 'number' && prevProps[k] !== newVal) {\n        uni.value = newVal;\n      }\n    });\n    ['opacity'].forEach(k => {\n      const opacity = get(effect, 'blendMode.opacity');\n      const newVal = newProps[k];\n      if (opacity !== undefined && typeof newVal === 'number' && opacity.value !== newVal) {\n        opacity.value = newVal;\n      }\n    });\n  };\n\n  onAddToGraph = () => {\n    this._render();\n  };\n\n  afterConnectOut = (edge: Edge) => {\n    this._render();\n  };\n\n  process = () => ({ pass: this.pass, effect: this.effect });\n\n  onInputChange = (edge: Edge, change: Object) => {\n    this._render();\n    return this.outKeys();\n  };\n}\n\nexport class ScanlinePassNode extends NodeBase<{}, {}, { pass: Object, effect: Effect }> {\n  static +displayName = 'Scanline Pass';\n  static +registryName = 'ScanlinePassNode';\n  static description = <span>A scanline post-process effect</span>;\n\n  static schema = {\n    input: {},\n    output: {\n      pass: Types.object.desc('a scanline pass'),\n      effect: Types.object.desc('the effect itself'),\n    },\n    state: {},\n  };\n\n  static shortNames = { effect: 'fx' };\n\n  effect: Effect;\n  pass: Pass;\n  rendered: boolean = false;\n\n  _render = () => {\n    if (this.rendered) {\n      return;\n    }\n\n    this.outputs.forEach(edge => {\n      if (edge.to instanceof ThreeNode) {\n        const threeN: ThreeNode = edge.to;\n        const camera = threeN.state.base.camera;\n        if (camera) {\n          this.effect = new ScanlineEffect({ density: 1.5 });\n          this.pass = new EffectPass(camera, this.effect);\n          threeN.addPass(this.pass);\n          this.rendered = true;\n        }\n      }\n    });\n  };\n\n  willBecomeLive = () => {};\n\n  onAddToGraph = () => {\n    this._render();\n  };\n\n  afterConnectOut = (edge: Edge) => {\n    this._render();\n  };\n\n  process = () => ({ pass: this.pass, effect: this.effect });\n\n  onInputChange = (edge: Edge, change: Object) => {\n    this._render();\n    return this.outKeys();\n  };\n}\n\nexport class DotScreenPassNode extends NodeBase<{}, {}, { pass: Object, effect: Effect }> {\n  static +displayName = 'DotScreen Pass';\n  static +registryName = 'DotScreenPassNode';\n  static description = <span>A Dot-screen post-process effect</span>;\n\n  static schema = {\n    input: {},\n    output: {\n      pass: Types.object.desc('a dotscreen pass'),\n      effect: Types.object.desc('the effect itself'),\n    },\n    state: {},\n  };\n  static shortNames = { effect: 'fx' };\n  effect: Effect;\n  pass: Pass;\n  rendered: boolean = false;\n\n  _render = () => {\n    if (this.rendered) {\n      return;\n    }\n\n    this.outputs.forEach(edge => {\n      if (edge.to instanceof ThreeNode) {\n        const threeN: ThreeNode = edge.to;\n        const camera = threeN.state.base.camera;\n        if (camera) {\n          const colorAverageEffect = new ColorAverageEffect();\n          this.effect = new DotScreenEffect({\n            blendFunction: 13,\n            scale: 1.0,\n            angle: Math.PI * 0.58,\n          });\n          this.effect.blendMode.opacity.value = 0.21;\n          this.pass = new EffectPass(camera, this.effect, colorAverageEffect);\n          threeN.addPass(this.pass);\n          this.rendered = true;\n        }\n      }\n    });\n  };\n\n  willBecomeLive = () => {};\n\n  onAddToGraph = () => {\n    this._render();\n  };\n\n  afterConnectOut = (edge: Edge) => {\n    this._render();\n  };\n\n  process = () => ({ pass: this.pass, effect: this.effect });\n\n  onInputChange = (edge: Edge, change: Object) => {\n    this._render();\n    return this.outKeys();\n  };\n}\n\nexport class NoisePassNode extends NodeBase<\n  {},\n  { opacity: number },\n  { pass: Object, effect: Effect }\n> {\n  static +displayName = 'Noise Pass';\n  static +registryName = 'NoisePassNode';\n  static description = <span>A noise post-process effect</span>;\n\n  static schema = {\n    input: {\n      opacity: Types.number.desc('the blending opacity'),\n    },\n    output: {\n      pass: Types.object.desc('a noise pass'),\n      effect: Types.object.desc('the effect itself'),\n    },\n    state: {},\n  };\n  static shortNames = { effect: 'fx' };\n  effect: Effect;\n  pass: Pass;\n  rendered: boolean = false;\n\n  _render = () => {\n    if (this.rendered) {\n      return;\n    }\n    this.outputs.forEach(edge => {\n      if (edge.to instanceof ThreeNode) {\n        const threeN: ThreeNode = edge.to;\n        const camera = threeN.state.base.camera;\n        if (camera) {\n          this.effect = new NoiseEffect({});\n          this.pass = new EffectPass(camera, this.effect);\n          this.effect.blendMode.opacity.value = get(this, 'props.opacity', 0.21);\n          threeN.addPass(this.pass);\n          this.rendered = true;\n        }\n      }\n    });\n  };\n\n  willReceiveProps = (newProps: Object) => {\n    const effect = this.effect;\n    if (!effect) return;\n    ['opacity'].forEach(k => {\n      const opacity = get(effect, 'blendMode.opacity');\n      const newVal = newProps[k];\n      if (opacity !== undefined && typeof newVal === 'number' && opacity.value !== newVal) {\n        opacity.value = newVal;\n      }\n    });\n  };\n\n  willBecomeLive = () => {};\n\n  onAddToGraph = () => {\n    this._render();\n  };\n\n  afterConnectOut = (edge: Edge) => {\n    this._render();\n  };\n\n  process = () => ({ pass: this.pass, effect: this.effect });\n\n  onInputChange = (edge: Edge, change: Object) => {\n    this._render();\n    return this.outKeys();\n  };\n}\n","// @flow\nimport React from 'react';\nimport NodeBase from 'models/NodeBase';\nimport Edge from 'models/Edge';\nimport {\n  TorusKnotBufferGeometry,\n  Geometry,\n  PlaneBufferGeometry,\n  BoxBufferGeometry,\n  SphereBufferGeometry,\n} from 'three';\nconst Types = window.Types;\n\ntype P = {\n  radius: number,\n  tube: number,\n  tubularSegments: number,\n  radialSegments: number,\n  p: number,\n  q: number,\n};\ntype S = { geometry: Geometry };\ntype O = { geometry: Geometry };\n\nexport class TorusKnotGeometryNode extends NodeBase<S, P, O> {\n  static +displayName = 'Torus Knot Geometry';\n  static +registryName = 'TorusKnotGeometryNode';\n  static +defaultProps = {\n    radius: 1,\n    tube: 0.4,\n    tubularSegments: 64,\n    radialSegments: 8,\n    p: 2,\n    q: 3,\n  };\n  static description = (\n    <span>\n      A torus knot (buffer) geometry, with most attributes encoded in buffers so that they are more\n      efficiently transported to your GPU.\n    </span>\n  );\n\n  static schema = {\n    input: {\n      radius: Types.number.desc('The radius of this geometry'),\n      tube: Types.number.desc('The tube radius'),\n      tubularSegments: Types.number.desc('The number of tubular segments for this geometry'),\n      radialSegments: Types.number.desc('The number of radial segments for this geometry'),\n      p: Types.number.desc('The torus knot p'),\n      q: Types.number.desc('The torus knot q'),\n    },\n    output: { geometry: Types.object.desc('this particular geometry') },\n    state: { geometry: Types.object.desc('this particular geometry') },\n  };\n\n  static shortNames = { geometry: 'geo', tubularSegments: 'tSeg', radialSegments: 'rSeg' };\n\n  _setGeo = () => {\n    const { radius, tube, tubularSegments, radialSegments, p, q } = this.props;\n    this.state.geometry && this.state.geometry.dispose();\n    this.state.geometry = new TorusKnotBufferGeometry(\n      radius,\n      tube,\n      tubularSegments,\n      radialSegments,\n      p,\n      q\n    );\n  };\n\n  onAddToGraph = () => {\n    this._setGeo();\n  };\n\n  onInputChange = (edge: Edge) => {\n    let notify = false;\n    ['radius', 'tube', 'tubularSegments', 'radialSegments', 'p', 'q'].forEach(k => {\n      if (k === edge.toPort && this.state.geometry.parameters[k] !== this.props[k]) {\n        this._setGeo();\n        notify = true;\n      }\n    });\n    return notify ? this.outKeys() : [];\n  };\n\n  process = () => {\n    return this.state;\n  };\n}\n\nexport class PlaneGeometryNode extends NodeBase<S, { width: number, height: number }, O> {\n  static +displayName = 'Plane Geometry';\n  static +registryName = 'PlaneGeometryNode';\n  static +defaultProps = { width: 2, height: 2 };\n  static description = (\n    <span>\n      A plane (buffer) geometry, with most attributes encoded in buffers so that they are more\n      efficiently transported to your GPU.\n    </span>\n  );\n\n  static schema = {\n    input: {\n      width: Types.number.desc('The width of this plane'),\n      height: Types.number.desc('The height of this plane'),\n    },\n    output: { geometry: Types.object.desc('this particular geometry') },\n    state: { geometry: Types.object.desc('this particular geometry') },\n  };\n\n  static shortNames = { geometry: 'geo' };\n\n  _setGeo = () => {\n    const { width, height } = this.props;\n    this.state.geometry && this.state.geometry.dispose();\n    this.state.geometry = new PlaneBufferGeometry(width, height);\n  };\n\n  onAddToGraph = () => {\n    this._setGeo();\n  };\n\n  onInputChange = (edge: Edge) => {\n    let notify = false;\n    ['width', 'height'].forEach(k => {\n      if (k === edge.toPort && this.state.geometry.parameters[k] !== this.props[k]) {\n        this._setGeo();\n        notify = true;\n      }\n    });\n    return notify ? this.outKeys() : [];\n  };\n\n  process = () => {\n    return this.state;\n  };\n}\n\nexport class BoxGeometryNode extends NodeBase<\n  S,\n  {\n    width: number,\n    height: number,\n    depth: number,\n  },\n  O\n> {\n  static +displayName = 'Box Geometry';\n  static +registryName = 'BoxGeometryNode';\n  static +defaultProps = {\n    width: 1,\n    height: 1,\n    depth: 1,\n  };\n  static description = (\n    <span>\n      A box (buffer) geometry, with most attributes encoded in buffers so that they are more\n      efficiently transported to your GPU.\n    </span>\n  );\n\n  static schema = {\n    input: {\n      width: Types.number.desc('The width of this box'),\n      height: Types.number.desc('The height of this box'),\n      depth: Types.number.desc('The depth of this box'),\n    },\n    output: { geometry: Types.object.desc('this particular geometry') },\n    state: { geometry: Types.object.desc('this particular geometry') },\n  };\n\n  static shortNames = { geometry: 'geo' };\n\n  _setGeo = () => {\n    const { width, height, depth } = this.props;\n    this.state.geometry && this.state.geometry.dispose();\n    this.state.geometry = new BoxBufferGeometry(width, height, depth);\n  };\n\n  onAddToGraph = () => {\n    this._setGeo();\n  };\n\n  onInputChange = (edge: Edge) => {\n    let notify = false;\n    ['width', 'height', 'depth'].forEach(k => {\n      if (k === edge.toPort && this.state.geometry.parameters[k] !== this.props[k]) {\n        this._setGeo();\n        notify = true;\n      }\n    });\n    return notify ? this.outKeys() : [];\n  };\n\n  process = () => {\n    return this.state;\n  };\n}\n\nexport class SphereGeometryNode extends NodeBase<\n  S,\n  {\n    radius: number,\n    widthSegments: number,\n    heightSegments: number,\n  },\n  O\n> {\n  static +displayName = 'Sphere Geometry';\n  static +registryName = 'SphereGeometryNode';\n  static +defaultProps = {\n    radius: 1,\n    widthSegments: 8,\n    heightSegments: 6,\n  };\n  static description = (\n    <span>\n      A sphere (buffer) geometry, with most attributes encoded in buffers so that they are more\n      efficiently transported to your GPU.\n    </span>\n  );\n\n  static schema = {\n    input: {\n      radius: Types.number.desc('The radius of the sphere'),\n      widthSegments: Types.number.desc('The number of segments along the geometry width'),\n      heightSegments: Types.number.desc('The number of segments along the geometry height'),\n    },\n    output: { geometry: Types.object.desc('this particular geometry') },\n    state: { geometry: Types.object.desc('this particular geometry') },\n  };\n\n  static shortNames = { geometry: 'geo', widthSegments: 'wSeg', heightSegments: 'hSeg' };\n\n  _setGeo = () => {\n    const { radius, widthSegments, heightSegments } = this.props;\n    this.state.geometry && this.state.geometry.dispose();\n    this.state.geometry = new SphereBufferGeometry(radius, widthSegments, heightSegments);\n  };\n\n  onAddToGraph = () => {\n    this._setGeo();\n  };\n\n  onInputChange = (edge: Edge) => {\n    let notify = false;\n    ['radius', 'widthSegments', 'heightSegments'].forEach(k => {\n      if (k === edge.toPort && this.state.geometry.parameters[k] !== this.props[k]) {\n        this._setGeo();\n        notify = true;\n      }\n    });\n    return notify ? this.outKeys() : [];\n  };\n\n  process = () => {\n    return this.state;\n  };\n}\n","// @flow\nimport React from 'react';\nimport { get } from 'lodash';\nimport NodeBase from 'models/NodeBase';\nimport { Material, MeshLambertMaterial, ShaderMaterial } from 'three';\nimport Base, { uniforms } from 'threeUtil/Base';\nconst Types = window.Types;\n\ntype P = {};\ntype S = { material: Material };\ntype O = { material: Material };\n\nlet color = Base.rgbToHex(28, 5, 9);\n\nexport class LambertMaterialNode extends NodeBase<S, P, O> {\n  static +displayName = 'Lambert Material';\n  static +registryName = 'LambertMaterialNode';\n  static description = (\n    <div>\n      <p>A material for non-shiny surfaces, without specular highlights.</p>\n      <p>\n        The material uses a non-physically based Lambertian model for calculating reflectance. This\n        can simulate some surfaces (such as untreated wood or stone) well, but cannot simulate shiny\n        surfaces with specular highlights (such as varnished wood).\n      </p>\n      <p>\n        Shading is calculated using a Gouraud shading model. This calculates shading per vertex\n        (i.e. in the vertex shader) and interpolates the results over the polygon's faces.\n      </p>\n    </div>\n  );\n\n  static schema = {\n    input: {},\n    output: { material: Types.object },\n    state: { material: Types.object },\n  };\n  static shortNames = { material: 'mat' };\n\n  onAddToGraph = () => {\n    this.state.material = new MeshLambertMaterial({\n      transparent: false,\n      color: color,\n      wireframe: false,\n    });\n  };\n\n  process = () => {\n    return this.state;\n  };\n}\n\nexport class ShaderMaterialNode extends NodeBase<S, { vertex: string, fragment: string }, O> {\n  static +displayName = 'Shader Material';\n  static +registryName = 'ShaderMaterialNode';\n  static defaultProps = {\n    vertex: `void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}`,\n    fragment: 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}',\n  };\n  static description = (\n    <div>\n      <p>\n        A material rendered with custom shaders. A shader is a small program written in GLSL that\n        runs on the GPU.\n      </p>\n      <p>\n        You can use the directive #pragma unroll_loop in order to unroll a for loop in GLSL by the\n        shader preprocessor. The directive has to be placed right above the loop. The loop should be\n        formatted with the standard spec (normalized, var i, paren spacing)\n      </p>\n      <p>\n        Additionally, all shader materials will be subscribed to global uniforms: `u_mouse` (vec2),\n        `u_time` (float), and `u_resolution` (vec2)\n      </p>\n    </div>\n  );\n\n  static schema = {\n    input: {\n      vertex: Types.string.desc('Vertex shader for this shader material'),\n      fragment: Types.string.desc('Fragment shader for this shader material'),\n      transparent: Types.boolean.desc(\n        'Whether or not this material responds to an alpha component'\n      ),\n    },\n    output: { material: Types.object },\n    state: { material: Types.object },\n  };\n  static shortNames = { material: 'mat', transparent: 'transp' };\n\n  _setMaterial = () => {\n    this.state.material = new ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: get(this.props, 'vertex'),\n      fragmentShader: get(this.props, 'fragment'),\n      transparent: true,\n    });\n  };\n\n  onAddToGraph = () => {\n    this._setMaterial();\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    ['vertex', 'fragment'].forEach(k => {\n      if (!prevProps || newProps[k] !== prevProps[k]) {\n        this.state.material[`${k}Shader`] = newProps[k];\n        this.state.material.needsUpdate = true;\n      }\n    });\n    ['transparent'].forEach(k => {\n      if (!prevProps || newProps[k] !== prevProps[k]) {\n        this.state.material[k] = newProps[k];\n        this.state.material.needsUpdate = true;\n      }\n    });\n  };\n\n  process = () => {\n    return this.state;\n  };\n}\n","// @flow\nimport React from 'react';\nimport { uniq } from 'lodash';\nimport NodeBase from 'models/NodeBase';\nimport Edge from 'models/Edge';\n\nconst Types = window.Types;\n\nexport class EqualsNode extends NodeBase<{}, { numbers: any[] }, { result: boolean }> {\n  static +displayName = 'Equals';\n  static +registryName = 'EqualsNode';\n  static description = <span>Strict equals operator</span>;\n  static schema = {\n    input: { input: Types.any.desc('Any set of members to perform strict equals over') },\n    output: { result: Types.number.desc('Logical equals over inputs') },\n    state: {},\n  };\n  _map: { [string]: any } = {};\n\n  process = () => ({ result: uniq(this.inputs.map(e => this._map[e.id])).length === 1 });\n\n  onInputChange = (edge: Edge, change: Object) => {\n    this._map[edge.id] = edge.inDataFor(change);\n    return this.outKeys();\n  };\n}\n\nexport class AndNode extends NodeBase<{}, { numbers: any[] }, { result: boolean }> {\n  static +displayName = 'AND';\n  static +registryName = 'AndNode';\n  static description = <span>Logical AND over inputs</span>;\n  static schema = {\n    input: { input: Types.any.desc('Any set of members to logical `AND` over') },\n    output: { result: Types.number.desc('Logical and of inputs') },\n    state: {},\n  };\n  _map: { [string]: any } = {};\n\n  process = () => ({ result: this.inputs.reduce((memo, e) => memo && this._map[e.id], true) });\n\n  onInputChange = (edge: Edge, change: Object) => {\n    this._map[edge.id] = edge.inDataFor(change);\n    return this.outKeys();\n  };\n}\n\nexport class OrNode extends NodeBase<{}, { numbers: any[] }, { result: boolean }> {\n  static +displayName = 'OR';\n  static +registryName = 'OrNode';\n  static description = <span>Logical OR over inputs</span>;\n  static schema = {\n    input: { input: Types.any.desc('Any set of members to logical `OR` over') },\n    output: { result: Types.number.desc('Logical OR of inputs') },\n    state: {},\n  };\n  _map: { [string]: any } = {};\n\n  process = () => ({ result: this.inputs.reduce((memo, e) => memo || this._map[e.id], false) });\n\n  onInputChange = (edge: Edge, change: Object) => {\n    this._map[edge.id] = edge.inDataFor(change);\n    return this.outKeys();\n  };\n}\n\nexport class NotNode extends NodeBase<{}, { in: any }, { result: boolean }> {\n  static +displayName = 'Not';\n  static +registryName = 'NotNode';\n  static description = <span>logical not</span>;\n  static schema = {\n    input: { in: Types.any.desc('anything. negation follows regular js semantics') },\n    output: { result: Types.boolean },\n    state: {},\n  };\n\n  process = () => ({ result: !this.props.in });\n  onInputChange = (edge: Edge, change: Object) => this.outKeys();\n}\n","// @flow\nimport React from 'react';\nimport { get } from 'lodash';\nimport NodeBase from 'models/NodeBase';\nimport Edge from 'models/Edge';\nimport { Geometry, Material, Mesh } from 'three';\nimport type { Pos, Pos3 } from 'types';\nconst Types = window.Types;\n\ntype P = { geometry: Geometry, material: Material, rotation: Pos, scale: Pos3 };\ntype S = { mesh: Mesh };\ntype O = { mesh: Mesh };\n\nexport default class MeshNode extends NodeBase<S, P, O> {\n  static +displayName = 'Mesh';\n  static +registryName = 'MeshNode';\n  static description = <span>A WebGL mesh</span>;\n\n  static schema = {\n    input: {\n      geometry: Types.object.desc('The geometry to use with this mesh'),\n      material: Types.object.desc(\"This mesh's material\"),\n      rotation: Types.Vec2.desc('The rotation of this mesh node, in radians'),\n      scale: Types.Vec3.desc('The scale of this mesh node'),\n    },\n    output: { mesh: Types.object },\n    state: { mesh: Types.object },\n  };\n\n  static shortNames = { material: 'mat', geometry: 'geo', rotation: 'rot' };\n\n  willBecomeLive = () => {\n    const { geometry, material } = this.props;\n    this.state.mesh = new Mesh(geometry, material);\n    this.notifyAllOutputs(true);\n  };\n\n  onAddToGraph = () => {\n    this.state.mesh = new Mesh();\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if (edge.toPort === 'rotation') {\n      const { rotation } = this.props;\n      this.state.mesh.rotation.x = rotation.x;\n      this.state.mesh.rotation.y = rotation.y;\n    }\n    if (edge.toPort === 'scale') {\n      const { scale } = this.props;\n      this.state.mesh.scale.x = scale.x;\n      this.state.mesh.scale.y = scale.y;\n      this.state.mesh.scale.z = scale.z;\n    }\n    if (edge.toPort === 'material') {\n      const mat = edge.inDataFor(change);\n      if (get(mat.id) !== get(this.state.mesh, 'material.id')) {\n        this.state.mesh.material && this.state.mesh.material.dispose();\n        this.state.mesh.material = mat;\n      }\n    }\n    if (edge.toPort === 'geometry') {\n      const geo = edge.inDataFor(change);\n      if (get(geo.id) !== get(this.state.mesh, 'geometry.id')) {\n        this.state.mesh.geometry && this.state.mesh.geometry.dispose();\n        this.state.mesh.geometry = geo;\n      }\n    }\n    return this.outKeys();\n  };\n\n  process = () => {\n    return this.state;\n  };\n}\n","// @flow\nimport React from 'react';\nimport NodeBase from 'models/NodeBase';\nimport Edge from 'models/Edge';\n\nconst Types = window.Types;\n\ntype MIDIOutput = {\n  id: string,\n  name: ?string,\n  type: string,\n};\n\nexport class MidiOutNode extends NodeBase<{}, { id?: string }, { device: ?MIDIOutput }> {\n  static +displayName = 'Midi Out';\n  static +registryName = 'MidiOutNode';\n  static description = (\n    <span>\n      A midi output device. If no id / name are provided, the first midi device found will be used\n    </span>\n  );\n  static schema = {\n    input: {\n      id: Types.string.desc(\n        'The midi out device id *or* name. The first matching one will be used in the case of collisions'\n      ),\n    },\n    output: { device: Types.object.desc('The midi output, or none if none were found') },\n    state: {},\n  };\n\n  _loaded: boolean = false;\n  available: MIDIOutput[] = [];\n  midi: ?MIDIOutput = null;\n\n  loadAll = async () => {\n    try {\n      const navigator = window.navigator;\n      const midi = await navigator.requestMIDIAccess();\n      this._loaded = true;\n      midi.outputs.forEach(output => this.available.push(output));\n      if (this.available.length > 0) this._setMidi(this.available[0].id);\n      this.notifyAllOutputs();\n    } catch (e) {\n      this._loaded = true;\n      console.log('no midi devices found');\n    }\n  };\n\n  _setMidi = (id: string) => {\n    this.midi = this.available.find(o => o.id === id || o.name === id) || this.midi;\n    if (this.midi) {\n      console.log('connected to midi out', this.midi.name);\n    }\n    this.notifyAllOutputs();\n  };\n\n  onAddToGraph = () => {\n    this.loadAll();\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    if (newProps.id && (!prevProps || newProps.id !== prevProps.id)) {\n      const id = String(newProps.id);\n      if (this._loaded) {\n        this._setMidi(id);\n      } else {\n        this.loadAll().then(() => {\n          this._setMidi(id);\n        });\n      }\n    }\n  };\n\n  process = () => ({ device: this.midi });\n\n  onInputChange = (edge: Edge, change: Object) => this.outKeys();\n}\n\nexport class MidiInNode extends NodeBase<{}, { id?: string }, { device: ?MIDIOutput }> {\n  static +displayName = 'Midi In';\n  static +registryName = 'MidiInNode';\n  static description = (\n    <span>\n      A midi input device. If no id / name are provided, the first midi device found will be used\n    </span>\n  );\n  static schema = {\n    input: {\n      id: Types.string.desc(\n        'The midi in device id *or* name. The first matching one will be used in the case of collisions'\n      ),\n    },\n    output: { device: Types.object.desc('The midi input, or none if none were found') },\n    state: {},\n  };\n\n  _loaded: boolean = false;\n  available: MIDIOutput[] = [];\n  midi: ?MIDIOutput = null;\n\n  loadAll = async () => {\n    try {\n      const navigator = window.navigator;\n      const midi = await navigator.requestMIDIAccess();\n      this._loaded = true;\n      midi.inputs.forEach(output => this.available.push(output));\n      if (this.available.length > 0) this.midi = this.available[0];\n      this.notifyAllOutputs();\n    } catch (e) {\n      this._loaded = true;\n      console.log('no midi devices found');\n    }\n  };\n\n  _setMidi = (id: string) => {\n    this.midi = this.available.find(o => o.id === id || o.name === id) || this.midi;\n    this.notifyAllOutputs();\n  };\n\n  onAddToGraph = () => {\n    this.loadAll();\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    if (newProps.id && (!prevProps || newProps.id !== prevProps.id)) {\n      const id = String(newProps.id);\n      if (this._loaded) {\n        this._setMidi(id);\n      } else {\n        this.loadAll().then(() => {\n          this._setMidi(id);\n        });\n      }\n    }\n  };\n\n  process = () => ({ device: this.midi });\n\n  onInputChange = (edge: Edge, change: Object) => this.outKeys();\n}\n","export const defTheme = {\n  scheme: 'rjv-default',\n  //transparent main background\n  base00: 'transparent',\n  base01: 'rgba(0, 0, 0, 0.3)',\n  base02: 'rgba(0, 0, 0, 0.4)',\n  base03: 'rgba(200, 200, 200, 0.3)',\n  base04: '#5f9c92',\n  base05: '#81b5ac',\n  base06: '#a7cec8',\n  base07: '#d2e7e4',\n  base08: '#3e9688',\n  base09: '#3e7996',\n  base0A: '#d0d5d6',\n  base0B: '#883e96',\n  base0C: '#963e4c',\n  base0D: '#cdbe51',\n  base0E: '#4caa4d',\n  base0F: '#e9d449',\n};\n","export default {\n  white: '#fff',\n  black: '#000',\n  transparent: 'rgba(1, 1, 1, 0)',\n\n  globalFontFamily: 'Monaco, \"Source Code Pro\", monospace, sans-serif',\n  globalCursor: 'default',\n\n  indentBlockWidth: '5px',\n\n  braceFontWeight: 'bold',\n  braceCursor: 'pointer',\n\n  ellipsisFontSize: '18px',\n  ellipsisLineHeight: '10px',\n  ellipsisCursor: 'pointer',\n\n  keyMargin: '0px 5px',\n  keyLetterSpacing: '0.5px',\n  keyFontStyle: 'none',\n  keyBorderRadius: '3px',\n  keyColonWeight: 'bold',\n  keyVerticalAlign: 'top',\n  keyOpacity: '0.85',\n  keyOpacityHover: '1',\n\n  keyValPaddingTop: '3px',\n  keyValPaddingBottom: '3px',\n  keyValPaddingRight: 0,\n  keyValBorderLeft: '1px solid',\n  keyValBorderHover: '2px solid',\n  keyValPaddingHover: '3px 5px 3px 4px',\n\n  pushedContentMarginLeft: '6px',\n\n  variableValuePaddingRight: 0,\n\n  nullFontSize: '11px',\n  nullFontWeight: 'bold',\n  nullPadding: '1px 5px',\n  nullBorderRadius: '3px',\n\n  dataTypeFontSize: '11px',\n  dataTypeMarginRight: '4px',\n  datatypeOpacity: '0.8',\n\n  objectSizeBorderRadius: '3px',\n  objectSizeFontStyle: 'italic',\n  objectSizeMargin: '0px 6px 0px 0px',\n\n  clipboardCursor: 'pointer',\n  clipboardCheckMarginLeft: '-12px',\n\n  metaDataPadding: '0px 0px 0px 10px',\n\n  arrayGroupMetaPadding: '0px 0px 0px 4px',\n\n  iconContainerWidth: '17px',\n\n  tooltipPadding: '4px',\n\n  editInputHeight: '25px',\n  editInputMinWidth: '130px',\n  editInputBorderRadius: '3px',\n  editInputPadding: '6px 8px 4px 8px',\n  editInputMarginRight: '4px',\n  editInputFontFamily: 'Monaco, \"Source Code Pro\", monospace, sans-serif',\n\n  iconCursor: 'pointer',\n  iconFontSize: '15px',\n  iconPaddingRight: '1px',\n\n  dateValueMarginLeft: '2px',\n\n  iconMarginRight: '3px',\n\n  detectedRowPaddingTop: '3px',\n\n  addKeyCoverBackground: 'rgba(255, 255, 255, 0.3)',\n  addKeyCoverPosition: 'absolute',\n  addKeyCoverPositionPx: '0px',\n  addKeyModalWidth: '200px',\n  addKeyModalMargin: 'auto',\n  addKeyModalPadding: '10px',\n  addKeyModalRadius: '3px',\n};\n","import { defTheme } from './base16/rjv-themes';\nimport constants from './styleConstants';\nimport { createStyling } from 'react-base16-styling';\n\nconst colorMap = theme => ({\n  backgroundColor: theme.base00,\n  ellipsisColor: theme.base09,\n  braceColor: theme.base07,\n  expandedIcon: theme.base0D,\n  collapsedIcon: theme.base0E,\n  keyColor: theme.base07,\n  arrayKeyColor: theme.base0C,\n  objectSize: theme.base04,\n  copyToClipboard: theme.base0F,\n  copyToClipboardCheck: theme.base0D,\n  objectBorder: theme.base03,\n  dataTypes: {\n    boolean: theme.base0E,\n    date: theme.base0D,\n    float: theme.base0B,\n    function: theme.base0D,\n    integer: theme.base0F,\n    string: theme.base09,\n    nan: theme.base08,\n    null: theme.base0A,\n    undefined: theme.base05,\n    regexp: theme.base0A,\n    background: theme.base02,\n  },\n  editVariable: {\n    editIcon: theme.base0E,\n    cancelIcon: theme.base09,\n    removeIcon: theme.base09,\n    addIcon: theme.base0E,\n    checkIcon: theme.base0E,\n    background: theme.base01,\n    color: theme.base0A,\n    border: theme.base07,\n  },\n  addKeyModal: {\n    background: theme.base05,\n    border: theme.base04,\n    color: theme.base0A,\n    labelColor: theme.base01,\n  },\n  validationFailure: {\n    background: theme.base09,\n    iconColor: theme.base01,\n    fontColor: theme.base01,\n  },\n});\n\nconst getDefaultThemeStyling = theme => {\n  const colors = colorMap(theme);\n\n  return {\n    'app-container': {\n      fontFamily: constants.globalFontFamily,\n      cursor: constants.globalCursor,\n      backgroundColor: colors.backgroundColor,\n      position: 'relative',\n    },\n    ellipsis: {\n      display: 'inline-block',\n      color: colors.ellipsisColor,\n      fontSize: constants.ellipsisFontSize,\n      lineHeight: constants.ellipsisLineHeight,\n      cursor: constants.ellipsisCursor,\n    },\n    'brace-row': {\n      display: 'inline-block',\n      cursor: 'pointer',\n    },\n    brace: {\n      display: 'inline-block',\n      cursor: constants.braceCursor,\n      fontWeight: constants.braceFontWeight,\n      color: colors.braceColor,\n    },\n    'expanded-icon': {\n      color: colors.expandedIcon,\n    },\n    'collapsed-icon': {\n      color: colors.collapsedIcon,\n    },\n    colon: {\n      display: 'inline-block',\n      margin: constants.keyMargin,\n      color: colors.keyColor,\n      verticalAlign: 'top',\n    },\n    objectKeyVal: (component, variable_style) => {\n      return {\n        style: {\n          paddingTop: constants.keyValPaddingTop,\n          paddingRight: constants.keyValPaddingRight,\n          paddingBottom: constants.keyValPaddingBottom,\n          borderLeft: constants.keyValBorderLeft + ' ' + colors.objectBorder,\n          ':hover': {\n            paddingLeft: variable_style.paddingLeft - 1 + 'px',\n            borderLeft: constants.keyValBorderHover + ' ' + colors.objectBorder,\n          },\n          ...variable_style,\n        },\n      };\n    },\n    'object-key-val-no-border': {\n      padding: constants.keyValPadding,\n    },\n    'pushed-content': (_, styles) => ({\n      style: {\n        marginLeft: constants.pushedContentMarginLeft,\n        ...styles,\n      },\n    }),\n    variableValue: (component, variable_style) => {\n      return {\n        style: {\n          display: 'inline-block',\n          paddingRight: constants.variableValuePaddingRight,\n          position: 'relative',\n          ...variable_style,\n        },\n      };\n    },\n    'object-name': {\n      display: 'inline-block',\n      color: colors.keyColor,\n      letterSpacing: constants.keyLetterSpacing,\n      fontStyle: constants.keyFontStyle,\n      verticalAlign: constants.keyVerticalAlign,\n      opacity: constants.keyOpacity,\n      ':hover': {\n        opacity: constants.keyOpacityHover,\n      },\n    },\n    'array-key': {\n      display: 'inline-block',\n      color: colors.arrayKeyColor,\n      letterSpacing: constants.keyLetterSpacing,\n      fontStyle: constants.keyFontStyle,\n      verticalAlign: constants.keyVerticalAlign,\n      opacity: constants.keyOpacity,\n      ':hover': {\n        opacity: constants.keyOpacityHover,\n      },\n    },\n    'object-size': {\n      color: colors.objectSize,\n      borderRadius: constants.objectSizeBorderRadius,\n      fontStyle: constants.objectSizeFontStyle,\n      margin: constants.objectSizeMargin,\n      cursor: 'default',\n    },\n    'data-type-label': {\n      fontSize: constants.dataTypeFontSize,\n      marginRight: constants.dataTypeMarginRight,\n      opacity: constants.datatypeOpacity,\n    },\n    boolean: {\n      display: 'inline-block',\n      color: colors.dataTypes.boolean,\n      fontWeight: 'bold',\n    },\n    date: {\n      display: 'inline-block',\n      color: colors.dataTypes.date,\n    },\n    'date-value': {\n      marginLeft: constants.dateValueMarginLeft,\n    },\n    float: {\n      display: 'inline-block',\n      color: colors.dataTypes.float,\n    },\n    function: {\n      display: 'inline-block',\n      color: colors.dataTypes['function'],\n      cursor: 'pointer',\n      whiteSpace: 'pre-line',\n    },\n    'function-value': {\n      fontStyle: 'italic',\n    },\n    integer: {\n      display: 'inline-block',\n      color: colors.dataTypes.integer,\n    },\n    string: {\n      display: 'inline-block',\n      color: colors.dataTypes.string,\n    },\n    nan: {\n      display: 'inline-block',\n      color: colors.dataTypes.nan,\n      fontWeight: constants.nullFontWeight,\n      fontSize: constants.nullFontSize,\n      padding: constants.nullPadding,\n      borderRadius: constants.nullBorderRadius,\n      backgroundColor: colors.dataTypes.background,\n    },\n    null: {\n      display: 'inline-block',\n      color: colors.dataTypes.null,\n      fontWeight: constants.nullFontWeight,\n      fontSize: constants.nullFontSize,\n      padding: constants.nullPadding,\n      borderRadius: constants.nullBorderRadius,\n      backgroundColor: colors.dataTypes.background,\n    },\n    undefined: {\n      display: 'inline-block',\n      color: colors.dataTypes.undefined,\n      fontSize: constants.nullFontSize,\n      padding: constants.nullPadding,\n      borderRadius: constants.nullBorderRadius,\n      backgroundColor: colors.dataTypes.background,\n    },\n    regexp: {\n      display: 'inline-block',\n      color: colors.dataTypes.regexp,\n    },\n    'copy-to-clipboard': {\n      cursor: constants.clipboardCursor,\n    },\n    'copy-icon': {\n      color: colors.copyToClipboard,\n      fontSize: constants.iconFontSize,\n      marginRight: constants.iconMarginRight,\n      verticalAlign: 'top',\n    },\n    'copy-icon-copied': {\n      color: colors.copyToClipboardCheck,\n      marginLeft: constants.clipboardCheckMarginLeft,\n    },\n    'array-group-meta-data': {\n      display: 'inline-block',\n      padding: constants.arrayGroupMetaPadding,\n    },\n    'object-meta-data': {\n      display: 'inline-block',\n      padding: constants.metaDataPadding,\n    },\n    'icon-container': {\n      display: 'inline-block',\n      width: constants.iconContainerWidth,\n    },\n    tooltip: {\n      padding: constants.tooltipPadding,\n    },\n    removeVarIcon: {\n      verticalAlign: 'top',\n      display: 'inline-block',\n      color: colors.editVariable.removeIcon,\n      cursor: constants.iconCursor,\n      fontSize: constants.iconFontSize,\n      marginRight: constants.iconMarginRight,\n    },\n    addVarIcon: {\n      verticalAlign: 'top',\n      display: 'inline-block',\n      color: colors.editVariable.addIcon,\n      cursor: constants.iconCursor,\n      fontSize: constants.iconFontSize,\n      marginRight: constants.iconMarginRight,\n    },\n    editVarIcon: {\n      verticalAlign: 'top',\n      display: 'inline-block',\n      color: colors.editVariable.editIcon,\n      cursor: constants.iconCursor,\n      fontSize: constants.iconFontSize,\n      marginRight: constants.iconMarginRight,\n    },\n    'edit-icon-container': {\n      display: 'block',\n    },\n    'check-icon': {\n      display: 'inline-block',\n      cursor: constants.iconCursor,\n      color: colors.editVariable.checkIcon,\n      fontSize: constants.iconFontSize,\n      paddingRight: constants.iconPaddingRight,\n    },\n    'cancel-icon': {\n      display: 'inline-block',\n      cursor: constants.iconCursor,\n      color: colors.editVariable.cancelIcon,\n      fontSize: constants.iconFontSize,\n      paddingRight: constants.iconPaddingRight,\n    },\n    'edit-input': {\n      display: 'inline-block',\n      minHeight: constants.editInputHeight,\n      minWidth: constants.editInputMinWidth,\n      borderRadius: constants.editInputBorderRadius,\n      border: 'none',\n      backgroundColor: colors.editVariable.background,\n      color: colors.editVariable.color,\n      padding: constants.editInputPadding,\n      marginRight: constants.editInputMarginRight,\n      fontFamily: constants.editInputFontFamily,\n      resize: 'none',\n    },\n    'detected-row': {\n      paddingTop: constants.detectedRowPaddingTop,\n    },\n    'key-modal-request': {\n      position: constants.addKeyCoverPosition,\n      top: constants.addKeyCoverPositionPx,\n      left: constants.addKeyCoverPositionPx,\n      right: constants.addKeyCoverPositionPx,\n      bottom: constants.addKeyCoverPositionPx,\n      backgroundColor: constants.addKeyCoverBackground,\n    },\n    'key-modal': {\n      width: constants.addKeyModalWidth,\n      backgroundColor: colors.addKeyModal.background,\n      marginLeft: constants.addKeyModalMargin,\n      marginRight: constants.addKeyModalMargin,\n      padding: constants.addKeyModalPadding,\n      borderRadius: constants.addKeyModalRadius,\n      marginTop: '15px',\n      position: 'relative',\n    },\n    'key-modal-label': {\n      color: colors.addKeyModal.labelColor,\n      marginLeft: '2px',\n      marginBottom: '5px',\n      fontSize: '11px',\n    },\n    'key-modal-input-container': {\n      overflow: 'hidden',\n    },\n    'key-modal-input': {\n      width: '100%',\n      padding: '3px 6px',\n      fontFamily: 'monospace',\n      color: colors.addKeyModal.color,\n      border: 'none',\n      boxSizing: 'border-box',\n      borderRadius: '2px',\n    },\n    'key-modal-cancel': {\n      backgroundColor: colors.editVariable.removeIcon,\n      position: 'absolute',\n      top: '0px',\n      right: '0px',\n      borderRadius: '0px 3px 0px 3px',\n      cursor: 'pointer',\n    },\n    'key-modal-cancel-icon': {\n      color: colors.addKeyModal.labelColor,\n      fontSize: constants.iconFontSize,\n      transform: 'rotate(45deg)',\n    },\n    'key-modal-submit': {\n      color: colors.editVariable.addIcon,\n      fontSize: constants.iconFontSize,\n      position: 'absolute',\n      right: '2px',\n      top: '3px',\n      cursor: 'pointer',\n    },\n    'function-ellipsis': {\n      display: 'inline-block',\n      color: colors.ellipsisColor,\n      fontSize: constants.ellipsisFontSize,\n      lineHeight: constants.ellipsisLineHeight,\n      cursor: constants.ellipsisCursor,\n    },\n    'validation-failure': {\n      float: 'right',\n      padding: '3px 6px',\n      borderRadius: '2px',\n      cursor: 'pointer',\n      color: colors.validationFailure.fontColor,\n      backgroundColor: colors.validationFailure.background,\n    },\n    'validation-failure-label': {\n      marginRight: '6px',\n    },\n    'validation-failure-clear': {\n      position: 'relative',\n      verticalAlign: 'top',\n      cursor: 'pointer',\n      color: colors.validationFailure.iconColor,\n      fontSize: constants.iconFontSize,\n      transform: 'rotate(45deg)',\n    },\n  };\n};\n\nconst getStyle = theme => {\n  return createStyling(getDefaultThemeStyling, { defaultBase16: defTheme })(theme);\n};\n\nexport default function style(theme, component, args) {\n  if (!theme) {\n    console.error('theme has not been set');\n  }\n\n  return getStyle(theme)(component, args);\n}\n","import React from 'react';\n\n//theme\nimport Theme from './../../themes/getStyle';\n\nexport default class extends React.PureComponent {\n  render() {\n    const { type_name, displayDataTypes, theme } = this.props;\n    if (displayDataTypes) {\n      return (\n        <span className=\"data-type-label\" {...Theme(theme, 'data-type-label')}>\n          {type_name}\n        </span>\n      );\n    }\n    return null;\n  }\n}\n","import React from 'react';\nimport DataTypeLabel from './DataTypeLabel';\n\n//theme\nimport Theme from './../../themes/getStyle';\n\nexport default class extends React.PureComponent {\n  render() {\n    const type_name = 'regexp';\n    const { props } = this;\n    return (\n      <div {...Theme(props.theme, 'regexp')}>\n        <DataTypeLabel type_name={type_name} {...props} />\n        {this.props.value.toString()}\n      </div>\n    );\n  }\n}\n","// @flow\nimport React from 'react';\nimport { get, reverse } from 'lodash';\nimport NodeBase from 'models/NodeBase';\nimport Edge from 'models/Edge';\nimport { TT } from 'models/nodes/ToneNode';\nimport Regexp from 'vendor/JsonTree/js/components/DataTypes/Regexp';\nconst Types = window.Types;\n\nexport class InfoLog extends NodeBase<{}, { anything: any }, { anything: any }> {\n  static +displayName = 'InfoLog';\n  static +registryName = 'InfoLog';\n  static description = <span>Log any inputs as they come to console info</span>;\n  static schema = {\n    input: { anything: Types.any.desc('Anything you would like to log') },\n    output: { anything: Types.any.desc('The input, passed through') },\n    state: {},\n  };\n\n  process = () => ({ anything: this.props.anything });\n\n  onInputChange = (edge: Edge, change: Object) => {\n    console.log(edge.from.constructor.displayName, edge.fromPort, edge.inDataFor(change));\n    return this.outKeys();\n  };\n}\n\nexport class JSONParse extends NodeBase<{}, { in: string }, { out: Object }> {\n  static +displayName = 'JSON Parse';\n  static +registryName = 'JSONParse';\n  static description = <span>Parse a string into an object</span>;\n  static schema = {\n    input: { in: Types.string.desc('String serialization') },\n    output: { out: Types.object.desc('Parsed object') },\n    state: {},\n  };\n\n  process = () => ({ out: this.props.in ? JSON.parse(this.props.in) : {} });\n\n  onInputChange = () => this.outKeys();\n}\n\nexport class ExtractNode extends NodeBase<{}, { from: any, get: string }, { out: any }> {\n  static +displayName = 'Extract';\n  static +registryName = 'ExtractNode';\n  static description = <span>Extract a value from an object</span>;\n  static schema = {\n    input: {\n      from: Types.object.desc('Object to extract from'),\n      get: Types.string.desc(\n        \"The key to get. You can traverse an object with dot notation, i.e. 'foo.bar'\"\n      ),\n    },\n    output: { out: Types.any.desc('The extracted value, or `undefined`') },\n    state: {},\n  };\n\n  process = () => ({ out: get(this.props.from, this.props.get || '') });\n\n  onInputChange = (edge: Edge, change: Object) => {\n    return this.outKeys();\n  };\n}\n\nexport class StephenWolfram extends NodeBase<\n  {},\n  { rule: number, state: (0 | 1)[] | string },\n  { out: (0 | 1)[] }\n> {\n  static +displayName = 'Stephen Wolfram';\n  static +registryName = 'StephenWolfram';\n  static description = (\n    <span>\n      Stephen Wolfram is an operator that, when given a 1D cellular automata rule number [0-255] and\n      a binary representation of the world, outputs the subsequent state of the world according to\n      that rule. He can do this indefinitely and is, in fact, Earth's first eternal human.\n    </span>\n  );\n  static schema = {\n    input: {\n      rule: Types.number.desc(\n        'The rule number. Given a binary state and two neighbors (2^3 states), a transition rule set can be encoded with a binary number with each digit slot representing the next state of that configuration (2^(2^3) rule sets).'\n      ),\n      initialState: Types.any.desc(\n        \"He doesn't know or care where it comes from, but Wolfram needs an initial state in order to operate. His world is probably circular, so the first index and last index are assumed to be neighbors for rule application. Both binary strings and binary arrays are acceptable.\"\n      ),\n      call: TT.Call,\n    },\n    output: { out: Types.any.desc('The resulting binary array') },\n    state: {},\n  };\n\n  currentState: (0 | 1)[] = [];\n  transitions: (0 | 1)[];\n\n  static toBin8(rule: number): (0 | 1)[] {\n    const bin = [...rule.toString(2)].map(s => parseInt(s, 10));\n    if (bin.length < 8) {\n      bin.unshift(...[...new Array(8 - bin.length)].map(() => 0));\n    }\n    // $FlowIssue\n    return reverse(bin);\n  }\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    if (!prevProps || newProps.rule !== prevProps.rule) {\n      this.transitions = StephenWolfram.toBin8(newProps.rule);\n    }\n    if (!prevProps || newProps.initialState !== prevProps.initialState) {\n      const state = newProps.initialState;\n      if (Array.isArray(state)) {\n        this.currentState = state.map(a => parseInt(a));\n      } else if (typeof state === 'string') {\n        this.currentState = state.split('').map(s => parseInt(s));\n      }\n    }\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    if ('call' === edge.toPort) {\n      if (edge.inDataFor(change)) {\n        const { rule } = this.props;\n        const state = this.currentState;\n        if (state && Array.isArray(state) && typeof rule === 'number') {\n          this.currentState = state.map((i, index) => {\n            const lIdx = (((index - 1) % state.length) + state.length) % state.length;\n            const rIdx = (index + 1) % state.length;\n            // noinspection EqualityComparisonWithCoercionJS accept coercion for convenience\n            // eslint-disable-next-line eqeqeq\n            const num = (state[lIdx] == 1 ? 4 : 0) + (i == 1 ? 2 : 0) + (state[rIdx] == 1 ? 1 : 0);\n            return this.transitions[num];\n          });\n          this.notifyAllOutputs(true);\n        }\n      }\n    }\n    return [];\n  };\n\n  process = () => ({ out: this.currentState });\n}\n\nexport class HistoryNode extends NodeBase<{}, { capacity: number, value: any }, { out: any[] }> {\n  static +displayName = 'History';\n  static +registryName = 'HistoryNode';\n  static description = (\n    <span>\n      Buffer values from input into a linear history. If memory capacity is reached, oldest memories\n      are forgotten first.\n    </span>\n  );\n  static schema = {\n    input: {\n      capacity: Types.number.desc(\n        'The max number of events to remember. Omitting this means no limit'\n      ),\n      value: Types.any.desc('Any value. This will be pushed into a memory queue in the output'),\n    },\n    output: { out: Types.any.desc('The memory queue, from oldest to youngest.') },\n    state: {},\n  };\n\n  memory: any[] = [];\n\n  process = () => ({ out: this.memory });\n  onInputChange = (edge: Edge, change: Object) => {\n    if ('value' === edge.toPort) {\n      const data = edge.inDataFor(change);\n      if (data) {\n        const { capacity } = this.props;\n        if (typeof capacity === 'number' && this.memory.length >= capacity) {\n          this.memory.shift();\n        }\n        // todo a better slice\n        this.memory.push(data);\n      }\n    }\n    return this.outKeys();\n  };\n}\n\nexport class JoinNode extends NodeBase<{}, { array: any[], separator: string }, { out: string }> {\n  static +displayName = 'Join';\n  static +registryName = 'JoinNode';\n  static description = <span>Join an array of values together with a separator</span>;\n  static schema = {\n    input: {\n      array: Types.object.desc('Array of any data. Ideally this data is string serializable.'),\n      separator: Types.string.desc('Separator string to join elements together with'),\n    },\n    output: { out: Types.string.desc('The joined array, as a string') },\n    state: {},\n  };\n\n  process = () => ({ out: (this.props.array || []).join(this.props.separator || '') });\n\n  onInputChange = (edge: Edge, change: Object) => {\n    return this.outKeys();\n  };\n}\n\nexport class RegexReplace extends NodeBase<\n  {},\n  { string: string, regex: Regexp | string, replacement: string },\n  { out: string }\n> {\n  static +displayName = 'Regex Replace';\n  static +registryName = 'RegexReplace';\n  static description = <span>Replace a regex match with something else</span>;\n  static schema = {\n    input: {\n      string: Types.string.desc('The string over which to perform the replace'),\n      regex: Types.string.desc('the regexp'),\n      replacement: Types.string.desc('The string to replace matches with'),\n    },\n    output: { out: Types.string.desc('The joined array, as a string') },\n    state: {},\n  };\n  re: Regexp;\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    if (!prevProps || (newProps.regex !== prevProps.regex && newProps.regex)) {\n      const parsed = newProps.regex.match(/\\/(.+)\\/(\\w*)/);\n      if (parsed) {\n        // eslint-disable-next-line no-unused-vars\n        const [_, t, f] = parsed;\n        this.re = new RegExp(t, f);\n      } else {\n        this.re = new RegExp(newProps.string);\n      }\n    }\n  };\n\n  process = () => {\n    const { string, replacement } = this.props;\n    if (string && this.re && typeof replacement === 'string') {\n      return { out: string.replace(this.re, replacement) };\n    }\n    return { out: '' };\n  };\n\n  onInputChange = (edge: Edge, change: Object) => {\n    return this.outKeys();\n  };\n}\n","// @flow\nimport React from 'react';\nimport NodeBase from 'models/NodeBase';\nimport type { Pos } from 'types';\nconst Types = window.Types;\n\ntype P = Pos;\ntype S = { value: Pos };\ntype O = { out: Pos };\n\nexport default class Vector2D extends NodeBase<S, P, O> {\n  static +displayName = 'Vector 2D';\n  static +registryName = 'Vector2D';\n\n  static description = (\n    <span>\n      A two dimensional vector with keys <code>x</code> and <code>y</code>\n    </span>\n  );\n\n  static schema = {\n    input: { x: Types.number, y: Types.number },\n    output: { out: Types.Vec2 },\n    state: { value: Types.Vec2 },\n  };\n\n  onInputChange = () => {\n    this.state.value = this.props;\n    return this.outKeys();\n  };\n\n  process = () => {\n    return { out: this.state.value };\n  };\n}\n","// @flow\nimport React from 'react';\nimport NodeBase from 'models/NodeBase';\nimport type { Pos3 } from 'types';\nconst Types = window.Types;\n\ntype P = Pos3;\ntype S = { value: Pos3 };\ntype O = { out: Pos3 };\n\nexport default class Vector3D extends NodeBase<S, P, O> {\n  static +displayName = 'Vector 3D';\n  static +registryName = 'Vector3D';\n\n  static description = (\n    <span>\n      A two dimensional vector with <code>x</code> <code>y</code> and <code>y</code> components\n    </span>\n  );\n\n  static schema = {\n    input: { x: Types.number, y: Types.number, z: Types.number },\n    output: { out: Types.Vec3 },\n    state: { value: Types.Vec3 },\n  };\n\n  onInputChange = () => {\n    this.state.value = this.props;\n    return this.outKeys();\n  };\n\n  process = () => {\n    return { out: this.state.value };\n  };\n}\n","// @flow\nimport React from 'react';\nimport NodeBase from 'models/NodeBase';\n\nconst Types = window.Types;\n\nexport class DomNode extends NodeBase<{}, { html: string }, null> {\n  static +displayName = 'HTML Element';\n  static +registryName = 'DomNode';\n  static description = <span>A node that renders HTML to the screen</span>;\n  static defaultProps = { html: '' };\n  static schema = {\n    input: {\n      html: Types.string.desc('The html for this element'),\n      text: Types.string.desc('The inner text of this element'),\n      style: Types.string.desc('The style attribute for this node'),\n    },\n    output: {},\n    state: {},\n  };\n  domNode: HTMLElement;\n\n  onAddToGraph = () => {\n    this.domNode = document.createElement('div');\n    document.getElementsByTagName('body')[0].appendChild(this.domNode);\n  };\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => {\n    if (!prevProps || newProps.text !== prevProps.text) {\n      this.domNode.innerText = newProps.text;\n    }\n    if (!prevProps || newProps.html !== prevProps.html) {\n      this.domNode.innerHTML = newProps.html;\n    }\n    if (!prevProps || newProps.style !== prevProps.style) {\n      this.domNode.setAttribute('style', newProps.style);\n    }\n  };\n\n  process = () => null;\n}\n","// @flow\nimport React from 'react';\nimport NodeBase from 'models/NodeBase';\n\nconst Types = window.Types;\n\nexport class PlusNode extends NodeBase<{}, { left: any, right: any }, { out: any }> {\n  static +displayName = 'Plus';\n  static +registryName = 'PlusNode';\n  static description = <span>A plus operator. Usable with both strings and numbers.</span>;\n  static schema = {\n    input: {\n      left: Types.any.desc('left hand side'),\n      right: Types.any.desc('right hand side'),\n    },\n    output: { out: Types.any.desc('The result') },\n    state: {},\n  };\n\n  process = () => ({\n    out: this.props.left + this.props.right,\n  });\n}\n","// @flow\nimport React from 'react';\nimport { get } from 'lodash';\nimport { Chord, Scale } from 'tonal';\nimport * as Key from 'tonal-key';\nimport { chroma } from 'tonal-pcset';\nimport { transpose } from 'tonal-distance';\nimport NodeBase from 'models/NodeBase';\nimport Edge from 'models/Edge';\nconst Types = window.Types;\n// window.Chord = Chord;\n// window.Key = Key;\n// window.Scale = Scale;\n\nexport class ScaleNode extends NodeBase<\n  {},\n  { name: string, tonic: string },\n  { notes: string[], intervals: string[] }\n> {\n  static +displayName = 'Music Scale';\n  static +registryName = 'ScaleNode';\n  static description = <span>A Musical scale</span>;\n  static schema = {\n    input: {\n      tonic: Types.string.desc(\n        'The tonic for this scale, e.g. \"C\" or \"Ab4\". ' +\n          'You can optionally specify the scale name here too, and omit the name input, e.g. \"C minor pentatonic\"' +\n          ' See the name param info for possible scale names.'\n      ),\n      name: Types.string.desc(\n        <div>\n          <p>The name of the scale. Possible values:</p>\n          <p>\n            <code>{Scale.names().join(', ')}</code>\n          </p>\n        </div>\n      ),\n    },\n    output: {\n      notes: Types.object.desc('The notes in this scale'),\n      intervals: Types.object.desc('The intervals between notes in this scale'),\n    },\n    state: {},\n  };\n\n  process = () => {\n    if (!get(this.props, 'tonic')) {\n      return { notes: [], intervals: [] };\n    }\n    return {\n      notes: Scale.notes(this.props.tonic, this.props.name),\n      intervals: Scale.intervals(this.props.name || this.props.tonic),\n    };\n  };\n\n  onInputChange = (edge: Edge, change: Object) => this.outKeys();\n}\n\nexport class ChordNode extends NodeBase<\n  {},\n  { name: string, tonic: string },\n  { notes: string[], intervals: string[] }\n> {\n  static +displayName = 'Music Chord';\n  static +registryName = 'ChordNode';\n  static description = <span>A Chord</span>;\n  static schema = {\n    input: {\n      tonic: Types.string.desc(\n        'The tonic for this scale, e.g. \"C\" or \"Ab4\". ' +\n          'You can optionally specify the chord name here too, and omit the name input, e.g. \"EMaj7\"' +\n          ' See the name param info for recognized chord names.'\n      ),\n      name: Types.string.desc(\n        <div>\n          <p>The name of the chord. Recognized names:</p>\n          <p>\n            <code>{Chord.names().join(', ')}</code>\n          </p>\n        </div>\n      ),\n    },\n    output: {\n      notes: Types.object.desc('The notes in this chord'),\n      intervals: Types.object.desc('The intervals between notes in this chord'),\n    },\n    state: {},\n  };\n\n  process = () => {\n    if (!get(this.props, 'tonic')) {\n      return { notes: [], intervals: [] };\n    }\n    return {\n      notes: Chord.notes(this.props.tonic, this.props.name),\n      intervals: Chord.intervals(this.props.name || this.props.tonic),\n    };\n  };\n\n  onInputChange = (edge: Edge, change: Object) => this.outKeys();\n}\n\nexport class KeyTriadsNode extends NodeBase<{}, { key: string }, { notes: string[] }> {\n  static +displayName = 'Key Triads';\n  static +registryName = 'KeyTriadsNode';\n  static description = <span>Triads For a Key</span>;\n  static schema = {\n    input: {\n      key: Types.string.desc('The name of the key (a tonic + a mode), e.g. C major, Db dorian'),\n    },\n    output: {\n      notes: Types.object.desc('Triad lead-sheet symbols for this key'),\n    },\n    state: {},\n  };\n\n  process = () => {\n    if (!get(this.props, 'key')) {\n      return { notes: [] };\n    }\n    return { notes: Key.triads(this.props.key) };\n  };\n\n  onInputChange = (edge: Edge, change: Object) => this.outKeys();\n}\n\nexport class TransposeNode extends NodeBase<\n  {},\n  { note: string, interval: string },\n  { out: ?string }\n> {\n  static +displayName = 'Transpose';\n  static +registryName = 'TransposeNode';\n  static description = <span>Transpose a note by an interval. e.g. transpose(A4, M3) -> C#5 </span>;\n  static schema = {\n    input: {\n      note: Types.string.desc(\n        'The note to transpose. This can be abstract or a concrete pitch, i.e. C or C4'\n      ),\n      interval: Types.string.desc('The interval to transpose by, e.g. P5 or M3'),\n    },\n    output: { out: Types.string.desc('The note, transposed by the interval') },\n    state: {},\n  };\n\n  process = () => {\n    if (this.props.note && this.props.interval) {\n      return { out: transpose(this.props.note, this.props.interval) };\n    }\n    return { out: undefined };\n  };\n\n  onInputChange = (edge: Edge, change: Object) => this.outKeys();\n}\n\nexport class ChromaNode extends NodeBase<{}, { notes: string[] }, { chroma: number[] }> {\n  static +displayName = 'Scale Chroma';\n  static +registryName = 'ChromaNode';\n  static description = (\n    <span>\n      A chroma representation of a pitchset as a 12-digit binary array, with each index presenting\n      one semitone of the octave\n    </span>\n  );\n  static schema = {\n    input: {\n      notes: Types.object.desc('A list of notes to compute a chroma for'),\n    },\n    output: {\n      chroma: Types.object.desc(\n        'the chroma output: 12-digit binary array, with each index presenting one semitone of the octave'\n      ),\n    },\n    state: {},\n  };\n\n  process = () => {\n    if (!get(this.props, 'notes') || !Array.isArray(this.props.notes)) {\n      return { chroma: [] };\n    }\n    return {\n      chroma: chroma(this.props.notes)\n        .split('')\n        .map(s => parseInt(s)),\n    };\n  };\n\n  onInputChange = (edge: Edge, change: Object) => this.outKeys();\n}\n","// @flow\nimport React from 'react';\nimport NodeBase from 'models/NodeBase';\nimport Edge from 'models/Edge';\n\nconst Types = window.Types;\n\nexport class DivideNode extends NodeBase<\n  {},\n  { dividend: number, divisor: number },\n  { result: number }\n> {\n  static +displayName = 'Divide';\n  static +registryName = 'DivideNode';\n  static description = <span>Divide one number by another</span>;\n  static schema = {\n    input: { dividend: Types.number, divisor: Types.number },\n    output: { result: Types.number },\n    state: {},\n  };\n\n  process = () => ({ result: this.props.dividend / this.props.divisor });\n\n  willReceiveProps = (newProps: Object, prevProps: Object) => this.outKeys();\n\n  onInputChange = (edge: Edge, change: Object) => this.outKeys();\n}\n\nexport class SumNode extends NodeBase<{}, { numbers: number[] }, { result: number }> {\n  static +displayName = 'Sum';\n  static +registryName = 'SumNode';\n  static description = <span>Sum across numbers</span>;\n  static schema = {\n    input: { numbers: Types.number.desc('All numbers to add together') },\n    output: { result: Types.number.desc('Sum') },\n    state: {},\n  };\n  _map: { [string]: number } = {};\n\n  process = () => ({ result: this.inputs.reduce((memo, e) => memo + this._map[e.id] || 0, 0) });\n\n  onInputChange = (edge: Edge, change: Object) => {\n    this._map[edge.id] = edge.inDataFor(change);\n    return this.outKeys();\n  };\n}\n\nexport class ProductNode extends NodeBase<{}, { numbers: number[] }, { result: number }> {\n  static +displayName = 'Product';\n  static +registryName = 'ProductNode';\n  static description = <span>Multiply over numbers</span>;\n  static schema = {\n    input: { numbers: Types.number.desc('All numbers to multiply together') },\n    output: { result: Types.number.desc('Product') },\n    state: {},\n  };\n  _map: { [string]: number } = {};\n\n  process = () => ({ result: this.inputs.reduce((memo, e) => memo * this._map[e.id] || 0, 1) });\n\n  onInputChange = (edge: Edge, change: Object) => {\n    this._map[edge.id] = edge.inDataFor(change);\n    return this.outKeys();\n  };\n}\n\nexport class IntToIntMathNode extends NodeBase<\n  {},\n  { fn: string, in: number },\n  { result: ?number }\n> {\n  static +displayName = 'Math: Int -> Int';\n  static +registryName = 'IntToIntMathNode';\n  static defaultProps = { in: 0 };\n  static description = (\n    <div>\n      Admittedly a node borne of laziness -- given a standard int -> int math operation name, this\n      node performs that operation over its single input. Constants are included. Full signature\n      list in MathFnIntInt help.\n    </div>\n  );\n  static schema = {\n    input: {\n      fn: Types.string.aliased('MathFnIntInt').desc(\n        <div>\n          <div>\n            Name of a basic int -> int math function, including constants: function signatures:\n          </div>\n          <pre>\n            E: number; LN10: number; LN2: number; LOG10E: number; LOG2E: number; PI: number;\n            SQRT1_2: number; SQRT2: number; abs(x: number): number; acos(x: number): number;\n            acosh(x: number): number; asin(x: number): number; asinh(x: number): number; atan(x:\n            number): number; atan2(y: number, x: number): number; atanh(x: number): number; cbrt(x:\n            number): number; ceil(x: number): number; cos(x: number): number; cosh(x: number):\n            number; exp(x: number): number; expm1(x: number): number; floor(x: number): number;\n            fround(x: number): number; log(x: number): number; log10(x: number): number; log1p(x:\n            number): number; log2(x: number): number; pow(x: number, y: number): number; random():\n            number; round(x: number): number; sign(x: number): number; sin(x: number): number;\n            sinh(x: number): number; sqrt(x: number): number; tan(x: number): number; tanh(x:\n            number): number; trunc(x: number): number;\n          </pre>\n        </div>\n      ),\n      in: Types.number,\n    },\n    output: { result: Types.number },\n    state: {},\n  };\n\n  process = () => {\n    if (this.props.fn && typeof this.props.in === 'number') {\n      return { result: Math[this.props.fn](this.props.in) };\n    }\n    return { result: undefined };\n  };\n  onInputChange = (edge: Edge, change: Object) => this.outKeys();\n}\n","// @flow\nimport NodeBase from 'models/NodeBase';\nimport { TypeImpl } from 'models/AttributeType';\nconst Types = window.Types;\n\ntype S = { value: any };\ntype O = { out: any };\n\nconst [number, string, boolean, date] = ['number', 'string', 'boolean', 'date']\n  .map(n => Types[n])\n  .map(\n    (_t: TypeImpl) =>\n      class _PrimNode extends NodeBase<S, null, O> {\n        static defaultState = { value: _t.defaultValue };\n        static displayName = _t.name;\n        static registryName = _t.name;\n        static isPrimitive = true;\n        static schema = {\n          input: {},\n          output: { out: _t },\n          state: { value: _t },\n        };\n        process = () => {\n          const out = _t.serialize ? _t.serialize(this.state.value) : this.state.value;\n          return { out };\n        };\n      }\n  );\n\nexport { number, string, boolean, date };\n","// @flow\nimport { fromPairs } from 'lodash';\nimport {\n  DuoSynthNode,\n  SynthNode,\n  AttackReleaseNode,\n  AudioMasterNode,\n  PannerNode,\n  FeedbackDelayNode,\n  AudioDelayNode,\n  AudioGainNode,\n  SetNoteNode,\n  TimeLoopNode,\n  StartTransportNode,\n  TransportTimeNode,\n  ConnectNode,\n  ContextDestinationNode,\n  ToContextDestinationNode,\n  PianoNode,\n  ArpeggiateNode,\n  CompressorNode,\n  ReverbNode,\n  PlayerNode,\n  VolumeNode,\n} from './ToneNode';\nimport { SoundFontNode, SoundFontPlayerNode } from './SoundFont';\nimport MapperNode from './MapperNode';\nimport IntervalNode from './IntervalNode';\nimport ThreeNode, {\n  Color,\n  DirectionalLightNode,\n  AmbientLightNode,\n  GlitchPassNode,\n  ScanlinePassNode,\n  DotScreenPassNode,\n  VignettePassNode,\n  NoisePassNode,\n} from './ThreeNode';\nimport {\n  TorusKnotGeometryNode,\n  PlaneGeometryNode,\n  SphereGeometryNode,\n  BoxGeometryNode,\n} from './Geometries';\nimport { LambertMaterialNode, ShaderMaterialNode } from './MaterialNode';\nimport { AndNode, OrNode, NotNode, EqualsNode } from './Logic';\nimport MeshNode from './MeshNode';\nimport { MidiOutNode, MidiInNode } from './Midi';\nimport {\n  InfoLog,\n  JSONParse,\n  ExtractNode,\n  StephenWolfram,\n  HistoryNode,\n  JoinNode,\n  RegexReplace,\n} from './UtilNodes';\nimport Vector2D from './Vector2D';\nimport Vector3D from './Vector3D';\nimport { DomNode } from './Dom';\nimport { PlusNode } from './String';\nimport { ScaleNode, ChromaNode, ChordNode, TransposeNode, KeyTriadsNode } from './Music';\nimport { PerformanceRNNNode } from './Neural';\nimport { DivideNode, SumNode, ProductNode, IntToIntMathNode } from './MathNodes';\nimport { number, string, boolean, date } from './primitives';\n\n/**\n * Aggregator file to export all the nodes from a single place.\n * Eventually this should be separated to packages (maybe)\n *\n * Eventually this should be code-gen'd.\n */\nexport {\n  Vector2D,\n  MeshNode,\n  TorusKnotGeometryNode,\n  LambertMaterialNode,\n  ShaderMaterialNode,\n  ThreeNode,\n  DuoSynthNode,\n  SynthNode,\n  AttackReleaseNode,\n  AudioMasterNode,\n  PannerNode,\n  FeedbackDelayNode,\n  AudioDelayNode,\n  AudioGainNode,\n  MapperNode,\n  IntervalNode,\n  SetNoteNode,\n  TimeLoopNode,\n  StartTransportNode,\n  TransportTimeNode,\n  ConnectNode,\n  ContextDestinationNode,\n  ToContextDestinationNode,\n  PianoNode,\n  ArpeggiateNode,\n  CompressorNode,\n  ReverbNode,\n  PlayerNode,\n  VolumeNode,\n  SoundFontNode,\n  SoundFontPlayerNode,\n  DivideNode,\n  SumNode,\n  ProductNode,\n  IntToIntMathNode,\n  Color,\n  DirectionalLightNode,\n  AmbientLightNode,\n  GlitchPassNode,\n  ScanlinePassNode,\n  DotScreenPassNode,\n  VignettePassNode,\n  NoisePassNode,\n  Vector3D,\n  AndNode,\n  OrNode,\n  NotNode,\n  EqualsNode,\n  PerformanceRNNNode,\n  InfoLog,\n  ScaleNode,\n  ChromaNode,\n  ChordNode,\n  TransposeNode,\n  KeyTriadsNode,\n  MidiOutNode,\n  MidiInNode,\n  JSONParse,\n  ExtractNode,\n  StephenWolfram,\n  HistoryNode,\n  JoinNode,\n  RegexReplace,\n  DomNode,\n  PlusNode,\n  number,\n  string,\n  boolean,\n  date,\n};\n\nexport const allNodes = [\n  Vector2D,\n  MeshNode,\n  TorusKnotGeometryNode,\n  PlaneGeometryNode,\n  SphereGeometryNode,\n  BoxGeometryNode,\n  LambertMaterialNode,\n  ShaderMaterialNode,\n  ThreeNode,\n  DuoSynthNode,\n  SynthNode,\n  AttackReleaseNode,\n  AudioMasterNode,\n  PannerNode,\n  FeedbackDelayNode,\n  AudioDelayNode,\n  AudioGainNode,\n  MapperNode,\n  IntervalNode,\n  SetNoteNode,\n  TimeLoopNode,\n  StartTransportNode,\n  TransportTimeNode,\n  ConnectNode,\n  ContextDestinationNode,\n  ToContextDestinationNode,\n  PianoNode,\n  ArpeggiateNode,\n  CompressorNode,\n  ReverbNode,\n  PlayerNode,\n  VolumeNode,\n  SoundFontNode,\n  SoundFontPlayerNode,\n  DivideNode,\n  SumNode,\n  ProductNode,\n  IntToIntMathNode,\n  Color,\n  DirectionalLightNode,\n  AmbientLightNode,\n  GlitchPassNode,\n  ScanlinePassNode,\n  DotScreenPassNode,\n  VignettePassNode,\n  NoisePassNode,\n  Vector3D,\n  AndNode,\n  OrNode,\n  NotNode,\n  EqualsNode,\n  PerformanceRNNNode,\n  InfoLog,\n  ScaleNode,\n  ChromaNode,\n  ChordNode,\n  TransposeNode,\n  KeyTriadsNode,\n  MidiOutNode,\n  MidiInNode,\n  JSONParse,\n  ExtractNode,\n  StephenWolfram,\n  HistoryNode,\n  JoinNode,\n  RegexReplace,\n  DomNode,\n  PlusNode,\n  number,\n  string,\n  boolean,\n  date,\n];\n\nwindow.allNodes = allNodes;\n\nconst NodeRegistry = fromPairs(allNodes.map(n => [n.getRegistryName(), n]));\nif (Object.keys(NodeRegistry).length !== allNodes.length) {\n  throw new Error('duplicate node by registryName in node registry');\n}\nwindow.NodeRegistry = NodeRegistry;\n","// @flow\n\nimport Tone from 'tone';\nimport 'models/AttributeType';\nimport 'models/types';\nimport 'models/nodes';\n\nwindow.Tone = Tone;\nwindow['$debug'] = true;\n","// @flow\n\nimport React, { Component } from 'react';\n\ntype P = { index: number, onMouseUp: number => void, item: string, filled: boolean };\ntype S = { hover: boolean };\n\nexport default class NodeInputListItem extends Component<P, S> {\n  state = { hover: false };\n\n  onMouseUp = (e: MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.props.onMouseUp(this.props.index);\n  };\n\n  onMouseOver = () => this.setState({ hover: true });\n  onMouseOut = () => this.setState({ hover: false });\n\n  render() {\n    const { hover } = this.state;\n    const { filled, item } = this.props;\n    const icon = filled || hover ? 'fa-circle' : 'fa-circle';\n    const modifier = hover ? ' hover' : filled ? ' connected-node' : '';\n    return (\n      <li onMouseOver={this.onMouseOver} onMouseOut={this.onMouseOut} onMouseUp={this.onMouseUp}>\n        <span className={`input-text${modifier}`}>\n          <i className={`fa ${icon}`} />\n          {item}\n        </span>\n      </li>\n    );\n  }\n}\n","// @flow\n\nimport React from 'react';\n\nimport NodeInputListItem from './NodeInputListItem';\n\n// TODO: change this to type Item = {name: string, filled: boolean}\ntype P = {\n  onCompleteConnector: number => void,\n  items: string[],\n  connected: string[],\n  display: string[],\n};\n\nexport default class NodeInputList extends React.Component<P> {\n  onMouseUp = (i: number) => {\n    this.props.onCompleteConnector(i);\n  };\n\n  render() {\n    const { items, connected, display } = this.props;\n    return (\n      <div className=\"nodeInputWrapper\">\n        <ul className=\"nodeInputList\">\n          {items.map((item, i) => (\n            <NodeInputListItem\n              onMouseUp={this.onMouseUp}\n              key={`item-${i}`}\n              index={i}\n              item={display[i]}\n              filled={connected.includes(item)}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","// @flow\nimport React from 'react';\nimport type { DraggableData } from 'react-draggable';\nimport { DraggableCore } from 'react-draggable';\nimport type { Pos } from 'types';\n\ntype P = {\n  index: number,\n  onMouseDown: (number, MouseEvent, DraggableData) => void,\n  item: string,\n  filled: boolean,\n  scale: number,\n  positionOffset: Pos | typeof undefined,\n};\n\nexport default class NodeOutputListItem extends React.Component<P> {\n  onMouseDown = (e: MouseEvent, data: DraggableData) => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.props.onMouseDown(this.props.index, e, data);\n  };\n\n  render() {\n    const { filled, item } = this.props;\n    const modifier = filled ? '' : ' unconnected';\n    return (\n      <DraggableCore onStart={this.onMouseDown}>\n        <li>\n          <span>\n            {item}\n            <i className={`fa fa-circle${modifier}`} />\n          </span>\n        </li>\n      </DraggableCore>\n    );\n  }\n}\n","// @flow\nimport React from 'react';\n\nimport NodeOutputListItem from './NodeOutputListItem';\nimport type { Pos } from 'types';\nimport { DraggableData } from 'react-draggable';\n\ntype P = {\n  onStartConnector: (number, MouseEvent, DraggableData) => void,\n  items: string[],\n  connected: string[],\n  display: string[],\n  scale: number,\n  positionOffset: Pos | typeof undefined,\n};\n\nexport default class NodeOutputList extends React.Component<P> {\n  render() {\n    const { items, connected, display, scale, positionOffset, onStartConnector } = this.props;\n    return (\n      <div className=\"nodeOutputWrapper\">\n        <ul className=\"nodeOutputList\">\n          {items.map((item, i) => {\n            return (\n              <NodeOutputListItem\n                filled={connected.includes(item)}\n                onMouseDown={onStartConnector}\n                key={`item-${i}`}\n                index={i}\n                item={display[i]}\n                scale={scale}\n                positionOffset={positionOffset}\n              />\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport type { Pos } from 'types';\n\nexport const addVec = (v1: Pos, v2: Pos): Pos => {\n  return { x: v1.x + v2.x, y: v1.y + v2.y };\n};\n\nexport const subVec = (v1: Pos, v2: Pos): Pos => {\n  return { x: v1.x - v2.x, y: v1.y - v2.y };\n};\n\nexport type Direction = 'left' | 'right' | 'up' | 'down';\n\nexport const unitVec = (dir: Direction): Pos => {\n  switch (dir) {\n    case 'left':\n      return { x: 1, y: 0 };\n    case 'right':\n      return { x: -1, y: 0 };\n    case 'up':\n      return { x: 0, y: 1 };\n    case 'down':\n      return { x: 0, y: -1 };\n    default:\n      throw Error('invalid dir');\n  }\n};\n\nexport const scaleVec = (v: Pos, scale: number): Pos => {\n  return { x: v.x * scale, y: v.y * scale };\n};\n","// @flow\n\nimport React from 'react';\nimport { get } from 'lodash';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'redux-starter-kit';\nimport onClickOutside from 'react-onclickoutside';\nimport Draggable, { type DraggableEventHandler, type DraggableData } from 'react-draggable';\nimport NodeInputList from './NodeInputList';\nimport NodeOutputList from './NodeOutputList';\nimport type { AnyNode } from 'models/NodeBase';\nimport type { NodeInSpace, Pos } from 'types';\nimport { Hotkey, Hotkeys, HotkeysTarget } from '@blueprintjs/core';\nimport { addVec } from 'utils/vector';\n\ntype SP = {| pos: Pos, infoShowing: boolean |};\ntype OP = {|\n  index: number,\n  nis: NodeInSpace,\n  onNodeStart: (NodeInSpace, DraggableData) => void,\n  onNodeStop: (NodeInSpace, DraggableData) => void,\n  onNodeMove: (NodeInSpace, DraggableData) => void,\n  onStartConnector: (string, number, e: MouseEvent, d: DraggableData) => void,\n  onCompleteConnector: (string, number) => void,\n  onNodeSelect?: (NodeInSpace, ?number) => void,\n  onNodeDeselect?: (NodeInSpace, boolean) => void,\n  onDelete?: AnyNode => void,\n  visible: boolean,\n  selected: boolean,\n  scale?: ?number,\n  positionOffset?: Pos | typeof undefined,\n|};\ntype P = {| ...SP, ...OP |};\nconst MoveBufferPx = 4;\n\nclass Node extends React.Component<P> {\n  dragStart: ?Pos;\n\n  _onDelete = () => {\n    this.props.onDelete && this.props.onDelete(this.props.nis.node);\n  };\n\n  handleDragStart = (event: MouseEvent, data: DraggableData) => {\n    this.dragStart = { x: event.clientX, y: event.clientY };\n    this.props.onNodeStart(this.props.nis, data);\n  };\n\n  handleDragStop: DraggableEventHandler = (event: MouseEvent, data: DraggableData) => {\n    this.props.onNodeStop(this.props.nis, data);\n    setTimeout(() => {\n      this.dragStart = null;\n    });\n  };\n\n  handleDrag = (event: MouseEvent, data: DraggableData) => {\n    this.props.onNodeMove(this.props.nis, data);\n  };\n\n  onStartConnector = (i: number, e: MouseEvent, d: DraggableData) => {\n    this.props.onStartConnector(this.props.nis.node.id, i, e, d);\n  };\n\n  onCompleteConnector = index => {\n    this.props.onCompleteConnector(this.props.nis.node.id, index);\n    this.forceUpdate();\n  };\n\n  _selectNode = () => {\n    if (this.props.onNodeSelect) {\n      this.props.onNodeSelect(this.props.nis, this.props.index);\n    }\n  };\n\n  _deselectNode = () => {\n    if (this.props.onNodeDeselect) {\n      this.props.onNodeDeselect(this.props.nis, false);\n    }\n  };\n\n  handleClick = () => {\n    const x = get(this.dragStart, 'x');\n    const y = get(this.dragStart, 'y');\n    const wx = get(window, 'event.clientX');\n    const wy = get(window, 'event.clientY');\n    if (\n      x &&\n      y &&\n      wx &&\n      wy &&\n      (Math.abs(wx - x) > MoveBufferPx || Math.abs(wy - y) > MoveBufferPx)\n    ) {\n      return;\n    }\n    if (!this.props.selected) {\n      this._selectNode();\n    } else {\n      this._deselectNode();\n    }\n  };\n\n  // noinspection JSUnusedGlobalSymbols\n  handleClickOutside = event => {\n    const { selected, infoShowing } = this.props;\n    const ignore = !selected && !infoShowing;\n    if (event.metaKey || event.shiftKey || ignore) {\n      return;\n    }\n    if (this.props.onNodeDeselect) {\n      this.props.onNodeDeselect(this.props.nis, true);\n    }\n  };\n\n  render() {\n    const { selected, infoShowing, visible, pos, scale, positionOffset } = this.props;\n    const { node } = this.props.nis;\n    const sel = infoShowing ? 'in-view' : selected ? 'selected' : '';\n    let nodeClass = 'node' + (sel ? ` ${sel} ignore-react-onclickoutside` : '');\n    if (!visible) {\n      return null;\n    }\n\n    const name = node.name();\n    return (\n      <Draggable\n        position={pos}\n        handle=\".node\"\n        onStart={this.handleDragStart}\n        onStop={this.handleDragStop}\n        onDrag={this.handleDrag}\n        scale={scale || 1}\n        positionOffset={positionOffset}\n      >\n        <div className={nodeClass} onClick={this.handleClick} onDoubleClick={this._selectNode}>\n          <header className=\"node-header\">\n            <span className=\"node-title\">{name}</span>\n          </header>\n          <div className=\"node-content\">\n            <NodeInputList\n              connected={node.connectedInputKeys()}\n              items={node.inKeys()}\n              display={node.constructor.displayInKeys()}\n              onCompleteConnector={this.onCompleteConnector}\n            />\n            <NodeOutputList\n              connected={node.connectedOutputKeys()}\n              items={node.outKeys()}\n              display={node.constructor.displayOutKeys()}\n              onStartConnector={this.onStartConnector}\n              scale={scale || 1}\n              positionOffset={addVec(pos, positionOffset || { x: 0, y: 0 })}\n            />\n          </div>\n        </div>\n      </Draggable>\n    );\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  renderHotkeys() {\n    const show = this.props.selected || this.props.infoShowing;\n    if (!show) {\n      return <Hotkeys />;\n    }\n    return (\n      <Hotkeys>\n        <Hotkey\n          group=\"Node Actions\"\n          combo=\"backspace\"\n          label=\"Delete selected node\"\n          global={true}\n          onKeyDown={this._onDelete}\n        />\n      </Hotkeys>\n    );\n  }\n}\n\nconst getInfoShowing = (s, op) => Boolean(s.graph.infoOpen === op.nis.node.id);\nconst getPos = (s, op) => s.graph.nodePos[op.nis.node.id] || op.nis.pos;\n\nconst makeSelectCreator = () =>\n  createSelector(\n    [getPos, getInfoShowing],\n    (pos, infoShowing) => ({ pos, infoShowing })\n  );\n\nconst makeSelect = () => {\n  const selector = makeSelectCreator();\n  return (s, op) => selector(s, op);\n};\n\nexport default connect(makeSelect)(onClickOutside(HotkeysTarget(Node)));\n","//@flow\nimport { get, flatten, uniqBy, fromPairs, mapValues } from 'lodash';\nimport Edge from 'models/Edge';\nimport NodeBase from 'models/NodeBase';\nimport type { NodeInSpace, Pos } from 'types';\nimport type { AnyNode, NodeSerialization } from 'models/NodeBase';\nimport type { EdgeSerialization } from 'models/Edge';\nimport { uuid } from 'helpers';\nimport type { PosMemo } from 'redux/ducks/graph';\n\nexport type GraphSerialization = {\n  name?: string,\n  nodes: NodeSerialization<any>[],\n  edges: EdgeSerialization[],\n};\n\nexport default class Graph {\n  id: string;\n  name: string = 'untitled';\n  nodes: NodeInSpace[] = [];\n  _nodesById: { [string]: NodeInSpace } = {};\n  edges: Edge[] = [];\n\n  constructor(nodes?: NodeInSpace[] = [], edges?: Edge[] = [], name?: string = 'untitled') {\n    this.id = uuid();\n    const _nodes = nodes || [];\n    _nodes.forEach(nis => this.addNode(nis.node, nis.pos));\n    const _edges = edges || [];\n    _edges.forEach(this.addEdge);\n    this.name = name;\n  }\n\n  nodeWithId: string => ?NodeInSpace = id => this._nodesById[id];\n\n  nodeWithIdF: string => NodeInSpace = id => {\n    const n = this.nodeWithId(id);\n    if (n) {\n      return n;\n    } else {\n      throw new Error('not found');\n    }\n  };\n\n  addNode: (AnyNode, Pos) => NodeInSpace = (node, pos) => {\n    const nis = { node, pos };\n    this._nodesById[node.id] = nis;\n    this.nodes.push(nis);\n    node.onAddToGraph();\n    return nis;\n  };\n\n  setNodes: (NodeInSpace[]) => Graph = nodes => {\n    this.nodes = nodes;\n    this._nodesById = fromPairs(nodes.map(n => [n.node.id, n]));\n    return this;\n  };\n\n  updatePositions = (pos: PosMemo) => {\n    this.nodes.forEach(nis => {\n      const p = pos[nis.node.id];\n      if (p) {\n        nis.pos = p;\n      }\n    });\n  };\n\n  nodeIds = (): string[] => Object.keys(this._nodesById);\n\n  nodePositions = (): PosMemo => mapValues(this._nodesById, 'pos');\n\n  removeNode: AnyNode => Graph = node => {\n    node.inputs.forEach(this.removeEdge);\n    node.outputs.forEach(this.removeEdge);\n    node.willBeRemoved();\n    this.setNodes(this.nodes.filter(n => n.node.id !== node.id));\n    return this;\n  };\n\n  addEdge: Edge => void = edge => {\n    this.edges.push(edge);\n    edge.from.addOutput(edge);\n    edge.to.addInput(edge);\n  };\n\n  removeEdge: Edge => void = edge => {\n    this.edges = this.edges.filter(e => e.id !== edge.id);\n    edge.from.removeOutput(edge);\n    edge.to.removeInput(edge);\n  };\n\n  serialize: string => GraphSerialization = name => {\n    return {\n      name,\n      nodes: this.nodes.map(n => n.node.serialize(n.pos.x, n.pos.y)),\n      edges: this.edges.map(e => e.serialize()),\n    };\n  };\n\n  duplicate: (NodeInSpace[]) => NodeInSpace[] = nodes => {\n    const ids = nodes.map(nis => nis.node.id);\n    const newNodes = nodes.map(nis =>\n      this.addNode(NodeBase.duplicate(nis.node), { x: nis.pos.x + 50, y: nis.pos.y + 50 })\n    );\n    uniqBy(flatten(nodes.map(nis => nis.node.inputs.concat(nis.node.outputs))), 'id').forEach(e => {\n      const fIdx = ids.indexOf(e.from.id);\n      const tIdx = ids.indexOf(e.to.id);\n      if (fIdx !== -1 && tIdx !== -1) {\n        this.addEdge(new Edge(newNodes[fIdx].node, newNodes[tIdx].node, e.fromPort, e.toPort));\n      }\n    });\n    return newNodes;\n  };\n\n  dispose = () => {\n    this.edges.forEach(this.removeEdge);\n    this.nodes.map(n => n.node).forEach(this.removeNode);\n    this.edges = [];\n    this.nodes = [];\n    this._nodesById = {};\n    if (get(window, '$graph.id') === this.id) {\n      window['$graph'] = null;\n    }\n  };\n\n  static load(json: GraphSerialization): Graph {\n    const nodesInSpace = json.nodes.map(n => ({ node: NodeBase.load(n), pos: { x: n.x, y: n.y } }));\n    const nodes = nodesInSpace.map(nis => nis.node);\n    const edges = json.edges.map(j => Edge.load(j, nodes));\n    const name = json.name || 'untitled';\n    return new Graph(nodesInSpace, edges, name);\n  }\n\n  static empty(): GraphSerialization {\n    return { name: 'untitled', edges: [], nodes: [] };\n  }\n\n  static serialization(frm: any): ?GraphSerialization {\n    return typeof frm === 'object' && frm.edges && frm.nodes ? frm : null;\n  }\n\n  static fromFile(file: File, handler: GraphSerialization => void) {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const result = fileReader.result;\n      if (typeof result === 'string') {\n        try {\n          handler(JSON.parse(result));\n        } catch (e) {\n          console.error('could not load graph', e);\n        }\n      }\n    };\n    fileReader.readAsText(file);\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class SVGComponent extends Component {\n  render() {\n    return (\n      <svg {...this.props}>\n        {this.props.children}\n      </svg>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class TrashIcon extends React.Component {\n  handleClick = e => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  render() {\n    let { position } = this.props;\n    return (\n      <g\n        className=\"trash-icon\"\n        fill=\"none\"\n        stroke=\"none\"\n        strokeWidth=\"1\"\n        transform={`translate(${position.x - 6},${position.y + 15})`}\n        onClick={this.handleClick}\n      >\n        <circle className=\"trash-icon-bg\" cx={7} cy={7} r=\"14\" />\n        <g\n          className=\"trash-icon-trashcan\"\n          fill=\"#FFFFFF\"\n          transform=\"translate(-336.000000, -192.000000)\"\n        >\n          <path\n            d=\"M347.999959,195 L350,195 L350,196 L349,196 L349,207.001498 C349,207.552511 348.554265,208 348.004423,208 L338.995577,208 C338.444837,208 338,207.552955 338,207.001498 L338,196 L337,196 L337,195 L338.995577,195 L339.000042,195 L339,194.990631 L339,193.009369 C339,192.443353 339.446616,192 339.997545,192 L347.002455,192 C347.553689,192 348,192.45191 348,193.009369 L348,194.990631 Z M340,194 L340,195 L347,195 L347,194 C347,193.447715 346.552285,193 346,193 L341,193 C340.447715,193 340,193.447715 340,194 Z M339,196 L339,207 L348,207 L348,196 Z M341,197 L342,197 L342,206 L341,206 Z M343,197 L344,197 L344,206 L343,206 Z M345,197 L345,206 L346,206 L346,197 L345,197 Z M345,197\"\n            id=\"Rectangle 159\"\n          />\n        </g>\n      </g>\n    );\n  }\n}\n","// @flow\nimport React from 'react';\nimport onClickOutside from 'react-onclickoutside';\n\nimport TrashIcon from './TrashIcon';\nimport type { Pos } from 'types';\nimport Edge from 'models/Edge';\nimport { Hotkey, Hotkeys, HotkeysTarget } from '@blueprintjs/core';\n\ntype P = {\n  start: Pos,\n  end: Pos,\n  onRemove?: () => void,\n  edge: ?Edge,\n  highlighted?: boolean,\n};\n\ntype S = { selected: boolean, position: Pos };\n\nclass Spline extends React.Component<P, S> {\n  el: ?Element;\n  state = { selected: false, position: { x: 0, y: 0 } };\n  listeningOnEdge: string;\n\n  handleClick = e => {\n    this.setState({\n      selected: !this.state.selected,\n      position: { x: e.clientX, y: e.clientY },\n    });\n  };\n\n  componentDidMount() {\n    this._setListener();\n  }\n\n  componentDidUpdate() {\n    this._setListener();\n  }\n\n  _setListener = () => {\n    if (this.props.edge && this.listeningOnEdge !== this.props.edge.id) {\n      this.props.edge.notifyListener = this._onNotify;\n      this.listeningOnEdge = this.props.edge.id;\n    }\n  };\n\n  _onNotify = () => {\n    this.el &&\n      // $FlowIssue\n      this.el.animate(\n        [\n          { stroke: '#999999', strokeWidth: 4, filter: 'blur(0)' },\n          { stroke: '#4caa4d', strokeWidth: 6, filter: 'blur(20px)' },\n          { stroke: '#999999', strokeWidth: 4, filter: 'blur(0)' },\n        ],\n        { duration: 500, iterations: 1 }\n      );\n  };\n\n  // noinspection JSUnusedGlobalSymbols\n  handleClickOutside = event => {\n    if (!this.state.selected || event.metaKey || event.shiftKey) {\n      return;\n    }\n    this.setState({ selected: false });\n  };\n\n  handleRemove = () => {\n    this.setState({ selected: false });\n    this.props.onRemove && this.props.onRemove();\n  };\n\n  render() {\n    let { selected, position } = this.state;\n    let { start, end, highlighted } = this.props;\n    let dist = this.distance([start.x, start.y], [end.x, end.y]);\n    let pathString = this.bezierCurve(\n      start.x, // start x\n      start.y, // start y\n      start.x + dist * 0.18, // cp1 x\n      start.y, // cp1 y\n      end.x - dist * 0.35, // cp2 x\n      end.y, // cp2 y\n      end.x, // end x\n      end.y\n    );\n\n    const cls = 'connector' + (selected ? ' selected' : '') + (highlighted ? ' highlight' : '');\n    return (\n      <g>\n        <path className=\"connector-click-area\" d={pathString} onClick={this.handleClick} />\n        <path className={cls} d={pathString} onClick={this.handleClick} ref={r => (this.el = r)} />\n        {selected ? <TrashIcon position={position} onClick={this.handleRemove} /> : null}\n      </g>\n    );\n  }\n\n  bezierCurve(a, b, cp1x, cp1y, cp2x, cp2y, x, y) {\n    return `M${a},${b} C${cp1x},${cp1y} ${cp2x},${cp2y} ${x},${y}`;\n  }\n\n  distance(a, b) {\n    return Math.sqrt((b[0] - a[0]) ** 2 + (b[1] - a[1]) ** 2);\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  renderHotkeys() {\n    let { selected } = this.state;\n    if (!selected) {\n      return <Hotkeys />;\n    }\n    return (\n      <Hotkeys>\n        <Hotkey\n          group=\"Edge Actions\"\n          combo=\"backspace\"\n          label=\"Delete edge\"\n          global={true}\n          onKeyDown={this.handleRemove}\n        />\n      </Hotkeys>\n    );\n  }\n}\n\nexport default onClickOutside(HotkeysTarget(Spline));\n","// @flow\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'redux-starter-kit';\nimport { inOffset, outOffset } from 'components/util';\nimport SVGComponent from 'components/SVGComponent';\nimport Spline from 'components/Spline';\nimport { selectInfoOpen, selectPositions } from 'redux/ducks/graph';\nimport type { Pos } from 'types';\nimport type Edge from 'models/Edge';\nimport { addVec, scaleVec, subVec } from 'utils/vector';\nimport type { PosMemo } from 'redux/ducks/graph';\nimport type Graph from 'models/Graph';\n\ntype P = {\n  dragging: boolean,\n  source: ?[string, number],\n  visible: boolean,\n  paneId: ?string,\n  selected: { [string]: boolean },\n  onRemoveConnector: Edge => void,\n  edges: Edge[],\n  pan: Pos,\n  positions: PosMemo,\n  graph: Graph,\n  scaleInverse: number,\n  mousePos: ?Pos,\n};\nconst AllEdges = ({\n  positions,\n  dragging,\n  source,\n  visible,\n  paneId,\n  selected,\n  onRemoveConnector,\n  edges,\n  pan,\n  graph,\n  scaleInverse,\n  mousePos,\n}: P) => {\n  if (!visible) {\n    return null;\n  }\n  let creatingSpline = null;\n  if (dragging && source && mousePos && window.centerP) {\n    const [nodeId, outIdx] = source;\n    let src = positions[nodeId] || graph.nodeWithIdF(nodeId).pos;\n    const fromCenter = subVec(mousePos, window.centerP);\n    const endOff = scaleVec(fromCenter, scaleInverse);\n    creatingSpline = (\n      <Spline\n        start={addVec(outOffset(src.x, src.y, outIdx), pan)}\n        end={subVec(addVec(mousePos, endOff), fromCenter)}\n      />\n    );\n  }\n  return (\n    <SVGComponent height=\"100%\" width=\"100%\">\n      {edges.map(e => {\n        const [fromId, toId] = [e.from.id, e.to.id];\n        const [i, o] = [graph.nodeWithIdF(toId), graph.nodeWithIdF(fromId)];\n\n        const outIdx = o.node.constructor.outKeyIndex(e.fromPort);\n        const inIdx = i.node.constructor.inKeyIndex(e.toPort);\n\n        const frm = positions[e.from.id] || o.pos;\n        const to = positions[e.to.id] || i.pos;\n        return (\n          <Spline\n            highlighted={\n              selected[fromId] ||\n              selected[toId] ||\n              (paneId && (fromId === paneId || toId === paneId))\n            }\n            edge={e}\n            start={addVec(outOffset(frm.x, frm.y, outIdx), pan)}\n            end={addVec(inOffset(to.x, to.y, inIdx), pan)}\n            key={`${e.id}-spline`}\n            onRemove={() => onRemoveConnector(e)}\n          />\n        );\n      })}\n      {creatingSpline}\n    </SVGComponent>\n  );\n};\n\nconst selector = createSelector(\n  [selectInfoOpen, selectPositions],\n  (paneId, positions) => ({ paneId, positions })\n);\n\nexport default connect(selector)(AllEdges);\n","// @flow\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'redux-starter-kit';\nimport { DraggableCore } from 'react-draggable';\nimport { get, uniq, throttle, omit, fromPairs, mapValues } from 'lodash';\nimport Node from './Node';\nimport Graph from 'models/Graph';\nimport Edge from 'models/Edge';\n\nimport type { DraggableData } from 'react-draggable';\nimport { Hotkey, Hotkeys, HotkeysTarget } from '@blueprintjs/core';\nimport {\n  selectedS,\n  selectView,\n  selSet as _selSet,\n  zoomIn as _zIn,\n  zoomOut as _zOut,\n  zoomReset as _zReset,\n  setPan as _setPan,\n  updatePos as _updatePos,\n} from 'redux/ducks/graph';\n\nimport type { NodeInSpace, Pos } from 'types';\nimport type { AnyNode } from 'models/NodeBase';\nimport AllEdges from 'components/AllEdges';\nimport type { PosMemo, SelectedView } from 'redux/ducks/graph';\nimport { addVec, scaleVec, subVec, unitVec } from 'utils/vector';\nimport type { Direction } from 'utils/vector';\n\ntype OP = {|\n  graph: Graph,\n  onCreateEdge?: Edge => void,\n  onDeleteEdge?: Edge => void,\n  onNodeSelect?: AnyNode => void,\n  onNodeDeselect?: (AnyNode, ?boolean) => void,\n  onNodeSelectionChange?: (?AnyNode, ?number) => void,\n  visible: boolean,\n|};\ntype SP = {| selected: { [string]: boolean }, selectCount: number, ...SelectedView |};\ntype DP = {|\n  selSet: (string[]) => void,\n  zoomIn: () => void,\n  zoomOut: () => void,\n  zoomReset: () => void,\n  setPan: Pos => void,\n  updatePos: PosMemo => void,\n|};\n\ntype P = {| ...SP, ...OP, ...DP |};\ntype S = {|\n  source: ?[string, number],\n  dragging: boolean,\n  mousePos: ?Pos,\n|};\n\nclass NodeGraph extends React.Component<P, S> {\n  dragOffsets: PosMemo = {};\n  moving: boolean = false;\n  timeoutId: ?TimeoutID = null;\n  deltaY: number = 0;\n  state = { source: null, dragging: false, mousePos: null };\n\n  componentDidMount() {\n    document.addEventListener('mousemove', this.onMouseMove);\n    document.addEventListener('mouseup', this.onMouseUp);\n    window.centerP = { x: window.innerWidth / 2, y: window.innerHeight / 2 };\n    window.addEventListener('resize', this.onWinResize);\n    const { graph } = this.props;\n    graph && this._setPosFromGraph();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n    window.removeEventListener('resize', this.onWinResize);\n    this.timeoutId && clearTimeout(this.timeoutId);\n    this._debouncedSetMouse.cancel();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graph } = this.props;\n    graph && graph !== prevProps.graph && this._setPosFromGraph();\n  }\n\n  onScroll = (e: WheelEvent) => {\n    this.deltaY += e.deltaY;\n    const thresh = 30;\n    if (this.deltaY > thresh) {\n      this.props.zoomIn();\n      this.deltaY = 0;\n    } else if (this.deltaY < -thresh) {\n      this.props.zoomOut();\n      this.deltaY = 0;\n    }\n  };\n\n  onWinResize = () => {\n    window.centerP = { x: window.innerWidth / 2, y: window.innerHeight / 2 };\n  }\n\n  onMouseUp = () => {\n    this.timeoutId = setTimeout(() => this.setState({ dragging: false, mousePos: null }), 1);\n  };\n\n  onMouseMove = (e: MouseEvent) => {\n    if (this.moving) {\n      return;\n    }\n    const { dragging } = this.state;\n    const { selectCount } = this.props;\n    const set = dragging || selectCount > 0;\n    if (!set) {\n      return;\n    }\n    this._debouncedSetMouse(e);\n  };\n\n  _debouncedSetMouse = throttle((e: MouseEvent) => {\n    // $FlowIgnore\n    this.setState({ mousePos: e });\n  }, 20);\n\n  _getSelected = (): NodeInSpace[] => {\n    const { selected, graph } = this.props;\n    return graph.nodes.filter(nis => selected[nis.node.id]);\n  };\n\n  onNodeStartMove = (started: NodeInSpace) => {\n    this.dragOffsets = fromPairs(\n      this._getSelected()\n        .map(nis => [nis.node.id, subVec(started.pos, nis.pos)])\n        .concat([[started.node.id, { x: 0, y: 0 }]])\n    );\n    this.moving = true;\n  };\n\n  onNodeStopMove = (node: NodeInSpace, data: DraggableData) => {\n    this.onNodeMove(node, data);\n    const { graph } = this.props;\n    const updates = mapValues(this.dragOffsets, offset => subVec(data, offset));\n    graph.updatePositions(updates);\n    this._setPosFromGraph();\n    this.dragOffsets = {};\n    this.moving = false;\n  };\n\n  onNodeMove = (node: NodeInSpace, data: DraggableData) => {\n    const updates = mapValues(this.dragOffsets, offset => subVec(data, offset));\n    this.props.updatePos(updates);\n  };\n\n  onStartConnector = (id: string, outputIndex: number, e: MouseEvent, d: DraggableData) => {\n    this.setState({\n      dragging: true,\n      source: [id, outputIndex],\n      mousePos: { x: e.clientX, y: e.clientY },\n    });\n  };\n\n  onCompleteConnector = (id: string, inIndex: number) => {\n    const { dragging, source } = this.state;\n    const { graph } = this.props;\n    if (dragging && source) {\n      const [nodeId, outIdx] = source;\n      let fromNode = graph.nodeWithId(nodeId);\n      let toNode = graph.nodeWithId(id);\n      if (fromNode && toNode) {\n        let fromAttr = fromNode.node.outKeyAt(outIdx);\n        let toAttr = toNode.node.inKeyAt(inIndex);\n        const edge = new Edge(fromNode.node, toNode.node, fromAttr, toAttr);\n        graph.addEdge(edge);\n        this.props.onCreateEdge && this.props.onCreateEdge(edge);\n      }\n    }\n    this.setState({ dragging: false, mousePos: null });\n    this.forceUpdate();\n  };\n\n  handleRemoveConnector = (edge: Edge) => {\n    if (this.props.onDeleteEdge) {\n      this.props.onDeleteEdge(edge);\n    }\n    this.props.graph.removeEdge(edge);\n    this.forceUpdate();\n  };\n\n  onNodeSelect = (n: NodeInSpace, idx?: number) => {\n    if (this.props.onNodeSelect) {\n      this.props.onNodeSelect(n.node);\n    }\n    const highlighted = uniq(Object.keys(this.props.selected).concat(n.node.id));\n    if (highlighted.length > 1) {\n      this._onNodeChange(null);\n    } else {\n      this._onNodeChange(n.node, idx);\n    }\n    this.props.selSet(highlighted);\n  };\n\n  onNodeDeselect = (n: NodeInSpace, all?: boolean) => {\n    if (this.props.onNodeDeselect) {\n      this.props.onNodeDeselect(n.node);\n    }\n    const highlighted = all ? [] : Object.keys(omit(this.props.selected, n.node.id));\n    this._onNodeChange(null);\n    this.props.selSet(highlighted);\n  };\n\n  onDeleteNode = (n: AnyNode) => {\n    this.props.graph.removeNode(n);\n    this._setPosFromGraph();\n    this._onNodeChange(null);\n  };\n\n  _setPosFromGraph = () => {\n    this.props.updatePos(this.props.graph.nodePositions());\n  };\n\n  _onNodeChange = (n: ?AnyNode, idx?: number) => {\n    if (this.props.onNodeSelectionChange) {\n      this.props.onNodeSelectionChange(n, idx);\n    }\n  };\n\n  _onCanvasDrag = (e: Event, data: DraggableData) => {\n    if (!this.moving) {\n      const { setPan, pan, scaleInverse } = this.props;\n      setPan(addVec(pan, scaleVec({ x: data.deltaX, y: data.deltaY }, scaleInverse)));\n    }\n  };\n\n  render() {\n    const { dragging, source } = this.state;\n    const { visible, selected, scale, pan, graph, scaleInverse } = this.props;\n    return (\n      <DraggableCore onDrag={this._onCanvasDrag} scale={scale}>\n        <div id=\"graph-root\" className={dragging ? 'dragging' : ''} onWheel={this.onScroll}>\n          <div id=\"graph-scalable\" className=\"graph-scalable\" style={this._rootStyle()}>\n            {graph.nodes.map((nis, i) => {\n              return (\n                <Node\n                  selected={selected[nis.node.id]}\n                  visible={visible}\n                  index={i}\n                  nis={nis}\n                  key={`node-${nis.node.id}`}\n                  onNodeStart={this.onNodeStartMove}\n                  onNodeStop={this.onNodeStopMove}\n                  onNodeMove={this.onNodeMove}\n                  onStartConnector={this.onStartConnector}\n                  onCompleteConnector={this.onCompleteConnector}\n                  onNodeSelect={this.onNodeSelect}\n                  onNodeDeselect={this.onNodeDeselect}\n                  onDelete={this.onDeleteNode}\n                  scale={scale}\n                  positionOffset={pan}\n                />\n              );\n            })}\n            <AllEdges\n              edges={get(graph, 'edges', [])}\n              dragging={dragging}\n              source={source}\n              visible={visible}\n              selected={selected}\n              onRemoveConnector={this.handleRemoveConnector}\n              pan={pan}\n              scaleInverse={scaleInverse}\n              graph={graph}\n              mousePos={this.state.mousePos}\n            />\n          </div>\n        </div>\n      </DraggableCore>\n    );\n  }\n\n  _rootStyle = () => {\n    return { transform: `scale(${this.props.scale})` };\n  };\n\n  _onCopy = () => {\n    const selected = this.props.graph.duplicate(this._getSelected()).map(nis => nis.node.id);\n    this.props.selSet(selected);\n  };\n\n  _selectAll = () => this.props.selSet(this.props.graph.nodeIds());\n\n  _pan = (dir: Direction) => {\n    const { setPan, pan, scaleInverse } = this.props;\n    const move = scaleVec(unitVec(dir), scaleInverse * 30);\n    setPan(addVec(pan, move));\n  };\n\n  _panR = () => this._pan('right');\n  _panL = () => this._pan('left');\n  _panD = () => this._pan('down');\n  _panU = () => this._pan('up');\n\n  // noinspection JSUnusedGlobalSymbols\n  renderHotkeys() {\n    const { selectCount, zoomIn, zoomOut, zoomReset } = this.props;\n    const showCopy = selectCount > 0;\n    return (\n      <Hotkeys>\n        {showCopy && (\n          <Hotkey\n            group=\"Node Actions\"\n            combo=\"meta + c\"\n            label=\"Duplicate Node(s)\"\n            global={true}\n            onKeyDown={this._onCopy}\n          />\n        )}\n        <Hotkey global combo=\"shift + meta + a\" label=\"Select All\" onKeyDown={this._selectAll} />\n        <Hotkey global combo=\"alt + =\" label=\"Zoom in\" onKeyDown={zoomIn} group=\"View\" />\n        <Hotkey global combo=\"alt + -\" label=\"Zoom out\" onKeyDown={zoomOut} group=\"View\" />\n        <Hotkey global combo=\"alt + 0\" label=\"Zoom reset\" onKeyDown={zoomReset} group=\"View\" />\n        <Hotkey global combo=\"right\" label=\"Pan right\" onKeyDown={this._panR} group=\"View\" />\n        <Hotkey global combo=\"left\" label=\"Pan left\" onKeyDown={this._panL} group=\"View\" />\n        <Hotkey global combo=\"down\" label=\"Pan down\" onKeyDown={this._panD} group=\"View\" />\n        <Hotkey global combo=\"up\" label=\"Pan up\" onKeyDown={this._panU} group=\"View\" />\n      </Hotkeys>\n    );\n  }\n}\n\nconst select = createSelector(\n  [selectedS, selectView],\n  (selected, view) => ({ ...selected, ...view })\n);\nconst dispatch = d => ({\n  selSet: id => d(_selSet(id)),\n  zoomIn: () => d(_zIn()),\n  zoomOut: () => d(_zOut()),\n  zoomReset: () => d(_zReset()),\n  setPan: (pos: Pos) => d(_setPan(pos)),\n  updatePos: (pos: PosMemo) => d(_updatePos(pos)),\n});\n\nexport default connect(\n  select,\n  dispatch\n)(HotkeysTarget(NodeGraph));\n","/* eslint-disable */\nconst toObj = ['gainnode', 'delaynode', 'midiinput', 'midioutput'];\n\n//returns a string \"type\" of input object\nexport function toType(obj) {\n  let type = getType(obj);\n  // some extra disambiguation for numbers\n  if (type === 'number') {\n    if (isNaN(obj)) {\n      type = 'nan';\n    } else if ((obj | 0) != obj) {\n      //bitwise OR produces integers\n      type = 'float';\n    } else {\n      type = 'integer';\n    }\n  }\n  if (toObj.includes(type)) {\n    return 'object';\n  }\n  return type;\n}\n\n//source: http://stackoverflow.com/questions/7390426/better-way-to-get-type-of-a-javascript-variable/7390612#7390612\nfunction getType(obj) {\n  return {}.toString\n    .call(obj)\n    .split(' ')[1]\n    .slice(0, -1)\n    .toLowerCase();\n}\n\n//validation for base-16 themes\nexport function isTheme(theme) {\n  const theme_keys = [\n    'base00',\n    'base01',\n    'base02',\n    'base03',\n    'base04',\n    'base05',\n    'base06',\n    'base07',\n    'base08',\n    'base09',\n    'base0A',\n    'base0B',\n    'base0C',\n    'base0D',\n    'base0E',\n    'base0F',\n  ];\n  if (toType(theme) === 'object') {\n    for (var i = 0; i < theme_keys.length; i++) {\n      if (!(theme_keys[i] in theme)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n","import React from 'react';\nimport DataTypeLabel from './DataTypeLabel';\n\n//theme\nimport Theme from './../../themes/getStyle';\n\nexport default class extends React.PureComponent {\n  render() {\n    const type_name = 'bool';\n    const { props } = this;\n\n    return (\n      <div {...Theme(props.theme, 'boolean')}>\n        <DataTypeLabel type_name={type_name} {...props} />\n        {props.value ? 'true' : 'false'}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport DataTypeLabel from './DataTypeLabel';\n\n//theme\nimport Theme from './../../themes/getStyle';\n\nexport default class extends React.PureComponent {\n  render() {\n    const type_name = 'date';\n    const { props } = this;\n    const display_options = {\n      weekday: 'short',\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    };\n    return (\n      <div {...Theme(props.theme, 'date')}>\n        <DataTypeLabel type_name={type_name} {...props} />\n        <span className=\"date-value\" {...Theme(props.theme, 'date-value')}>\n          {props.value.toLocaleTimeString('en-us', display_options)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport DataTypeLabel from './DataTypeLabel';\n\n//theme\nimport Theme from './../../themes/getStyle';\n\nexport default class extends React.PureComponent {\n  render() {\n    const type_name = 'float';\n    const { props } = this;\n    return (\n      <div {...Theme(props.theme, 'float')}>\n        <DataTypeLabel type_name={type_name} {...props} />\n        {this.props.value}\n      </div>\n    );\n  }\n}\n","import { Dispatcher } from 'flux';\nconst dispatcher = new Dispatcher();\nexport default dispatcher;\n","/* eslint-disable */\nimport { EventEmitter } from 'events';\nimport dispatcher from './../helpers/dispatcher';\nimport { toType } from './../helpers/util';\n\n//store persistent display attributes for objects and arrays\nclass ObjectAttributes extends EventEmitter {\n  objects = {};\n\n  set = (rjvId, name, key, value) => {\n    if (this.objects[rjvId] === undefined) {\n      this.objects[rjvId] = {};\n    }\n    if (this.objects[rjvId][name] === undefined) {\n      this.objects[rjvId][name] = {};\n    }\n    this.objects[rjvId][name][key] = value;\n  };\n\n  get = (rjvId, name, key, default_value) => {\n    if (\n      this.objects[rjvId] === undefined ||\n      this.objects[rjvId][name] === undefined ||\n      this.objects[rjvId][name][key] == undefined\n    ) {\n      return default_value;\n    }\n    return this.objects[rjvId][name][key];\n  };\n\n  handleAction = action => {\n    const { rjvId, data, name } = action;\n    switch (name) {\n      case 'RESET':\n        this.emit('reset-' + rjvId);\n        break;\n      case 'VARIABLE_UPDATED':\n        action.data.updated_src = this.updateSrc(rjvId, data);\n        this.set(rjvId, 'action', 'variable-update', { ...data, type: 'variable-edited' });\n        this.emit('variable-update-' + rjvId);\n        break;\n      case 'VARIABLE_REMOVED':\n        action.data.updated_src = this.updateSrc(rjvId, data);\n        this.set(rjvId, 'action', 'variable-update', { ...data, type: 'variable-removed' });\n        this.emit('variable-update-' + rjvId);\n        break;\n      case 'VARIABLE_ADDED':\n        action.data.updated_src = this.updateSrc(rjvId, data);\n        this.set(rjvId, 'action', 'variable-update', { ...data, type: 'variable-added' });\n        this.emit('variable-update-' + rjvId);\n        break;\n      case 'ADD_VARIABLE_KEY_REQUEST':\n        this.set(rjvId, 'action', 'new-key-request', data);\n        this.emit('add-key-request-' + rjvId);\n        break;\n    }\n  };\n\n  updateSrc = (rjvId, request) => {\n    let { name, namespace, new_value, existing_value, variable_removed } = request;\n\n    namespace.shift();\n\n    //deepy copy src\n    let src = this.get(rjvId, 'global', 'src');\n    //deep copy of src variable\n    let updated_src = this.deepCopy(src, [...namespace]);\n\n    //point at current index\n    let walk = updated_src;\n    for (const idx of namespace) {\n      walk = walk[idx];\n    }\n\n    if (variable_removed) {\n      if (toType(walk) == 'array') {\n        walk.splice(name, 1);\n      } else {\n        delete walk[name];\n      }\n    } else {\n      //update copied variable at specified namespace\n      if (name !== null) {\n        walk[name] = new_value;\n      } else {\n        updated_src = new_value;\n      }\n    }\n\n    this.set(rjvId, 'global', 'src', updated_src);\n\n    return updated_src;\n  };\n\n  deepCopy = (src, copy_namespace) => {\n    const type = toType(src);\n    let result;\n    let idx = copy_namespace.shift();\n    if (type == 'array') {\n      result = [...src];\n    } else if (type == 'object') {\n      result = { ...src };\n    }\n    if (idx !== undefined) {\n      result[idx] = this.deepCopy(src[idx], copy_namespace);\n    }\n    return result;\n  };\n}\n\nconst attributeStore = new ObjectAttributes();\ndispatcher.register(attributeStore.handleAction.bind(attributeStore));\nexport default attributeStore;\n","import React from 'react';\nimport DataTypeLabel from './DataTypeLabel';\n\n//theme\nimport Theme from './../../themes/getStyle';\n\n//attribute store for storing collapsed state\nimport AttributeStore from './../../stores/ObjectAttributes';\n\nexport default class extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: AttributeStore.get(props.rjvId, props.namespace, 'collapsed', true),\n    };\n  }\n\n  toggleCollapsed = () => {\n    this.setState(\n      {\n        collapsed: !this.state.collapsed,\n      },\n      () => {\n        // will be called after setState takes effect.\n        AttributeStore.set(\n          this.props.rjvId,\n          this.props.namespace,\n          'collapsed',\n          this.state.collapsed\n        );\n      }\n    );\n  };\n\n  render() {\n    const type_name = 'function';\n    const { props } = this;\n    const { collapsed } = this.state;\n\n    return (\n      <div {...Theme(props.theme, 'function')}>\n        <DataTypeLabel type_name={type_name} {...props} />\n        <span\n          {...Theme(props.theme, 'function-value')}\n          className=\"rjv-function-container\"\n          onClick={this.toggleCollapsed}>\n          {this.getFunctionDisplay(collapsed)}\n        </span>\n      </div>\n    );\n  }\n\n  getFunctionDisplay = collapsed => {\n    const { props } = this;\n    if (collapsed) {\n      return (\n        <span>\n          {this.props.value\n            .toString()\n            .slice(9, -1)\n            .replace(/\\{[\\s\\S]+/, '')}\n          <span className=\"function-collapsed\" style={{ fontWeight: 'bold' }}>\n            <span>{'{'}</span>\n            <span {...Theme(props.theme, 'ellipsis')}>...</span>\n            <span>{'}'}</span>\n          </span>\n        </span>\n      );\n    } else {\n      return this.props.value.toString().slice(9, -1);\n    }\n  };\n}\n","import React from 'react';\n\n//theme\nimport Theme from './../../themes/getStyle';\n\nexport default class extends React.PureComponent {\n  render() {\n    return <div {...Theme(this.props.theme, 'nan')}>NaN</div>;\n  }\n}\n","import React from 'react';\n\n//theme\nimport Theme from './../../themes/getStyle';\n\nexport default class extends React.PureComponent {\n  render() {\n    return <div {...Theme(this.props.theme, 'null')}>null</div>;\n  }\n}\n","import React from 'react';\nimport DataTypeLabel from './DataTypeLabel';\n\n//theme\nimport Theme from './../../themes/getStyle';\n\nexport default class extends React.PureComponent {\n  render() {\n    const type_name = 'int';\n    const { props } = this;\n    return (\n      <div {...Theme(props.theme, 'integer')}>\n        <DataTypeLabel type_name={type_name} {...props} />\n        {this.props.value}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport DataTypeLabel from './DataTypeLabel';\nimport { toType } from './../../helpers/util';\n\n//theme\nimport Theme from './../../themes/getStyle';\n\n//attribute store for storing collapsed state\nimport AttributeStore from './../../stores/ObjectAttributes';\n\nexport default class extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: AttributeStore.get(props.rjvId, props.namespace, 'collapsed', true),\n    };\n  }\n\n  toggleCollapsed = () => {\n    this.setState(\n      {\n        collapsed: !this.state.collapsed,\n      },\n      () => {\n        AttributeStore.set(\n          this.props.rjvId,\n          this.props.namespace,\n          'collapsed',\n          this.state.collapsed\n        );\n      }\n    );\n  };\n\n  render() {\n    const type_name = 'string';\n    const { props } = this;\n    const { collapseStringsAfterLength, theme, isPrimitive } = props;\n    let { value } = props;\n    let collapsible = toType(collapseStringsAfterLength) === 'integer';\n    let style = { style: { cursor: 'default', whiteSpace: 'pre-wrap' } };\n\n    if (collapsible && value.length > collapseStringsAfterLength && !isPrimitive) {\n      style.style.cursor = 'pointer';\n      if (this.state.collapsed) {\n        value = (\n          <span>\n            {value.substring(0, collapseStringsAfterLength)}\n            <span {...Theme(theme, 'ellipsis')}> ...</span>\n          </span>\n        );\n      }\n    }\n\n    return (\n      <div {...Theme(theme, 'string')}>\n        <DataTypeLabel type_name={type_name} {...props} />\n        <span className=\"string-value\" {...style} onClick={this.toggleCollapsed}>\n          \"{value}\"\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\n//theme\nimport Theme from './../../themes/getStyle';\n\nexport default class extends React.PureComponent {\n  render() {\n    return <div {...Theme(this.props.theme, 'undefined')}>undefined</div>;\n  }\n}\n","export default function parseInput(input) {\n  //following code is to make a best guess at\n  //the type for a variable being submitted.\n\n  //we are working with a serialized data representation\n  input = input.trim();\n  try {\n    input = JSON.stringify(JSON.parse(input));\n    if (input[0] === '[') {\n      //array\n      return formatResponse('array', JSON.parse(input));\n    } else if (input[0] === '{') {\n      //object\n      return formatResponse('object', JSON.parse(input));\n    } else if (input.match(/-?\\d+\\.\\d+/) && input.match(/-?\\d+\\.\\d+/)[0] === input) {\n      //integer\n      return formatResponse('float', parseFloat(input));\n    } else if (input.match(/-?\\d+/) && input.match(/-?\\d+/)[0] === input) {\n      //float\n      return formatResponse('integer', parseInt(input));\n    }\n  } catch (e) {\n    // no-op\n  }\n\n  //run in case input was not serializable\n  input = input.toLowerCase();\n  switch (input) {\n    case 'undefined': {\n      return formatResponse('undefined', undefined);\n    }\n    case 'nan': {\n      return formatResponse('nan', NaN);\n    }\n    case 'infinity': {\n      return formatResponse('infinity', Infinity);\n    }\n    case 'null': {\n      return formatResponse('null', null);\n    }\n    case 'true': {\n      return formatResponse('boolean', true);\n    }\n    case 'false': {\n      return formatResponse('boolean', false);\n    }\n    default: {\n      return formatResponse(false, null);\n    }\n  }\n}\n\nfunction formatResponse(type, value) {\n  return { type: type, value: value };\n}\n","import { toType } from './util';\n\nexport default value => {\n  const type = toType(value);\n  let string_value;\n  switch (type) {\n    case 'undefined': {\n      string_value = 'undefined';\n      break;\n    }\n    case 'nan':\n      string_value = 'NaN';\n      break;\n    case 'string':\n      string_value = value;\n      break;\n    case 'date':\n      string_value = value.toString();\n      break;\n    case 'function':\n      string_value = value.toString();\n      break;\n    case 'regexp':\n      string_value = value.toString();\n      break;\n    default: {\n      try {\n        string_value = JSON.stringify(value, null, '  ');\n      } catch (e) {\n        string_value = '';\n      }\n    }\n  }\n\n  return string_value;\n};\n","import React from 'react';\n\nconst DEFAULT_COLOR = '#000000';\n\nexport class CircleMinus extends React.PureComponent {\n  render() {\n    const { props } = this;\n    const { style, ...rest } = props;\n\n    return (\n      <span {...rest}>\n        <svg\n          {...getIconStyle(style)}\n          viewBox=\"0 0 24 24\"\n          fill=\"currentColor\"\n          preserveAspectRatio=\"xMidYMid meet\">\n          <path d=\"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M7,13H17V11H7\" />\n        </svg>\n      </span>\n    );\n  }\n}\n\nexport class CirclePlus extends React.PureComponent {\n  render() {\n    const { props } = this;\n    const { style, ...rest } = props;\n\n    return (\n      <span {...rest}>\n        <svg\n          {...getIconStyle(style)}\n          viewBox=\"0 0 24 24\"\n          fill=\"currentColor\"\n          preserveAspectRatio=\"xMidYMid meet\">\n          <path d=\"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M13,7H11V11H7V13H11V17H13V13H17V11H13V7Z\" />\n        </svg>\n      </span>\n    );\n  }\n}\n\nexport class SquareMinus extends React.PureComponent {\n  render() {\n    const { props } = this;\n    const { style, ...rest } = props;\n    const svgStyle = getIconStyle(style).style;\n\n    return (\n      <span {...rest}>\n        <svg\n          fill={svgStyle.color}\n          width={svgStyle.height}\n          height={svgStyle.width}\n          style={svgStyle}\n          viewBox=\"0 0 1792 1792\">\n          <path d=\"M1344 800v64q0 14-9 23t-23 9h-832q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h832q14 0 23 9t9 23zm128 448v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zm128-832v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z\" />\n        </svg>\n      </span>\n    );\n  }\n}\n\nexport class SquarePlus extends React.PureComponent {\n  render() {\n    const { props } = this;\n    const { style, ...rest } = props;\n    const svgStyle = getIconStyle(style).style;\n\n    return (\n      <span {...rest}>\n        <svg\n          fill={svgStyle.color}\n          width={svgStyle.height}\n          height={svgStyle.width}\n          style={svgStyle}\n          viewBox=\"0 0 1792 1792\">\n          <path d=\"M1344 800v64q0 14-9 23t-23 9h-352v352q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-352h-352q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h352v-352q0-14 9-23t23-9h64q14 0 23 9t9 23v352h352q14 0 23 9t9 23zm128 448v-832q0-66-47-113t-113-47h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113zm128-832v832q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z\" />\n        </svg>\n      </span>\n    );\n  }\n}\n\nexport class ArrowRight extends React.PureComponent {\n  render() {\n    const { props } = this;\n    const { style, ...rest } = props;\n\n    return (\n      <span {...rest}>\n        <svg\n          style={{ ...getIconStyle(style).style, paddingLeft: '2px', verticalAlign: 'top' }}\n          viewBox=\"0 0 15 15\"\n          fill=\"currentColor\">\n          <path d=\"M0 14l6-6-6-6z\" />\n        </svg>\n      </span>\n    );\n  }\n}\n\nexport class ArrowDown extends React.PureComponent {\n  render() {\n    const { props } = this;\n    const { style, ...rest } = props;\n\n    return (\n      <span {...rest}>\n        <svg\n          style={{ ...getIconStyle(style).style, paddingLeft: '2px', verticalAlign: 'top' }}\n          viewBox=\"0 0 15 15\"\n          fill=\"currentColor\">\n          <path d=\"M0 5l6 6 6-6z\" />\n        </svg>\n      </span>\n    );\n  }\n}\n\nexport class Clippy extends React.PureComponent {\n  render() {\n    const { props } = this;\n    const { style, ...rest } = props;\n\n    return (\n      <span {...rest}>\n        <svg\n          {...getIconStyle(style)}\n          viewBox=\"0 0 40 40\"\n          fill=\"currentColor\"\n          preserveAspectRatio=\"xMidYMid meet\">\n          <g>\n            <path d=\"m30 35h-25v-22.5h25v7.5h2.5v-12.5c0-1.4-1.1-2.5-2.5-2.5h-7.5c0-2.8-2.2-5-5-5s-5 2.2-5 5h-7.5c-1.4 0-2.5 1.1-2.5 2.5v27.5c0 1.4 1.1 2.5 2.5 2.5h25c1.4 0 2.5-1.1 2.5-2.5v-5h-2.5v5z m-20-27.5h2.5s2.5-1.1 2.5-2.5 1.1-2.5 2.5-2.5 2.5 1.1 2.5 2.5 1.3 2.5 2.5 2.5h2.5s2.5 1.1 2.5 2.5h-20c0-1.5 1.1-2.5 2.5-2.5z m-2.5 20h5v-2.5h-5v2.5z m17.5-5v-5l-10 7.5 10 7.5v-5h12.5v-5h-12.5z m-17.5 10h7.5v-2.5h-7.5v2.5z m12.5-17.5h-12.5v2.5h12.5v-2.5z m-7.5 5h-5v2.5h5v-2.5z\" />\n          </g>\n        </svg>\n      </span>\n    );\n  }\n}\n\nexport class RemoveCircle extends React.PureComponent {\n  render() {\n    const { props } = this;\n    const { style, ...rest } = props;\n\n    return (\n      <span {...rest}>\n        <i className=\"fa fa-remove attr-indicator\" />\n      </span>\n    );\n  }\n}\n\nexport class AddCircle extends React.PureComponent {\n  render() {\n    const { props } = this;\n    const { style, ...rest } = props;\n\n    return (\n      <span {...rest}>\n        <svg\n          {...getIconStyle(style)}\n          viewBox=\"0 0 40 40\"\n          fill=\"currentColor\"\n          preserveAspectRatio=\"xMidYMid meet\">\n          <g>\n            <path d=\"m30.1 21.4v-2.8q0-0.6-0.4-1t-1-0.5h-5.7v-5.7q0-0.6-0.4-1t-1-0.4h-2.9q-0.6 0-1 0.4t-0.4 1v5.7h-5.7q-0.6 0-1 0.5t-0.5 1v2.8q0 0.6 0.5 1t1 0.5h5.7v5.7q0 0.5 0.4 1t1 0.4h2.9q0.6 0 1-0.4t0.4-1v-5.7h5.7q0.6 0 1-0.5t0.4-1z m7.2-1.4q0 4.7-2.3 8.6t-6.3 6.2-8.6 2.3-8.6-2.3-6.2-6.2-2.3-8.6 2.3-8.6 6.2-6.2 8.6-2.3 8.6 2.3 6.3 6.2 2.3 8.6z\" />\n          </g>\n        </svg>\n      </span>\n    );\n  }\n}\n\nexport class Add extends React.PureComponent {\n  render() {\n    const { props } = this;\n    const { style, ...rest } = props;\n\n    return (\n      <span {...rest}>\n        <svg\n          {...getIconStyle(style)}\n          viewBox=\"0 0 40 40\"\n          fill=\"currentColor\"\n          preserveAspectRatio=\"xMidYMid meet\">\n          <g>\n            <path d=\"m31.6 21.6h-10v10h-3.2v-10h-10v-3.2h10v-10h3.2v10h10v3.2z\" />\n          </g>\n        </svg>\n      </span>\n    );\n  }\n}\n\nexport class Edit extends React.PureComponent {\n  render() {\n    const { props } = this;\n    const { style, ...rest } = props;\n    return (\n      <span {...rest}>\n        <i className=\"fa fa-edit attr-indicator\" />\n      </span>\n    );\n  }\n}\n\nexport class CheckCircle extends React.PureComponent {\n  render() {\n    const { props } = this;\n    const { style, ...rest } = props;\n\n    return (\n      <span {...rest}>\n        <i className=\"fa fa-check attr-indicator\" />\n      </span>\n    );\n  }\n}\n\nfunction getIconStyle(style) {\n  if (!style) {\n    style = {};\n  }\n  return {\n    style: {\n      verticalAlign: 'middle',\n      ...style,\n      color: style.color ? style.color : DEFAULT_COLOR,\n      height: '1em',\n      width: '1em',\n    },\n  };\n}\n","/* eslint-disable */\nimport React from 'react';\nimport AutosizeTextarea from 'react-textarea-autosize';\n\nimport dispatcher from './../helpers/dispatcher';\nimport parseInput from './../helpers/parseInput';\nimport stringifyVariable from './../helpers/stringifyVariable';\n\n//data type components\nimport {\n  JsonBoolean,\n  JsonDate,\n  JsonFloat,\n  JsonFunction,\n  JsonInteger,\n  JsonNan,\n  JsonNull,\n  JsonRegexp,\n  JsonString,\n  JsonUndefined,\n} from './DataTypes/DataTypes';\n\nimport { Edit, CheckCircle, RemoveCircle as Remove } from './icons';\n\n//theme\nimport Theme from './../themes/getStyle';\nimport { Hotkey, Hotkeys, HotkeysTarget } from '@blueprintjs/core';\n\nclass VariableEditor extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editMode: false,\n      editValue: '',\n      renameKey: false,\n      parsedInput: {\n        type: false,\n        value: null,\n      },\n    };\n  }\n\n  renderHotkeys() {\n    if (!this.props.editOnHotkey) {\n      return <Hotkeys />;\n    }\n    return (\n      <Hotkeys>\n        <Hotkey\n          group=\"Node Actions\"\n          global={true}\n          combo=\"meta + i\"\n          label=\"Edit\"\n          onKeyDown={() => this.prepopInput(this.props.variable)}\n        />\n      </Hotkeys>\n    );\n  }\n\n  renderKey = () => {\n    const { type, isPrimitive, variable, theme, namespace } = this.props;\n    if (isPrimitive) return null;\n    return type === 'array' ? (\n      <span {...Theme(theme, 'array-key')} key={variable.name + '_' + namespace}>\n        {variable.name}\n        <div {...Theme(theme, 'colon')}>:</div>\n      </span>\n    ) : (\n      <span>\n        <span\n          {...Theme(theme, 'object-name')}\n          className=\"object-key\"\n          key={variable.name + '_' + namespace}\n        >\n          <span style={{ display: 'inline-block' }}>{variable.name}</span>\n        </span>\n        <span {...Theme(theme, 'colon')}>:</span>\n      </span>\n    );\n  };\n\n  render() {\n    const {\n      variable,\n      singleIndent,\n      theme,\n      namespace,\n      indentWidth,\n      onEdit,\n      onDelete,\n      onSelect,\n      isPrimitive,\n    } = this.props;\n    const { editMode } = this.state;\n\n    const overrideStyle = isPrimitive\n      ? { paddingLeft: 0, borderLeft: 'none' }\n      : { paddingLeft: indentWidth * singleIndent };\n    return (\n      <div\n        {...Theme(theme, 'objectKeyVal', overrideStyle)}\n        className=\"variable-row\"\n        key={variable.name}\n      >\n        {this.renderKey()}\n        <div\n          className=\"variable-value\"\n          onClick={\n            onSelect === false && onEdit === false\n              ? null\n              : e => {\n                  let location = [...namespace];\n                  if ((e.ctrlKey || e.metaKey) && onEdit !== false) {\n                    this.prepopInput(variable);\n                  } else if (onSelect !== false) {\n                    location.shift();\n                    onSelect({\n                      ...variable,\n                      namespace: location,\n                    });\n                  }\n                }\n          }\n          {...Theme(theme, 'variableValue', {\n            cursor: onSelect === false ? 'default' : 'pointer',\n          })}\n        >\n          {this.getValue(variable, editMode)}\n        </div>\n        {onEdit !== false && editMode === false ? this.getEditIcon() : null}\n        {onDelete !== false && editMode === false ? this.getRemoveIcon() : null}\n      </div>\n    );\n  }\n\n  getEditIcon = () => {\n    const { variable, theme } = this.props;\n\n    return (\n      <span className=\"click-to-edit\" style={{ verticalAlign: 'middle' }}>\n        <Edit\n          className=\"click-to-edit-icon\"\n          {...Theme(theme, 'editVarIcon')}\n          onClick={() => {\n            this.prepopInput(variable);\n          }}\n        />\n      </span>\n    );\n  };\n\n  prepopInput = variable => {\n    if (this.props.onEdit !== false) {\n      const stringifiedValue = stringifyVariable(variable.value);\n      const detected = parseInput(stringifiedValue);\n      this.setState({\n        editMode: true,\n        editValue: stringifiedValue,\n        parsedInput: {\n          type: detected.type,\n          value: detected.value,\n        },\n      });\n    }\n  };\n\n  getRemoveIcon = () => {\n    const { variable, namespace, theme, rjvId } = this.props;\n\n    return (\n      <div className=\"click-to-remove\" style={{ verticalAlign: 'top' }}>\n        <Remove\n          className=\"click-to-remove-icon\"\n          {...Theme(theme, 'removeVarIcon')}\n          onClick={() => {\n            dispatcher.dispatch({\n              name: 'VARIABLE_REMOVED',\n              rjvId: rjvId,\n              data: {\n                name: variable.name,\n                namespace: namespace,\n                existing_value: variable.value,\n                variable_removed: true,\n              },\n            });\n          }}\n        />\n      </div>\n    );\n  };\n\n  getValue = (variable, editMode) => {\n    const type = editMode ? false : variable.type;\n    const { props } = this;\n    switch (type) {\n      case false:\n        return this.getEditInput();\n      case 'string':\n        return <JsonString value={variable.value} {...props} />;\n      case 'integer':\n        return <JsonInteger value={variable.value} {...props} />;\n      case 'float':\n        return <JsonFloat value={variable.value} {...props} />;\n      case 'boolean':\n        return <JsonBoolean value={variable.value} {...props} />;\n      case 'function':\n        return <JsonFunction value={variable.value} {...props} />;\n      case 'null':\n        return <JsonNull {...props} />;\n      case 'nan':\n        return <JsonNan {...props} />;\n      case 'undefined':\n        return <JsonUndefined {...props} />;\n      case 'date':\n        return <JsonDate value={variable.value} {...props} />;\n      case 'regexp':\n        return <JsonRegexp value={variable.value} {...props} />;\n      default:\n        // catch-all for types that weren't anticipated\n        return <div className=\"object-value\">{JSON.stringify(variable.value)}</div>;\n    }\n  };\n\n  getEditInput = () => {\n    const { theme } = this.props;\n    const { editValue } = this.state;\n\n    return (\n      <div style={{ display: 'flex', alignItems: 'center', width: '100%' }}>\n        <AutosizeTextarea\n          type=\"text\"\n          inputRef={input => input && input.focus()}\n          value={editValue}\n          className=\"variable-editor\"\n          onChange={event => {\n            const value = event.target.value;\n            const detected = parseInput(value);\n            this.setState({\n              editValue: value,\n              parsedInput: {\n                type: detected.type,\n                value: detected.value,\n              },\n            });\n          }}\n          onKeyDown={e => {\n            switch (e.key) {\n              case 'Escape': {\n                this.setState({\n                  editMode: false,\n                  editValue: '',\n                });\n                break;\n              }\n              case 'Enter': {\n                if (e.ctrlKey || e.metaKey) {\n                  this.submitEdit(true);\n                }\n                break;\n              }\n            }\n            e.stopPropagation();\n          }}\n          placeholder=\"edit...\"\n          {...Theme(theme, 'edit-input')}\n        />\n        <div {...Theme(theme, 'edit-icon-container')}>\n          <div>\n            <Remove\n              className=\"edit-cancel\"\n              {...Theme(theme, 'cancel-icon')}\n              onClick={() => {\n                this.setState({ editMode: false, editValue: '' });\n              }}\n            />\n          </div>\n          <div>\n            <CheckCircle\n              className=\"edit-check string-value\"\n              {...Theme(theme, 'check-icon')}\n              onClick={() => this.submitEdit(true)}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  submitEdit = submit_detected => {\n    const { variable, namespace, rjvId } = this.props;\n    const { editValue, parsedInput } = this.state;\n    let new_value = editValue;\n    if (submit_detected && parsedInput.type) {\n      new_value = parsedInput.value;\n    }\n    this.setState({\n      editMode: false,\n    });\n    dispatcher.dispatch({\n      name: 'VARIABLE_UPDATED',\n      rjvId: rjvId,\n      data: {\n        name: variable.name,\n        namespace: namespace,\n        existing_value: variable.value,\n        new_value: new_value,\n        variable_removed: false,\n      },\n    });\n  };\n\n  getDetectedInput = () => {\n    const { parsedInput } = this.state;\n    const { type, value } = parsedInput;\n    const { props } = this;\n    const { theme } = props;\n\n    if (type !== false) {\n      switch (type.toLowerCase()) {\n        case 'object':\n          return (\n            <span>\n              <span\n                style={{\n                  ...Theme(theme, 'brace').style,\n                  cursor: 'default',\n                }}\n              >\n                {'{'}\n              </span>\n              <span\n                style={{\n                  ...Theme(theme, 'ellipsis').style,\n                  cursor: 'default',\n                }}\n              >\n                ...\n              </span>\n              <span\n                style={{\n                  ...Theme(theme, 'brace').style,\n                  cursor: 'default',\n                }}\n              >\n                {'}'}\n              </span>\n            </span>\n          );\n        case 'array':\n          return (\n            <span>\n              <span\n                style={{\n                  ...Theme(theme, 'brace').style,\n                  cursor: 'default',\n                }}\n              >\n                {'['}\n              </span>\n              <span\n                style={{\n                  ...Theme(theme, 'ellipsis').style,\n                  cursor: 'default',\n                }}\n              >\n                ...\n              </span>\n              <span\n                style={{\n                  ...Theme(theme, 'brace').style,\n                  cursor: 'default',\n                }}\n              >\n                {']'}\n              </span>\n            </span>\n          );\n        case 'string':\n          return <JsonString value={value} {...props} />;\n        case 'integer':\n          return <JsonInteger value={value} {...props} />;\n        case 'float':\n          return <JsonFloat value={value} {...props} />;\n        case 'boolean':\n          return <JsonBoolean value={value} {...props} />;\n        case 'function':\n          return <JsonFunction value={value} {...props} />;\n        case 'null':\n          return <JsonNull {...props} />;\n        case 'nan':\n          return <JsonNan {...props} />;\n        case 'undefined':\n          return <JsonUndefined {...props} />;\n        case 'date':\n          return <JsonDate value={new Date(value)} {...props} />;\n      }\n    }\n  };\n}\n\nexport default HotkeysTarget(VariableEditor);\n","/* eslint-disable */\nimport React from 'react';\n\nimport { toType } from './../helpers/util';\n\n//clibboard icon\nimport { Clippy } from './icons';\n\n//theme\nimport Theme from './../themes/getStyle';\n\nexport default class extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copied: false,\n    };\n  }\n\n  copiedTimer = null;\n\n  componentWillUnmount() {\n    if (this.copiedTimer) {\n      clearTimeout(this.copiedTimer);\n      this.copiedTimer = null;\n    }\n  }\n\n  handleCopy = () => {\n    const container = document.createElement('textarea');\n    const { clickCallback, src, namespace } = this.props;\n\n    container.innerHTML = JSON.stringify(this.clipboardValue(src), null, '  ');\n\n    document.body.appendChild(container);\n    container.select();\n    document.execCommand('copy');\n\n    document.body.removeChild(container);\n\n    this.copiedTimer = setTimeout(() => {\n      this.setState({\n        copied: false,\n      });\n    }, 5500);\n\n    this.setState({ copied: true }, () => {\n      if (typeof clickCallback !== 'function') {\n        return;\n      }\n\n      clickCallback({\n        src: src,\n        namespace: namespace,\n        name: namespace[namespace.length - 1],\n      });\n    });\n  };\n\n  getClippyIcon = () => {\n    const { theme } = this.props;\n\n    if (this.state.copied) {\n      return (\n        <span>\n          <Clippy className=\"copy-icon\" {...Theme(theme, 'copy-icon')} />\n          <span {...Theme(theme, 'copy-icon-copied')}>✔</span>\n        </span>\n      );\n    }\n\n    return <Clippy className=\"copy-icon\" {...Theme(theme, 'copy-icon')} />;\n  };\n\n  clipboardValue = value => {\n    const type = toType(value);\n    switch (type) {\n      case 'function':\n      case 'regexp':\n        return value.toString();\n      default:\n        return value;\n    }\n  };\n\n  render() {\n    const { src, theme, hidden } = this.props;\n    let style = Theme(theme, 'copy-to-clipboard').style;\n    let display = 'inline';\n\n    if (hidden) {\n      display = 'none';\n    }\n\n    return (\n      <span className=\"copy-to-clipboard-container\" title=\"Copy to clipboard\">\n        <span\n          style={{\n            ...style,\n            display: display,\n          }}\n          onClick={this.handleCopy}\n        >\n          {this.getClippyIcon()}\n        </span>\n      </span>\n    );\n  }\n}\n","/* eslint-disable */\nimport React from 'react';\nimport dispatcher from './../helpers/dispatcher';\n\nimport CopyToClipboard from './CopyToClipboard';\nimport { toType } from './../helpers/util';\n\n//icons\nimport { RemoveCircle as Remove, AddCircle as Add } from './icons';\n\n//theme\nimport Theme from './../themes/getStyle';\n\nexport default class extends React.PureComponent {\n  getObjectSize = () => {\n    const { size, theme, displayObjectSize } = this.props;\n    if (displayObjectSize) {\n      return (\n        <span className=\"object-size\" {...Theme(theme, 'object-size')}>\n          {size} item\n          {size === 1 ? '' : 's'}\n        </span>\n      );\n    }\n  };\n\n  getAddAttribute = () => {\n    const { theme, namespace, name, src, rjvId, depth } = this.props;\n\n    return (\n      <span className=\"click-to-add\" style={{ verticalAlign: 'top' }}>\n        <Add\n          className=\"click-to-add-icon\"\n          {...Theme(theme, 'addVarIcon')}\n          onClick={() => {\n            const request = {\n              name: depth > 0 ? name : null,\n              namespace: namespace.splice(0, namespace.length - 1),\n              existing_value: src,\n              variable_removed: false,\n              key_name: null,\n            };\n            if (toType(src) === 'object') {\n              dispatcher.dispatch({\n                name: 'ADD_VARIABLE_KEY_REQUEST',\n                rjvId: rjvId,\n                data: request,\n              });\n            } else {\n              dispatcher.dispatch({\n                name: 'VARIABLE_ADDED',\n                rjvId: rjvId,\n                data: {\n                  ...request,\n                  new_value: [...src, null],\n                },\n              });\n            }\n          }}\n        />\n      </span>\n    );\n  };\n\n  getRemoveObject = () => {\n    const { theme, hover, namespace, name, src, rjvId } = this.props;\n\n    //don't allow deleting of root node\n    if (namespace.length === 1) {\n      return;\n    }\n    return (\n      <span className=\"click-to-remove\">\n        <Remove\n          className=\"click-to-remove-icon\"\n          {...Theme(theme, 'removeVarIcon')}\n          onClick={() => {\n            dispatcher.dispatch({\n              name: 'VARIABLE_REMOVED',\n              rjvId: rjvId,\n              data: {\n                name: name,\n                namespace: namespace.splice(0, namespace.length - 1),\n                existing_value: src,\n                variable_removed: true,\n              },\n            });\n          }}\n        />\n      </span>\n    );\n  };\n\n  render = () => {\n    const { theme, onDelete, onAdd, enableClipboard, src, namespace } = this.props;\n    return (\n      <div\n        {...Theme(theme, 'object-meta-data')}\n        className=\"object-meta-data\"\n        onClick={e => {\n          e.stopPropagation();\n        }}\n      >\n        {/* size badge display */}\n        {this.getObjectSize()}\n        {/* copy to clipboard icon */}\n        {enableClipboard ? (\n          <CopyToClipboard clickCallback={enableClipboard} {...{ src, theme, namespace }} />\n        ) : null}\n        {/* copy add/remove icons */}\n        {onAdd !== false ? this.getAddAttribute() : null}\n        {onDelete !== false ? this.getRemoveObject() : null}\n      </div>\n    );\n  };\n}\n","/* eslint-disable */\nimport React from 'react';\nimport Theme from './../themes/getStyle';\n\nexport default function getObjectName(props) {\n  const { parent_type, namespace, theme, jsvRoot, name } = props;\n\n  const display_name = props.name ? props.name : '';\n\n  if (jsvRoot && (name === false || name === null)) {\n    return <span />;\n  } else if (parent_type == 'array') {\n    return (\n      <span {...Theme(theme, 'array-key')} key={namespace}>\n        <span className=\"array-key\">{display_name}</span>\n        <span {...Theme(theme, 'colon')}>:</span>\n      </span>\n    );\n  } else {\n    return (\n      <span {...Theme(theme, 'object-name')} key={namespace}>\n        <span className=\"object-key\">\n          <span>{display_name}</span>\n        </span>\n        <span {...Theme(theme, 'colon')}>:</span>\n      </span>\n    );\n  }\n}\n","import React from 'react';\nimport Theme from './../themes/getStyle';\n\nimport { CircleMinus, CirclePlus, SquareMinus, SquarePlus, ArrowRight, ArrowDown } from './icons';\n\nexport function ExpandedIcon(props) {\n  const { theme, iconStyle } = props;\n  switch (iconStyle) {\n    case 'triangle':\n      return <ArrowDown {...Theme(theme, 'expanded-icon')} className=\"expanded-icon\" />;\n    case 'square':\n      return <SquareMinus {...Theme(theme, 'expanded-icon')} className=\"expanded-icon\" />;\n    default:\n      return <CircleMinus {...Theme(theme, 'expanded-icon')} className=\"expanded-icon\" />;\n  }\n}\n\nexport function CollapsedIcon(props) {\n  const { theme, iconStyle } = props;\n  switch (iconStyle) {\n    case 'triangle':\n      return <ArrowRight {...Theme(theme, 'collapsed-icon')} className=\"collapsed-icon\" />;\n    case 'square':\n      return <SquarePlus {...Theme(theme, 'collapsed-icon')} className=\"collapsed-icon\" />;\n    default:\n      return <CirclePlus {...Theme(theme, 'collapsed-icon')} className=\"collapsed-icon\" />;\n  }\n}\n","/* eslint-disable */\nimport React from 'react';\nimport Theme from './../themes/getStyle';\n\nimport VariableMeta from './VariableMeta';\nimport ObjectName from './ObjectName';\nimport ObjectComponent from './DataTypes/Object';\n\n//icons\nimport { CollapsedIcon, ExpandedIcon } from './ToggleIcons';\n\n//single indent is 5px\nconst SINGLE_INDENT = 5;\n\nexport default class extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expanded: [],\n    };\n  }\n\n  toggleCollapsed = i => {\n    const newExpanded = [];\n    for (const j in this.state.expanded) {\n      newExpanded.push(this.state.expanded[j]);\n    }\n    newExpanded[i] = !newExpanded[i];\n    this.setState({\n      expanded: newExpanded,\n    });\n  };\n\n  getExpandedIcon(i) {\n    const { theme, iconStyle } = this.props;\n\n    if (this.state.expanded[i]) {\n      return <ExpandedIcon {...{ theme, iconStyle }} />;\n    }\n\n    return <CollapsedIcon {...{ theme, iconStyle }} />;\n  }\n\n  render() {\n    const {\n      src,\n      groupArraysAfterLength,\n      depth,\n      name,\n      theme,\n      jsvRoot,\n      namespace,\n      parent_type,\n      ...rest\n    } = this.props;\n\n    let expanded_icon,\n      object_padding_left = 0;\n\n    const array_group_padding_left = this.props.indentWidth * SINGLE_INDENT;\n\n    if (!jsvRoot) {\n      object_padding_left = this.props.indentWidth * SINGLE_INDENT;\n    }\n\n    const size = groupArraysAfterLength;\n    const groups = Math.ceil(src.length / size);\n\n    return (\n      <div\n        className=\"object-key-val\"\n        {...Theme(theme, jsvRoot ? 'jsv-root' : 'objectKeyVal', {\n          paddingLeft: object_padding_left,\n        })}>\n        <ObjectName {...this.props} />\n\n        <span>\n          <VariableMeta size={src.length} {...this.props} />\n        </span>\n        {[...Array(groups)].map((_, i) => (\n          <div\n            key={i}\n            className=\"object-key-val array-group\"\n            {...Theme(theme, 'objectKeyVal', {\n              marginLeft: 6,\n              paddingLeft: array_group_padding_left,\n            })}>\n            <span {...Theme(theme, 'brace-row')}>\n              <div\n                className=\"icon-container\"\n                {...Theme(theme, 'icon-container')}\n                onClick={e => {\n                  this.toggleCollapsed(i);\n                }}>\n                {this.getExpandedIcon(i)}\n              </div>\n              {this.state.expanded[i] ? (\n                <ObjectComponent\n                  key={name + i}\n                  depth={0}\n                  name={false}\n                  collapsed={false}\n                  groupArraysAfterLength={size}\n                  index_offset={i * size}\n                  src={src.slice(i * size, i * size + size)}\n                  namespace={namespace}\n                  type=\"array\"\n                  parent_type=\"array_group\"\n                  theme={theme}\n                  {...rest}\n                />\n              ) : (\n                <span\n                  {...Theme(theme, 'brace')}\n                  onClick={e => {\n                    this.toggleCollapsed(i);\n                  }}\n                  className=\"array-group-brace\">\n                  [\n                  <div {...Theme(theme, 'array-group-meta-data')} className=\"array-group-meta-data\">\n                    <span className=\"object-size\" {...Theme(theme, 'object-size')}>\n                      {i * size}\n                      {' - '}\n                      {i * size + size > src.length ? src.length : i * size + size}\n                    </span>\n                  </div>\n                  ]\n                </span>\n              )}\n            </span>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { toType } from './../../helpers/util';\n//data type components\nimport { JsonObject } from './DataTypes';\n\nimport VariableEditor from './../VariableEditor';\nimport VariableMeta from './../VariableMeta';\nimport ArrayGroup from './../ArrayGroup';\nimport ObjectName from './../ObjectName';\n//attribute store\n//icons\nimport { CollapsedIcon, ExpandedIcon } from './../ToggleIcons';\n//theme\nimport Theme from './../../themes/getStyle';\nimport AttributeStore from 'vendor/JsonTree/js/stores/ObjectAttributes';\n\n//increment 1 with each nested object & array\nconst DEPTH_INCREMENT = 1;\n//single indent is 5px\nconst SINGLE_INDENT = 5;\n\nclass RjvObject extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const state = RjvObject.getState(props);\n    this.state = {\n      ...state,\n      prevProps: {},\n    };\n  }\n\n  static getState = props => {\n    const size = Object.keys(props.src).length;\n    const expanded =\n      size < 5 &&\n      (props.collapsed === false || (props.collapsed !== true && props.collapsed > props.depth)) &&\n      (!props.shouldCollapse ||\n        props.shouldCollapse({\n          name: props.name,\n          src: props.src,\n          type: toType(props.src),\n          namespace: props.namespace,\n        }) === false) &&\n      //initialize closed if object has no items\n      size !== 0;\n    return {\n      expanded: AttributeStore.get(props.rjvId, props.namespace, 'expanded', expanded),\n      object_type: props.type === 'array' ? 'array' : 'object',\n      parent_type: props.type === 'array' ? 'array' : 'object',\n      size,\n    };\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { prevProps } = prevState;\n    if (\n      nextProps.src !== prevProps.src ||\n      nextProps.collapsed !== prevProps.collapsed ||\n      nextProps.name !== prevProps.name ||\n      nextProps.namespace !== prevProps.namespace ||\n      nextProps.rjvId !== prevProps.rjvId\n    ) {\n      const newState = RjvObject.getState(nextProps);\n      return {\n        ...newState,\n        prevProps: nextProps,\n      };\n    }\n    return null;\n  }\n\n  toggleCollapsed = () => {\n    this.setState(\n      {\n        expanded: !this.state.expanded,\n      },\n      () => {\n        AttributeStore.set(this.props.rjvId, this.props.namespace, 'expanded', this.state.expanded);\n      }\n    );\n  };\n\n  getObjectContent = (depth, src, props) => {\n    const overrideStyle = props.isPrimitive ? { marginLeft: 0 } : {};\n    return (\n      <div className=\"pushed-content object-container\">\n        <div\n          className=\"object-content\"\n          {...Theme(this.props.theme, 'pushed-content', overrideStyle)}>\n          {this.renderObjectContents(src, props)}\n        </div>\n      </div>\n    );\n  };\n\n  getEllipsis = () => {\n    const { size } = this.state;\n\n    if (size === 0) {\n      return null;\n    } else {\n      return (\n        <div\n          {...Theme(this.props.theme, 'ellipsis')}\n          className=\"node-ellipsis\"\n          onClick={this.toggleCollapsed}>\n          ...\n        </div>\n      );\n    }\n  };\n\n  getObjectMetaData = () => {\n    const { size } = this.state;\n    return <VariableMeta size={size} {...this.props} />;\n  };\n\n  getBraceStart(object_type, expanded) {\n    const { attrType, theme, iconStyle, parent_type } = this.props;\n\n    if (parent_type === 'array_group') {\n      return (\n        <span>\n          <span {...Theme(theme, 'brace')}>{object_type === 'array' ? '[' : '{'}</span>\n          {expanded ? this.getObjectMetaData() : null}\n        </span>\n      );\n    }\n\n    if (attrType.type === 'primitive') {\n      return null;\n    }\n    const IconComponent = expanded ? ExpandedIcon : CollapsedIcon;\n\n    return (\n      <span>\n        <span onClick={this.toggleCollapsed} {...Theme(theme, 'brace-row')}>\n          <div className=\"icon-container\" {...Theme(theme, 'icon-container')}>\n            <IconComponent {...{ theme, iconStyle }} />\n          </div>\n          <ObjectName {...this.props} />\n          <span {...Theme(theme, 'brace')}>{object_type === 'array' ? '[' : '{'}</span>\n        </span>\n        {expanded ? this.getObjectMetaData() : null}\n      </span>\n    );\n  }\n\n  getBraceEnd = () => {\n    const { theme, attrType } = this.props;\n    const { object_type, expanded } = this.state;\n    if (attrType.type === 'primitive') {\n      return null;\n    }\n    return (\n      <span className=\"brace-row\">\n        <span\n          style={{\n            ...Theme(theme, 'brace').style,\n            paddingLeft: expanded ? '3px' : '0px',\n          }}>\n          {object_type === 'array' ? ']' : '}'}\n        </span>\n        {expanded ? null : this.getObjectMetaData()}\n      </span>\n    );\n  };\n\n  render() {\n    const {\n      depth,\n      src,\n      namespace,\n      name,\n      type,\n      parent_type,\n      theme,\n      jsvRoot,\n      iconStyle,\n      ...rest\n    } = this.props;\n\n    const { object_type, expanded } = this.state;\n\n    let styles = {};\n    if (!jsvRoot && parent_type !== 'array_group') {\n      styles.paddingLeft = this.props.indentWidth * SINGLE_INDENT;\n    } else if (parent_type === 'array_group') {\n      styles.borderLeft = 0;\n      styles.display = 'inline';\n    }\n\n    return (\n      <div\n        className=\"object-key-val\"\n        {...Theme(theme, jsvRoot ? 'jsv-root' : 'objectKeyVal', styles)}>\n        {this.getBraceStart(object_type, expanded)}\n        {expanded\n          ? this.getObjectContent(depth, src, {\n              theme,\n              iconStyle,\n              ...rest,\n            })\n          : this.getEllipsis()}\n        {this.getBraceEnd()}\n      </div>\n    );\n  }\n\n  renderObjectContents = (variables, props) => {\n    const {\n      depth,\n      parent_type,\n      index_offset,\n      groupArraysAfterLength,\n      namespace,\n      rejectMatching,\n    } = this.props;\n    const { object_type } = this.state;\n    let elements = [],\n      variable;\n    let keys = Object.keys(variables || {});\n    if (this.props.sortKeys) {\n      keys = keys.sort();\n    }\n    keys.forEach((name, i) => {\n      variable = new JsonVariable(name, variables[name]);\n      if (parent_type === 'array_group' && index_offset) {\n        variable.name = parseInt(variable.name) + index_offset;\n      }\n      if (!variables.hasOwnProperty(name)) {\n        return null;\n      } else if (rejectMatching && name.match(rejectMatching)) {\n        return null;\n      } else if (variable.type === 'object') {\n        elements.push(\n          <JsonObject\n            key={variable.name}\n            depth={depth + DEPTH_INCREMENT}\n            name={variable.name}\n            src={variable.value}\n            namespace={namespace.concat(variable.name)}\n            parent_type={object_type}\n            {...props}\n            editOnHotkey={false}\n          />\n        );\n      } else if (variable.type === 'array') {\n        let ObjectComponent = JsonObject;\n        if (groupArraysAfterLength && variable.value.length > groupArraysAfterLength) {\n          ObjectComponent = ArrayGroup;\n        }\n        elements.push(\n          <ObjectComponent\n            key={variable.name}\n            depth={depth + DEPTH_INCREMENT}\n            name={variable.name}\n            src={variable.value}\n            namespace={namespace.concat(variable.name)}\n            type=\"array\"\n            parent_type={object_type}\n            editOnHotkey={false}\n            {...props}\n          />\n        );\n      } else {\n        elements.push(\n          <VariableEditor\n            key={variable.name + '_' + namespace}\n            variable={variable}\n            singleIndent={SINGLE_INDENT}\n            namespace={namespace}\n            type={this.props.type}\n            {...props}\n          />\n        );\n      }\n    });\n    return elements;\n  };\n}\n\n//just store name, value and type with a variable\nclass JsonVariable {\n  constructor(name, value) {\n    this.name = name;\n    this.value = value;\n    this.type = toType(value);\n  }\n}\n\npolyfill(RjvObject);\n\n//export component\nexport default RjvObject;\n","import React from 'react';\nimport JsonObject from './DataTypes/Object';\nimport ArrayGroup from './ArrayGroup';\n\nexport default class extends React.PureComponent {\n  render = () => {\n    const { props } = this;\n    const namespace = [props.name];\n    let ObjectComponent = JsonObject;\n\n    if (props.groupArraysAfterLength && props.src.length > props.groupArraysAfterLength) {\n      ObjectComponent = ArrayGroup;\n    }\n\n    return (\n      <div className=\"pretty-json-container object-container\">\n        <div className=\"object-content\">\n          <ObjectComponent namespace={namespace} depth={0} jsvRoot={true} {...props} />\n        </div>\n      </div>\n    );\n  };\n}\n","import React from 'react';\nimport dispatcher from './../../helpers/dispatcher';\n\nimport { CheckCircle, Add as Cancel } from './../icons';\n\n//global theme\nimport Theme from './../../themes/getStyle';\n\n//this input appears when adding a new value to an object\nexport default class extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: props.input ? props.input : '',\n    };\n  }\n\n  render() {\n    const { theme, rjvId, isValid } = this.props;\n    const { input } = this.state;\n\n    const valid = isValid(input);\n\n    return (\n      <div\n        className=\"key-modal-request\"\n        {...Theme(theme, 'key-modal-request')}\n        onClick={this.closeModal}>\n        <div\n          {...Theme(theme, 'key-modal')}\n          onClick={e => {\n            e.stopPropagation();\n          }}>\n          <div {...Theme(theme, 'key-modal-label')}>Key Name:</div>\n          <div style={{ position: 'relative' }}>\n            <input\n              {...Theme(theme, 'key-modal-input')}\n              className=\"key-modal-input\"\n              ref={el => el && el.focus()}\n              spellCheck={false}\n              value={input}\n              placeholder=\"...\"\n              onChange={e => {\n                this.setState({\n                  input: e.target.value,\n                });\n              }}\n              onKeyPress={e => {\n                if (valid && e.key === 'Enter') {\n                  this.submit();\n                } else if (e.key === 'Escape') {\n                  this.closeModal();\n                }\n              }}\n            />\n            {valid ? (\n              <CheckCircle\n                {...Theme(theme, 'key-modal-submit')}\n                className=\"key-modal-submit\"\n                onClick={e => this.submit()}\n              />\n            ) : null}\n          </div>\n          <span {...Theme(theme, 'key-modal-cancel')}>\n            <Cancel\n              {...Theme(theme, 'key-modal-cancel-icon')}\n              className=\"key-modal-cancel\"\n              onClick={() => {\n                dispatcher.dispatch({\n                  rjvId: rjvId,\n                  name: 'RESET',\n                });\n              }}\n            />\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  closeModal = () => {\n    dispatcher.dispatch({\n      rjvId: this.props.rjvId,\n      name: 'RESET',\n    });\n  };\n\n  submit = () => {\n    this.props.submit(this.state.input);\n  };\n}\n","/* eslint-disable */\nimport React from 'react';\nimport dispatcher from './../../helpers/dispatcher';\nimport ObjectAttributes from './../../stores/ObjectAttributes';\nimport ObjectKeyModal from './ObjectKeyModal';\n\n//global theme\nimport Theme from './../../themes/getStyle';\n\n//this input appears when adding a new value to an object\nexport default class extends React.PureComponent {\n  render() {\n    const { active, theme, rjvId } = this.props;\n\n    return active ? (\n      <ObjectKeyModal rjvId={rjvId} theme={theme} isValid={this.isValid} submit={this.submit} />\n    ) : null;\n  }\n\n  isValid = input => {\n    const { rjvId } = this.props;\n    const request = ObjectAttributes.get(rjvId, 'action', 'new-key-request');\n    return input != '' && Object.keys(request.existing_value).indexOf(input) === -1;\n  };\n\n  submit = input => {\n    const { rjvId } = this.props;\n    let request = ObjectAttributes.get(rjvId, 'action', 'new-key-request');\n    request.new_value = { ...request.existing_value };\n    request.new_value[input] = this.props.defaultValue;\n    dispatcher.dispatch({\n      name: 'VARIABLE_ADDED',\n      rjvId: rjvId,\n      data: request,\n    });\n  };\n}\n","/* eslint-disable */\nimport React from 'react';\nimport dispatcher from './../helpers/dispatcher';\nimport ObjectAttributes from './../stores/ObjectAttributes';\n\nimport { Add as Clear } from './icons';\n\n//global theme\nimport Theme from './../themes/getStyle';\n\n//this input appears when adding a new value to an object\nexport default class extends React.PureComponent {\n  render() {\n    const { message, active, theme, rjvId } = this.props;\n\n    return active ? (\n      <div\n        className=\"validation-failure\"\n        {...Theme(theme, 'validation-failure')}\n        onClick={() => {\n          dispatcher.dispatch({\n            rjvId: rjvId,\n            name: 'RESET',\n          });\n        }}\n      >\n        <span {...Theme(theme, 'validation-failure-label')}>{message}</span>\n        <Clear {...Theme(theme, 'validation-failure-clear')} />\n      </div>\n    ) : null;\n  }\n}\n","/* eslint-disable */\nimport React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport JsonViewer from './components/JsonViewer';\nimport AddKeyRequest from './components/ObjectKeyModal/AddKeyRequest';\nimport ValidationFailure from './components/ValidationFailure';\nimport { toType, isTheme } from './helpers/util';\nimport ObjectAttributes from './stores/ObjectAttributes';\n\n//global theme\nimport Theme from './themes/getStyle';\n\n//forward src through to JsonObject component\nclass ReactJsonView extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //listen to request to add/edit a key to an object\n      addKeyRequest: false,\n      editKeyRequest: false,\n      validationFailure: false,\n      src: ReactJsonView.defaultProps.src,\n      name: ReactJsonView.defaultProps.name,\n      theme: ReactJsonView.defaultProps.theme,\n      validationMessage: ReactJsonView.defaultProps.validationMessage,\n      // the state object also needs to remember the prev prop values, because we need to compare\n      // old and new props in getDerivedStateFromProps().\n      prevSrc: ReactJsonView.defaultProps.src,\n      prevName: ReactJsonView.defaultProps.name,\n      prevTheme: ReactJsonView.defaultProps.theme,\n    };\n  }\n\n  //reference id for this instance\n  rjvId = Date.now().toString();\n\n  //all acceptable props and default values\n  static defaultProps = {\n    src: {},\n    name: 'root',\n    theme: 'rjv-default',\n    collapsed: false,\n    collapseStringsAfterLength: false,\n    shouldCollapse: false,\n    sortKeys: false,\n    groupArraysAfterLength: 100,\n    indentWidth: 4,\n    enableClipboard: true,\n    displayObjectSize: true,\n    displayDataTypes: true,\n    onEdit: false,\n    onDelete: false,\n    onAdd: false,\n    onSelect: false,\n    iconStyle: 'triangle',\n    style: {},\n    validationMessage: 'Validation Error',\n    defaultValue: null,\n    rejectMatching: null,\n  };\n\n  // will trigger whenever setState() is called, or parent passes in new props.\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (\n      nextProps.src !== prevState.prevSrc ||\n      nextProps.name !== prevState.prevName ||\n      nextProps.theme !== prevState.prevTheme\n    ) {\n      // if we pass in new props, we re-validate\n      const newPartialState = {\n        src: nextProps.src,\n        name: nextProps.name,\n        theme: nextProps.theme,\n        validationMessage: nextProps.validationMessage,\n        prevSrc: nextProps.src,\n        prevName: nextProps.name,\n        prevTheme: nextProps.theme,\n      };\n      return ReactJsonView.validateState(newPartialState);\n    }\n    return null;\n  }\n\n  componentDidMount() {\n    // initialize\n    ObjectAttributes.set(this.rjvId, 'global', 'src', this.state.src);\n    // bind to events\n    const listeners = this.getListeners();\n    for (const i in listeners) {\n      ObjectAttributes.on(i + '-' + this.rjvId, listeners[i]);\n    }\n    //reset key request to false once it's observed\n    this.setState({\n      addKeyRequest: false,\n      editKeyRequest: false,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //reset key request to false once it's observed\n    if (prevState.addKeyRequest !== false) {\n      this.setState({\n        addKeyRequest: false,\n      });\n    }\n    if (prevState.editKeyRequest !== false) {\n      this.setState({\n        editKeyRequest: false,\n      });\n    }\n    if (prevProps.src !== this.state.src) {\n      ObjectAttributes.set(this.rjvId, 'global', 'src', this.state.src);\n    }\n  }\n\n  componentWillUnmount() {\n    const listeners = this.getListeners();\n    for (const i in listeners) {\n      ObjectAttributes.removeListener(i + '-' + this.rjvId, listeners[i]);\n    }\n  }\n\n  getListeners = () => {\n    return {\n      reset: this.resetState,\n      'variable-update': this.updateSrc,\n      'add-key-request': this.addKeyRequest,\n    };\n  };\n\n  static validateState = state => {\n    const validatedState = {};\n    //make sure theme is valid\n    if (toType(state.theme) === 'object' && !isTheme(state.theme)) {\n      console.error(\n        'react-json-view error:',\n        'theme prop must be a theme name or valid base-16 theme object.',\n        'defaulting to \"rjv-default\" theme'\n      );\n      validatedState.theme = 'rjv-default';\n    }\n    const type = toType(state.src);\n    if (type !== 'object' && type !== 'array') {\n      console.error(`json tree: src should be json but is ${type}`, state.src);\n      validatedState.name = 'ERROR';\n      validatedState.src = {\n        message: `${type} is not an object`,\n        src: state.src,\n      };\n    }\n    return {\n      // get the original state\n      ...state,\n      // override the original state\n      ...validatedState,\n    };\n  };\n\n  render() {\n    const { validationFailure, validationMessage, addKeyRequest, theme, src, name } = this.state;\n\n    const { style, defaultValue } = this.props;\n\n    return (\n      <div className=\"react-json-view\" style={{ ...Theme(theme, 'app-container').style, ...style }}>\n        <ValidationFailure\n          message={validationMessage}\n          active={validationFailure}\n          theme={theme}\n          rjvId={this.rjvId}\n        />\n        <JsonViewer\n          {...this.props}\n          src={src}\n          name={name}\n          theme={theme}\n          type={toType(src)}\n          rjvId={this.rjvId}\n        />\n        <AddKeyRequest\n          active={addKeyRequest}\n          theme={theme}\n          rjvId={this.rjvId}\n          defaultValue={defaultValue}\n        />\n      </div>\n    );\n  }\n\n  updateSrc = () => {\n    const {\n      name,\n      namespace,\n      new_value,\n      existing_value,\n      variable_removed,\n      updated_src,\n      type,\n    } = ObjectAttributes.get(this.rjvId, 'action', 'variable-update');\n    const { onEdit, onDelete, onAdd } = this.props;\n\n    const { src } = this.state;\n\n    let result;\n\n    const on_edit_payload = {\n      existing_src: src,\n      new_value: new_value,\n      updated_src: updated_src,\n      name: name,\n      namespace: namespace,\n      existing_value: existing_value,\n    };\n\n    switch (type) {\n      case 'variable-added':\n        result = onAdd(on_edit_payload);\n        break;\n      case 'variable-edited':\n        result = onEdit(on_edit_payload);\n        break;\n      case 'variable-removed':\n        result = onDelete(on_edit_payload);\n        break;\n    }\n\n    if (result !== false) {\n      ObjectAttributes.set(this.rjvId, 'global', 'src', updated_src);\n      this.setState({\n        src: updated_src,\n      });\n    } else {\n      this.setState({\n        validationFailure: true,\n      });\n    }\n  };\n\n  addKeyRequest = () => {\n    this.setState({\n      addKeyRequest: true,\n    });\n  };\n\n  resetState = () => {\n    this.setState({\n      validationFailure: false,\n      addKeyRequest: false,\n    });\n  };\n}\n\npolyfill(ReactJsonView);\n\nexport default ReactJsonView;\n","// @flow\n\nimport React, { type Node } from 'react';\n\nimport { Popover, PopoverInteractionKind } from '@blueprintjs/core';\n\ntype P = {\n  anchor: Node,\n  content: Node,\n  contentDesc?: string,\n  interactionKind?: string,\n};\n\nexport default (p: P) => (\n  <Popover\n    hoverCloseDelay={56}\n    hoverOpenDelay={50}\n    interactionKind={p.interactionKind || PopoverInteractionKind.HOVER}\n    popoverClassName=\"bp3-popover-content-sizing\"\n    className=\"bp3-dark\"\n    transitionDuration={48}>\n    {p.anchor}\n    <div className=\"bp3-dark attr-help-content ignore-react-onclickoutside\">\n      {p.contentDesc && <div className=\"attr-pop-content-header\">{p.contentDesc}</div>}\n      <div>{p.content}</div>\n    </div>\n  </Popover>\n);\n","// @flow\nimport React, { Component } from 'react';\nimport { get, throttle } from 'lodash';\nimport { DraggableCore } from 'react-draggable';\nimport type { AnyNode, Changeable, Displayable } from 'models/NodeBase';\nimport JsonTree from 'vendor/JsonTree/js';\nimport InfoPopup from 'components/AttributePane/InfoPopup';\nimport { Hotkey, Hotkeys, HotkeysTarget, PopoverInteractionKind } from '@blueprintjs/core';\nimport NodeBase from 'models/NodeBase';\n\nconst Types = window.Types;\n\ntype P = { node: AnyNode };\ntype S = { fullDocs: boolean, width: number };\n\nclass AttributePane extends Component<P, S> {\n  state = { fullDocs: true, width: 400 };\n  listener: ?string;\n\n  // noinspection JSUnusedGlobalSymbols\n  renderHotkeys() {\n    return (\n      <Hotkeys>\n        <Hotkey\n          group=\"Node Actions\"\n          global={true}\n          combo=\"meta + j\"\n          label=\"Toggle Docs\"\n          onKeyDown={this._toggleDocs}\n        />\n      </Hotkeys>\n    );\n  }\n\n  componentDidMount() {\n    this.props.node && this._setListener(this.props.node);\n  }\n\n  componentDidUpdate(oldProps: P) {\n    if (this.props.node && get(this, 'props.node.id') !== get(oldProps, 'node.id')) {\n      if (oldProps && oldProps.node) {\n        const listener = this.listener;\n        listener && oldProps.node.removeListener(listener);\n      }\n      this._setListener(this.props.node);\n    }\n  }\n\n  _setListener = (node: AnyNode) => {\n    this.listener = node.registerListener(this._updateListener);\n  };\n\n  // No one needs to see that many updates\n  _updateListener = throttle(() => this.forceUpdate(), 60);\n\n  componentWillUnmount() {\n    const {\n      props: { node },\n      listener,\n    } = this;\n    listener && node.removeListener(listener);\n  }\n\n  _helpInfo = (c: Changeable) => {\n    if (!c.type.hasHelpInfo() || this.state.fullDocs) {\n      return null;\n    }\n    return (\n      <InfoPopup\n        anchor={<i className=\"fa fa-eye attr-indicator attr-help\" />}\n        content={c.type.description}\n        contentDesc=\"DESCRIPTION\"\n        interactionKind={PopoverInteractionKind.CLICK}\n      />\n    );\n  };\n\n  _docInfo = (c: Changeable) => {\n    if (!this.state.fullDocs) {\n      return null;\n    }\n    return <div className=\"attr-doc\">{c.type.description}</div>;\n  };\n\n  _changeables = () => {\n    const changeables = this.props.node.changeables();\n    // $FlowIssue\n    return Object.keys(changeables).map((k, j: number) => {\n      const list = (changeables[k]: Changeable[]).map((c: Changeable, i) => (\n        <div key={`changeable-${i}-${k}`}>\n          <div className=\"attr-title\">\n            {c.title}\n            {this._helpInfo(c)}\n            <span style={{ flex: 1 }} />\n            <InfoPopup\n              anchor={<span className=\"attr-type-indicator attr-help\">{c.type.name}</span>}\n              content={c.type.typeDescription}\n              contentDesc=\"TYPE\"\n            />\n          </div>\n          {this._docInfo(c)}\n          <div className={`attr-value-row${i === changeables[k].length - 1 ? ' attr-last' : ''}`}>\n            <MultiTypeEditor item={c} editOnHotkey={i === 0 && j === 0} />\n          </div>\n        </div>\n      ));\n      return (\n        <div key={k}>\n          <div className=\"changeable-section-title\">{k}:</div>\n          <div>{list}</div>\n        </div>\n      );\n    });\n  };\n\n  truncate = (string: string, len: number = 100) => {\n    if (string.length > len) return string.substring(0, len) + '...';\n    else return string;\n  };\n\n  _description = () => {\n    const { node } = this.props;\n    const { fullDocs } = this.state;\n    if (!node.constructor.description) {\n      return null;\n    }\n    const desc = node.constructor.description;\n    // $FlowIssue\n    const t = fullDocs ? desc : this.truncate(desc);\n    return <div className={`node-description`}>{t}</div>;\n  };\n\n  _signature = () => {\n    return this.props.node.signature(0, {\n      fontSize: 10,\n      padding: '0 16px 12px',\n      color: 'rgba(250, 250, 250, 0.8)',\n    });\n  };\n\n  _toggleDocs = () => this.setState({ fullDocs: !this.state.fullDocs });\n\n  _onResize = (e: MouseEvent) => this.setState({ width: window.innerWidth - e.clientX });\n\n  render() {\n    if (!this.props.node) {\n      return null;\n    }\n    const { fullDocs, width } = this.state;\n    return (\n      <div className=\"attribute-pane ignore-react-onclickoutside\" style={{ width }}>\n        <h3 className=\"pane-header\">\n          {this.props.node.title || NodeBase.nameFrom(this.props.node.constructor)}\n        </h3>\n        {this._signature()}\n        {this._description()}\n        <div className=\"attr-doc-toggle\" onClick={this._toggleDocs}>\n          {fullDocs ? 'Hide' : 'Expand'} Docs\n        </div>\n        <hr />\n        <div className=\"attr-list\">{this._changeables()}</div>\n        <DraggableCore onDrag={this._onResize}>\n          <div id=\"attr-pane-resizer\" />\n        </DraggableCore>\n      </div>\n    );\n  }\n}\n\ntype MP = {\n  item: Displayable,\n  disabled?: boolean,\n  editOnHotkey?: boolean,\n};\n\nclass MultiTypeEditor extends Component<MP> {\n  static defaultProps = { disabled: false, editOnHotkey: false };\n\n  _isComplex = (): boolean => {\n    if (this.props.item.type.isA(Types.any)) {\n      // Best guess when we can't know\n      return typeof this.props.item.value === 'object';\n    }\n    return this.props.item.type.isComplex();\n  };\n\n  _onEdit = (e: { updated_src: Object }) => {\n    const onChange = get(this.props, 'item.onChange');\n    if (onChange) {\n      onChange(this._isComplex() ? e.updated_src : e.updated_src.value);\n    }\n  };\n\n  _getEdit = () => {\n    if (get(this.props, 'item.onChange')) {\n      return this._onEdit;\n    }\n    return undefined;\n  };\n\n  render() {\n    const { value, type } = this.props.item;\n    const complex = this._isComplex();\n    const val = complex ? value : { value };\n    return (\n      <JsonTree\n        src={val}\n        attrType={type}\n        isPrimitive={!complex}\n        name={null}\n        indentWidth={2}\n        collapsed={1}\n        onEdit={this._getEdit()}\n        enableClipboard={false}\n        displayObjectSize={false}\n        collapseStringsAfterLength={20}\n        displayDataTypes={false}\n        rejectMatching={/^_/}\n        editOnHotkey={this.props.editOnHotkey}\n      />\n    );\n  }\n}\n\nexport default HotkeysTarget(AttributePane);\n","// @flow\nimport React from 'react';\nimport type { Node } from 'react';\nimport FuzzySearch from 'fuzzy-search';\nimport { Omnibar, ItemRenderer, type IOmnibarProps } from '@blueprintjs/select';\nimport { Menu, MenuItem } from '@blueprintjs/core';\nimport type { AnyNode } from 'models/NodeBase';\nimport { signatureFor } from 'components/util';\n\nconst allNodes = window.allNodes;\ntype T = Class<AnyNode>;\n\nconst titleMaxLen = 20;\nconst sigMaxLen = 12;\n\nconst renderItem: ItemRenderer<T> = (node, { handleClick, modifiers, query }) => {\n  return (\n    <MenuItem\n      className=\"bp3-dark\"\n      active={modifiers.active}\n      disabled={modifiers.disabled}\n      label={signatureFor(node, sigMaxLen)}\n      key={node.displayName}\n      onClick={handleClick}\n      text={node.displayName.substring(0, titleMaxLen)}\n    />\n  );\n};\n\nconst noResults = <MenuItem disabled={true} text=\"No matching nodes\" />;\nconst itemListRenderer = (o: {\n  activeItem: T | null,\n  filteredItems: T[],\n  items: T[],\n  query: string,\n  itemsParentRef: (ref: HTMLElement | null) => void,\n  renderItem: (item: T, index: number) => Node,\n}): Node => {\n  const items = o.filteredItems.map(o.renderItem).filter(item => item != null);\n  const content = items.length > 0 ? items : noResults;\n  return <Menu ulRef={o.itemsParentRef}>{content}</Menu>;\n};\n\nconst searcher = new FuzzySearch(allNodes, ['displayName', 'description']);\nconst itemsPredicate = q => (Boolean(q) ? searcher.search(q) : allNodes).slice(0, 12);\n\nexport default (p: IOmnibarProps<T>) => (\n  <Omnibar\n    {...p}\n    items={allNodes}\n    className=\"bp3-dark\"\n    itemListPredicate={itemsPredicate}\n    resetOnSelect={true}\n    itemListRenderer={itemListRenderer}\n    itemRenderer={renderItem}\n    noResults={noResults}\n  />\n);\n","// @flow\n\nimport React, { Component } from 'react';\nimport { get } from 'lodash';\ntype P = { onFile: File => void };\n\nclass FileUpload extends Component<P> {\n  fileInput: ?HTMLElement;\n\n  openFileInput = () => {\n    this.fileInput && this.fileInput.click();\n  };\n\n  _onFile = (event: SyntheticInputEvent<*>) => {\n    const file = get(event, ['target', 'files', 0]);\n    if (file) {\n      this.props.onFile(file);\n    }\n  };\n\n  render() {\n    return (\n      <input\n        onChange={this._onFile}\n        style={{ display: 'none' }}\n        ref={input => (this.fileInput = input)}\n        type=\"file\"\n      />\n    );\n  }\n}\n\nexport default FileUpload;\n","// @flow\n\nimport React from 'react';\nimport { get } from 'lodash';\nimport { Dialog, Classes, Intent, Button, Label } from '@blueprintjs/core';\n\ntype P = { isOpen: boolean, handleClose: () => void, saveFile: string => void, initial: ?string };\ntype S = { name: string };\n\nexport default class SaveDialog extends React.Component<P, S> {\n  constructor(props: P) {\n    super(props);\n    this.state = { name: props.initial || '' };\n  }\n\n  _onChange = (e: SyntheticInputEvent<*>) => {\n    this.setState({ name: e.target.value });\n  };\n\n  _onInputKeyUp = (e: SyntheticInputEvent<*>) => {\n    if (get(e, 'key') === 'Enter') {\n      this._onSave();\n    }\n  };\n\n  _onSave = () => {\n    this.props.saveFile(this.state.name);\n  };\n\n  render() {\n    const { handleClose, isOpen } = this.props;\n    const { name } = this.state;\n    return (\n      <Dialog\n        className=\"bp3-dark\"\n        icon=\"save\"\n        onClose={handleClose}\n        title=\"Export Graph\"\n        isOpen={isOpen}>\n        <div className={Classes.DIALOG_BODY}>\n          <p>Save a serialized version of this graph</p>\n          <Label>\n            Save As...\n            <input\n              onKeyUp={this._onInputKeyUp}\n              autoFocus\n              className={Classes.INPUT}\n              type=\"text\"\n              placeholder=\"project1\"\n              dir=\"auto\"\n              onChange={this._onChange}\n              value={name}\n            />\n          </Label>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button intent={Intent.PRIMARY} onClick={this._onSave}>\n              Download\n            </Button>\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport React from 'react';\nimport type { Node } from 'react';\nimport { get } from 'lodash';\nimport FuzzySearch from 'fuzzy-search';\nimport { Omnibar, ItemRenderer, type IOmnibarProps } from '@blueprintjs/select';\nimport Graph from 'models/Graph';\nimport { Menu, MenuItem } from '@blueprintjs/core';\n\nimport type { AnyNode } from 'models/NodeBase';\n\ntype T = AnyNode;\n\nconst titleMaxLen = 20;\n\nconst renderItem: ItemRenderer<T> = (node, { handleClick, modifiers, query }) => {\n  return (\n    <MenuItem\n      className=\"bp3-dark\"\n      active={modifiers.active}\n      disabled={modifiers.disabled}\n      key={node.id}\n      onClick={handleClick}\n      text={String(node.name()).substring(0, titleMaxLen)}\n    />\n  );\n};\n\nconst noResults = <MenuItem disabled={true} text=\"No matching nodes\" />;\nconst itemListRenderer = (o: {\n  activeItem: T | null,\n  filteredItems: T[],\n  items: T[],\n  query: string,\n  itemsParentRef: (ref: HTMLElement | null) => void,\n  renderItem: (item: T, index: number) => Node,\n}): Node => {\n  const items = o.filteredItems.map(o.renderItem).filter(item => item != null);\n  const content = items.length > 0 ? items : noResults;\n  return <Menu ulRef={o.itemsParentRef}>{content}</Menu>;\n};\n\nconst itemsPredicate = (q, searcher, all) => (Boolean(q) ? searcher.search(q) : all).slice(0, 12);\n\ntype P = {\n  graph: Graph,\n};\nexport default (p: IOmnibarProps<T> & P) => {\n  const nodes = get(p.graph, 'nodes', []).map(n => n.node);\n  const searcher = new FuzzySearch(nodes.map(n => ({ ...n, _name: n.name() })), [\n    '_name',\n    'constructor.displayName',\n  ]);\n  return (\n    <Omnibar\n      {...p}\n      items={nodes}\n      className=\"bp3-dark\"\n      itemListPredicate={q => itemsPredicate(q, searcher, nodes)}\n      resetOnSelect={true}\n      itemListRenderer={itemListRenderer}\n      itemRenderer={renderItem}\n      noResults={<MenuItem disabled={true} text=\"No matching nodes\" />}\n    />\n  );\n};\n","// @flow\nimport React from 'react';\nimport type { Node } from 'react';\nimport FuzzySearch from 'fuzzy-search';\nimport { Omnibar, ItemRenderer, type IOmnibarProps } from '@blueprintjs/select';\nimport { Menu, MenuItem } from '@blueprintjs/core';\nimport type { GraphSerialization } from 'models/Graph';\n\ntype T = GraphSerialization;\n\nexport const examples = [\n  require('models/examples/nude, eternally.json'),\n  require('models/examples/in the gardens of eden.json'),\n  require('models/examples/platonic plague.json'),\n  require('models/examples/the music while the music lasts.json'),\n  require('models/examples/stephen wolfram.json'),\n  require('models/examples/shaders.json'),\n  require('models/examples/percept nets.json'),\n  require('models/examples/soundfont-midi.json'),\n  require('models/examples/soundfont-tone.json'),\n  require('models/examples/midi-in.json'),\n];\n\nconst titleMaxLen = 40;\n\nconst renderItem: ItemRenderer<T> = (node, { handleClick, modifiers }) => {\n  return (\n    <MenuItem\n      className=\"bp3-dark\"\n      active={modifiers.active}\n      disabled={modifiers.disabled}\n      label={`${node.nodes.length} nodes`}\n      key={node.name || 'untitled'}\n      onClick={handleClick}\n      text={(node.name || 'untitled').substring(0, titleMaxLen)}\n    />\n  );\n};\n\nconst noResults = <MenuItem disabled={true} text=\"No matching examples\" />;\n\nconst itemListRenderer = (o: {\n  activeItem: T | null,\n  filteredItems: T[],\n  items: T[],\n  query: string,\n  itemsParentRef: (ref: HTMLElement | null) => void,\n  renderItem: (item: T, index: number) => Node,\n}): Node => {\n  const items = o.filteredItems.map(o.renderItem).filter(item => item != null);\n  const content = items.length > 0 ? items : noResults;\n  return <Menu ulRef={o.itemsParentRef}>{content}</Menu>;\n};\n\nconst searcher = new FuzzySearch(examples, ['name']);\nconst itemsPredicate = q => (Boolean(q) ? searcher.search(q) : examples).slice(0, 12);\n\nexport default (p: IOmnibarProps<T>) => (\n  <Omnibar\n    {...p}\n    items={examples}\n    className=\"bp3-dark\"\n    itemListPredicate={itemsPredicate}\n    resetOnSelect={true}\n    itemListRenderer={itemListRenderer}\n    itemRenderer={renderItem}\n    noResults={noResults}\n    inputProps={{ placeholder: 'Examples...' }}\n  />\n);\n","/* eslint-disable */\nimport ReactDOM from 'react-dom';\nimport { allNodes } from 'models/nodes';\n\nconst renderAttr = ([title, type]) => {\n  const def = type.defaultValue && JSON.stringify(type.defaultValue);\n  return `\\`${title}\\`: \\`${type.name}\\` _${type.type}_${def ? ` default: \\`${def}\\`` : ''}\\n\\n${\n    type.description\n  }`;\n};\n\nconst docs = () =>\n  allNodes.map(n => {\n    let desc = '';\n    if (n.description) {\n      const r = ReactDOM.render(n.description, document.createElement('div'));\n      desc = r.textContent;\n    }\n    return `\n## ${n.displayName}\n\n${desc}\n  \n\n##### inputs (${Object.keys(n.schema.input).length})\n\n${Object.entries(n.schema.input)\n  .map(renderAttr)\n  .join('\\n\\n')}\n  \n##### outputs (${Object.keys(n.schema.output).length})\n\n${Object.entries(n.schema.output)\n  .map(renderAttr)\n  .join('\\n\\n')}\n  \n`;\n  });\n\nexport function download(str, exportName = 'docs') {\n  const dataStr = 'data:text;charset=utf-8,' + encodeURIComponent(str);\n  const anchor = document.createElement('a');\n  anchor.setAttribute('href', dataStr);\n  anchor.setAttribute('download', exportName + '.md');\n  // $FlowIssue\n  document.body.appendChild(anchor);\n  anchor.click();\n  anchor.remove();\n}\n\nconst md = () => {\n  const nodes = docs();\n  return `\n# Node Docs\n\nHere's a list of all ${nodes.length} current nodes, their descriptions, and i/o.\n\n${nodes.join('\\n\\n')}    \n`;\n};\n// const output = md();\n// download(output);\n// console.log(output);\n","// @flow\n\nimport React from 'react';\nimport { createSelector } from 'redux-starter-kit';\nimport { AnchorButton, Tooltip } from '@blueprintjs/core';\nimport { connect } from 'react-redux';\nimport { selectInfoOpen } from 'redux/ducks/graph';\n\ntype P = {\n  loadExample: () => any,\n  insertNode: () => any,\n  toggleVis: () => any,\n  graphVisible: boolean,\n  toggleDebug: () => any,\n  exportJSON: () => any,\n  loadJSON: () => any,\n  title: string,\n  toggleInfo: () => any,\n  infoShowing: boolean,\n};\nconst Toolbar = ({\n  loadExample,\n  insertNode,\n  toggleVis,\n  graphVisible,\n  toggleDebug,\n  exportJSON,\n  loadJSON,\n  title,\n  toggleInfo,\n  infoShowing,\n}: P) => {\n  return (\n    <div className=\"graph-toolbar ignore-react-onclickoutside\">\n      <div style={{ ...styles.toolSection, ...styles.leftAlign }}>\n        <Tooltip content=\"load an example\">\n          <AnchorButton minimal icon=\"folder-shared-open\" large onClick={loadExample} />\n        </Tooltip>\n        <Tooltip content=\"insert a new node\">\n          <AnchorButton minimal icon=\"new-link\" large onClick={insertNode} />\n        </Tooltip>\n        <Tooltip content={`${graphVisible ? 'hide' : 'show'} graph`}>\n          <AnchorButton\n            minimal\n            icon={graphVisible ? 'eye-open' : 'eye-off'}\n            large\n            onClick={toggleVis}\n          />\n        </Tooltip>\n        <Tooltip content=\"toggle debug mode\">\n          <AnchorButton minimal icon=\"build\" large onClick={toggleDebug} />\n        </Tooltip>\n        <Tooltip content=\"export graph as JSON\">\n          <AnchorButton minimal icon=\"download\" large onClick={exportJSON} />\n        </Tooltip>\n        <Tooltip content=\"open JSON file\">\n          <AnchorButton minimal icon=\"upload\" large onClick={loadJSON} />\n        </Tooltip>\n        <Tooltip content=\"node list API docs\">\n          <AnchorButton\n            minimal\n            icon=\"panel-stats\"\n            large\n            href=\"https://github.com/kousun12/eternal/blob/master/docs.md\"\n            target=\"_blank\"\n          />\n        </Tooltip>\n      </div>\n      <h2 className=\"graph-title\">{title}</h2>\n      <div style={{ ...styles.toolSection, ...styles.rightAlign }}>\n        <Tooltip content=\"open github repo\">\n          <AnchorButton\n            minimal\n            icon=\"git-repo\"\n            large\n            href=\"https://github.com/kousun12/eternal\"\n            target=\"_blank\"\n          />\n        </Tooltip>\n        <Tooltip content=\"show keyboard shortcuts\">\n          <AnchorButton minimal icon=\"key-command\" large onClick={_showHotKeys} />\n        </Tooltip>\n        <Tooltip content={`${infoShowing ? 'hide' : 'show'} info pane`}>\n          <AnchorButton\n            minimal\n            icon={`chevron-${infoShowing ? 'right' : 'left'}`}\n            large\n            onClick={toggleInfo}\n          />\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nconst selector = createSelector(\n  [selectInfoOpen],\n  i => ({ infoShowing: Boolean(i) })\n);\n\nexport default connect(selector)(Toolbar);\n\nconst _showHotKeys = () => {\n  document.dispatchEvent(\n    new KeyboardEvent('keydown', { which: 47, keyCode: 47, shiftKey: true, bubbles: true })\n  );\n};\n\nconst styles = {\n  toolSection: { flex: 1, display: 'flex', alignItems: 'center' },\n  leftAlign: { justifyContent: 'flex-start' },\n  rightAlign: { justifyContent: 'flex-end' },\n};\n","// @flow\n\nimport React from 'react';\nimport { Button, Classes, Dialog } from '@blueprintjs/core';\n\ntype P = { title: string, onClose: () => void, load: () => void };\nconst btnTxt = '👾 ok computer';\nexport default ({ title, onClose, load }: P) => (\n  <Dialog\n    canOutsideClickClose={false}\n    isOpen={Boolean(title)}\n    className=\"bp3-dark\"\n    title=\"Load...\"\n    onClose={onClose}\n  >\n    <div className={Classes.DIALOG_FOOTER}>\n      <div className={Classes.DIALOG_BODY}>\n        <p>you are about to load the example</p>\n        <p>~{title}~</p>\n      </div>\n      <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n        <Button onClick={load}>{btnTxt}</Button>\n      </div>\n    </div>\n  </Dialog>\n);\n","// @flow\nimport React from 'react';\nimport { zooms, setScale as _setScale } from 'redux/ducks/graph';\nimport { connect } from 'react-redux';\nimport { Slider } from '@blueprintjs/core';\n\ntype P = {| zoom: number, setScale: number => void |};\n\nconst Zoomer = ({ zoom, setScale }: P) => {\n  return (\n    <div className=\"zoomer\">\n      <Slider\n        className=\"bp3-dark\"\n        min={0}\n        max={zooms.length - 1}\n        stepSize={1}\n        labelStepSize={10}\n        onChange={setScale}\n        value={zoom}\n        labelRenderer={v => `${zooms[v] / 100}x`}\n        showTrackFill={false}\n      />\n    </div>\n  );\n};\n\nexport default connect(\n  s => ({ zoom: s.graph.view.zoom }),\n  d => ({ setScale: s => d(_setScale(s)) })\n)(Zoomer);\n","// @flow\n\nimport './boot';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'redux-starter-kit';\nimport { get } from 'lodash';\nimport { Hotkey, Hotkeys, HotkeysTarget, setHotkeysDialogProps } from '@blueprintjs/core';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'font-awesome/scss/font-awesome.scss';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/select/lib/css/blueprint-select.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\n\nimport NodeGraph from 'components/NodeGraph';\nimport AttributePane from 'components/AttributePane';\nimport Searcher from 'components/SearchBar';\nimport type { GraphSerialization } from 'models/Graph';\nimport Graph from 'models/Graph';\nimport type { AnyNode } from 'models/NodeBase';\nimport { downloadObj } from 'helpers';\nimport FileUpload from 'components/FileUpload';\nimport SaveDialog from 'components/SaveDialog';\nimport NodeSearcher from 'components/NodeSearcher';\nimport ExampleSearch, { examples } from 'components/ExampleSearch';\nimport './docgen';\n\nimport 'eternal.scss';\nimport type { Pos } from 'types';\nimport Toolbar from 'components/Toolbar';\nimport LoadPrompt from 'components/dialogs/LoadPrompt';\nimport { setInfoOpen as _setInfoOpen, selectInfoOpen } from 'redux/ducks/graph';\nimport Zoomer from 'components/Zoomer';\n\nconst welcomeGraph = require('models/examples/welcome.json');\n\ntype P = { setInfoOpen: (?string) => void, showNode: ?string };\ntype S = {\n  graph: ?Graph,\n  searchOpen: boolean,\n  saveOpen: boolean,\n  searchingNodes: boolean,\n  searchingExamples: boolean,\n  visible: boolean,\n  promptLoad: ?string,\n};\n\nconst defaultNodePos = { x: 70, y: 120 };\n\nclass App extends Component<P, S> {\n  nodeIndex: number = 0;\n  mostRecentNode: ?AnyNode = null;\n  fileUpload: ?FileUpload;\n  _mousePos: Pos = defaultNodePos;\n  _insertPos: ?Pos = null;\n  state = {\n    searchOpen: false,\n    saveOpen: false,\n    graph: null,\n    searchingNodes: false,\n    visible: true,\n    searchingExamples: false,\n    promptLoad: null,\n  };\n\n  componentDidMount() {\n    let showWelcome = true;\n    const exId = get(window.location.search.match(/[?&]e=([\\w-\\d% +]+)&?/), 1);\n    if (exId) {\n      const name = decodeURIComponent(exId).replace(/\\+/g, ' ');\n      const exFromUrl = examples.find(e => e.name === name);\n      if (exFromUrl) {\n        showWelcome = false;\n        if (process.env.NODE_ENV === 'development') {\n          this._loadUrl(exFromUrl);\n        } else {\n          this.setState({ promptLoad: name });\n        }\n      }\n    }\n    showWelcome && this._setGraph(Graph.load(welcomeGraph));\n\n    const hide = get(window.location.search.match(/[?&]h=(\\d)&?/), 1);\n    typeof hide === 'string' && this.setState({ visible: hide === '0' });\n\n    const debug = get(window.location.search.match(/[?&]d=(\\d)&?/), 1);\n    typeof debug === 'string' && debug === '1' && this._toggleDebug();\n\n    document.addEventListener('mousemove', this._onMouseMove);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this._onMouseMove);\n  }\n\n  _onMouseMove = (me: MouseEvent) => {\n    this._mousePos = { x: me.clientX, y: me.clientY };\n  };\n\n  _setGraph = (graph: Graph) => {\n    this.state.graph && this.state.graph.dispose();\n    window['$node'] = null;\n    this.setState({ graph: null }, () => {\n      this.mostRecentNode = get(graph.nodes, [0, 'node']);\n      const readme = graph.nodes.find(nis => nis.node.title === 'README');\n      this._setInfoOpen(readme ? readme.node.id : null);\n      this.setState({ graph }, () => (window['$graph'] = graph));\n    });\n  };\n\n  _setInfoOpen = (id: ?string) => this.props.showNode !== id && this.props.setInfoOpen(id);\n  _onSearch = () => !this.state.searchOpen && this.setState({ searchOpen: true });\n\n  _searchExamples = () =>\n    !this.state.searchingExamples && this.setState({ searchingExamples: true });\n\n  _exportJSON = (name: string) => {\n    const { graph } = this.state;\n    graph && downloadObj(graph.serialize(name), name);\n    this._closeSave();\n  };\n\n  _loadJSON = () => this.fileUpload && this.fileUpload.openFileInput();\n\n  _onFileUpload = (file: File) => Graph.fromFile(file, this._loadGraph);\n\n  _loadGraph = (json: GraphSerialization) => {\n    const exId = get(window.location.search.match(/[?&]e=([\\w-\\d% +]+)&?/), 1);\n    if (exId) {\n      this._reload();\n    } else {\n      this._setGraph(Graph.load(json));\n    }\n  };\n\n  _loadExample = (json: GraphSerialization) => {\n    window.location.search = `?e=${encodeURIComponent((json.name || '').replace(/ /g, '+'))}`;\n  };\n\n  _toggleDebug = () => {\n    window['$debug'] = !window['$debug'];\n    this.setState({ visible: false }, () => this.setState({ visible: true }));\n  };\n\n  _addNode = (cls: Class<AnyNode>) => {\n    const { graph } = this.state;\n    this.setState({ searchOpen: false });\n    if (graph) {\n      const node = new cls();\n      graph.addNode(node, this._insertPos || this._mousePos);\n      this._onNodeSelect(node);\n    }\n    this._insertPos = null;\n  };\n\n  _onNodeSelect = (node: ?AnyNode, idx?: number) => {\n    this._setInfoOpen(get(node, 'id', null));\n    const _node = node;\n    if (_node) {\n      this.mostRecentNode = _node;\n      if (typeof idx === 'number') {\n        this.nodeIndex = idx;\n      }\n      window['$node'] = node;\n    }\n    this.state.searchingNodes && this._closeSearch();\n  };\n\n  _closeSearch = () =>\n    this.setState({ searchOpen: false, searchingNodes: false, searchingExamples: false });\n  _closeSave = () => this.setState({ saveOpen: false });\n  _showSave = () => this.setState({ saveOpen: true });\n  _showNodeSearch = () => this.setState({ searchingNodes: true });\n  _toggleGraph = () => this.setState({ visible: !this.state.visible });\n\n  _loadUrl = (example?: GraphSerialization) => {\n    const { promptLoad } = this.state;\n    const exJson = Graph.serialization(example);\n    if (promptLoad || exJson) {\n      const json = exJson || examples.find(e => e.name === promptLoad);\n      json && this._setGraph(Graph.load(json));\n    }\n    this.setState({ promptLoad: null });\n  };\n\n  _nextNode = () => {\n    if (!this.props.showNode) return;\n    const nodes = get(this.state.graph, 'nodes', []);\n    if (nodes.length < 2) return;\n    this.nodeIndex = (this.nodeIndex + 1) % nodes.length;\n    this._onNodeSelect(nodes[this.nodeIndex].node);\n  };\n\n  _prevNode = () => {\n    if (!this.props.showNode) return;\n    const nodes = get(this.state.graph, 'nodes', []);\n    if (nodes.length < 2) return;\n    this.nodeIndex = (((this.nodeIndex - 1) % nodes.length) + nodes.length) % nodes.length;\n    this._onNodeSelect(nodes[this.nodeIndex].node);\n  };\n\n  _toggleInfo = () =>\n    this.props.setInfoOpen(this.props.showNode ? null : get(this.mostRecentNode, 'id'));\n\n  _reload = () => window.location.replace('/');\n\n  _closePrompt = () => {\n    this.setState({ promptLoad: null });\n    this._reload();\n  };\n\n  render() {\n    const {\n      graph,\n      searchOpen,\n      saveOpen,\n      searchingNodes,\n      visible,\n      searchingExamples,\n      promptLoad,\n    } = this.state;\n    const { showNode } = this.props;\n    const title = get(graph, 'name', '');\n    const inPane = showNode && graph ? get(graph.nodeWithId(showNode), 'node', null) : null;\n    return (\n      <>\n        <Toolbar\n          loadExample={this._searchExamples}\n          insertNode={this._manualInsert}\n          toggleVis={this._toggleGraph}\n          graphVisible={visible}\n          toggleDebug={this._toggleDebug}\n          exportJSON={this._showSave}\n          loadJSON={this._loadJSON}\n          title={title}\n          toggleInfo={this._toggleInfo}\n        />\n        {graph && (\n          <NodeGraph visible={visible} graph={graph} onNodeSelectionChange={this._onNodeSelect} />\n        )}\n        <AttributePane node={inPane} />\n        <Zoomer />\n        {saveOpen && (\n          <SaveDialog\n            initial={title}\n            isOpen={saveOpen}\n            handleClose={this._closeSave}\n            saveFile={this._exportJSON}\n          />\n        )}\n        <Searcher isOpen={searchOpen} onItemSelect={this._addNode} onClose={this._closeSearch} />\n        {graph && (\n          <NodeSearcher\n            isOpen={searchingNodes}\n            onItemSelect={this._onNodeSelect}\n            onClose={this._closeSearch}\n            graph={graph}\n          />\n        )}\n        <ExampleSearch\n          isOpen={searchingExamples}\n          onItemSelect={this._loadExample}\n          onClose={this._closeSearch}\n        />\n        {promptLoad && (\n          <LoadPrompt onClose={this._closePrompt} title={promptLoad} load={this._loadUrl} />\n        )}\n        <FileUpload onFile={this._onFileUpload} ref={r => (this.fileUpload = r)} />\n      </>\n    );\n  }\n\n  _manualInsert = () => {\n    this._onSearch();\n    this._insertPos = defaultNodePos;\n  };\n\n  // noinspection JSUnusedGlobalSymbols\n  renderHotkeys() {\n    // NB for some reason moving this to a component doesn't work\n    return this.state.promptLoad ? (\n      <Hotkeys>\n        <Hotkey global combo=\"enter\" label=\"Load Example\" onKeyDown={this._loadUrl} />\n      </Hotkeys>\n    ) : (\n      <Hotkeys>\n        <Hotkey\n          global\n          combo=\"alt + e\"\n          label=\"Load an Example...\"\n          onKeyDown={this._searchExamples}\n        />\n        <Hotkey global combo=\"meta + k\" label=\"Add Node\" onKeyDown={this._onSearch} />\n        <Hotkey global combo=\"esc\" label=\"Info Pane (show / hide)\" onKeyDown={this._toggleInfo} />\n        <Hotkey\n          global\n          combo=\"shift + meta + v\"\n          label=\"Graph (show / hide)\"\n          onKeyDown={this._toggleGraph}\n        />\n        <Hotkey\n          global\n          combo=\"shift + meta + f\"\n          label=\"Search existing nodes\"\n          onKeyDown={this._showNodeSearch}\n        />\n        <Hotkey global combo=\"shift + meta + s\" label=\"Export as JSON\" onKeyDown={this._showSave} />\n        <Hotkey global combo=\"shift + meta + o\" label=\"Load from JSON\" onKeyDown={this._loadJSON} />\n        <Hotkey global combo=\"shift + meta + x\" label=\"Clear All\" onKeyDown={this._reload} />\n        <Hotkey global combo=\"alt + d\" label=\"Debug Mode\" onKeyDown={this._toggleDebug} />\n        <Hotkey global combo=\"j\" label=\"Next Node\" onKeyDown={this._nextNode} />\n        <Hotkey global combo=\"k\" label=\"Prev Node\" onKeyDown={this._prevNode} />\n      </Hotkeys>\n    );\n  }\n}\n\nsetHotkeysDialogProps({ className: 'bp3-dark', globalHotkeysGroup: 'Menu' });\nconst AppWithHK = HotkeysTarget(App);\nconst select = createSelector(\n  [selectInfoOpen],\n  showNode => ({ showNode })\n);\nexport default connect(\n  select,\n  d => ({ setInfoOpen: n => d(_setInfoOpen(n)) })\n)(AppWithHK);\n","// @flow\n\nimport { combineReducers, createSlice, type PayloadAction as PA } from 'redux-starter-kit';\nimport { fromPairs } from 'lodash';\nimport type { State } from 'redux/types';\nimport { range } from 'utils/array';\nimport type { Pos } from 'types';\n\ntype ViewState = {| zoom: number, pan: Pos |};\nexport type PosMemo = { [string]: Pos };\nexport type GraphState = {|\n  selected: string[],\n  infoOpen: ?string,\n  view: ViewState,\n  nodePos: PosMemo,\n|};\n\nconst selectedSlice = createSlice({\n  slice: 'selected',\n  initialState: [],\n  reducers: { selSet: (selected: string[], a: PA<string[]>) => a.payload },\n});\n\nconst infoOpenSlice = createSlice({\n  slice: 'infoOpen',\n  initialState: null,\n  reducers: { setInfoOpen: (infoOpen: ?string, a: PA<?string>) => a.payload },\n});\n\nexport const zooms = range([5, 205], 5, 0);\nconst defView = { pan: { x: 0, y: 0 }, zoom: zooms.indexOf(100) };\n\n// NB using immer to update state, which looks like mutation but is actually not\nconst viewSlice = createSlice({\n  slice: 'view',\n  initialState: defView,\n  reducers: {\n    setScale: (v: ViewState, a: PA<number>) => {\n      v.zoom = a.payload;\n    },\n    zoomIn: (v: ViewState) => {\n      v.zoom = Math.min(zooms.length - 1, v.zoom + 1);\n    },\n    zoomOut: (v: ViewState) => {\n      v.zoom = Math.max(0, v.zoom - 1);\n    },\n    zoomReset: (v: ViewState) => {\n      v.zoom = zooms.indexOf(100);\n    },\n    setPan: (v: ViewState, a: PA<Pos>) => {\n      v.pan = a.payload;\n    },\n  },\n});\n\nconst nodePosSlice = createSlice({\n  slice: 'nodePos',\n  initialState: {},\n  reducers: { updatePos: (memo: PosMemo, a: PA<PosMemo>) => ({ ...memo, ...a.payload }) },\n});\n\nexport const selectedS = (s: State) => ({\n  selected: fromPairs(s.graph.selected.map(id => [id, true])),\n  selectCount: s.graph.selected.length,\n});\n\nexport type SelectedView = {| pan: Pos, scale: number, scaleInverse: number |};\nexport const selectView = (s: State): SelectedView => {\n  const scale = zooms[s.graph.view.zoom] / 100;\n  return { pan: s.graph.view.pan, scale, scaleInverse: 1 / scale };\n};\n\nexport const selectInfoOpen = (s: State) => s.graph.infoOpen;\nexport const selectPositions = (s: State) => s.graph.nodePos;\n\nexport const { selSet } = selectedSlice.actions;\nexport const { setInfoOpen } = infoOpenSlice.actions;\nexport const { zoomIn, zoomOut, zoomReset, setPan, setScale } = viewSlice.actions;\nexport const { updatePos } = nodePosSlice.actions;\n\nexport default combineReducers({\n  selected: selectedSlice.reducer,\n  infoOpen: infoOpenSlice.reducer,\n  view: viewSlice.reducer,\n  nodePos: nodePosSlice.reducer,\n});\n","// @flow\n\nexport const range = (range: [number, number], increments: number, fixed: number = 2): number[] => {\n  const r = [];\n  let cur = range[0];\n  while (cur <= range[1]) {\n    r.push(cur);\n    cur += increments;\n  }\n  return r.map(n => (fixed === 0 ? parseInt(n.toFixed(fixed), 10) : parseFloat(n.toFixed(fixed))));\n};\n","// @flow\nimport { combineReducers } from 'redux-starter-kit';\nimport graph from 'redux/ducks/graph';\n\nconst rootReducer = combineReducers({ graph });\n\nexport default rootReducer;\n","// @flow\nimport { configureStore } from 'redux-starter-kit';\n\nimport rootReducer from './rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './App';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/rootStore';\n\nimport * as serviceWorker from './serviceWorker';\nserviceWorker.unregister();\n\nconst render = () => {\n  const Eternal = require('./App').default;\n  ReactDOM.render(\n    <Provider store={store}>\n      <Eternal className=\"bp3-dark\" />\n    </Provider>,\n    document.getElementById('eternal-root')\n  );\n};\n\nrender();\n"],"sourceRoot":""}